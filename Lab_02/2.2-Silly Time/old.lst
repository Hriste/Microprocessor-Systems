                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Apr  5 2014) (MINGW32)
                                      4 ; This file was generated Mon Sep 19 20:20:09 2016
                                      5 ;--------------------------------------------------------
                                      6 	.module old
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _putchar
                                     14 	.globl _printf
                                     15 	.globl _Sys_Init
                                     16 	.globl _UART0_Init
                                     17 	.globl _SYSCLK_Init
                                     18 	.globl _SPIF
                                     19 	.globl _WCOL
                                     20 	.globl _MODF
                                     21 	.globl _RXOVRN
                                     22 	.globl _TXBSY
                                     23 	.globl _SLVSEL
                                     24 	.globl _MSTEN
                                     25 	.globl _SPIEN
                                     26 	.globl _AD0EN
                                     27 	.globl _ADCEN
                                     28 	.globl _AD0TM
                                     29 	.globl _ADCTM
                                     30 	.globl _AD0INT
                                     31 	.globl _ADCINT
                                     32 	.globl _AD0BUSY
                                     33 	.globl _ADBUSY
                                     34 	.globl _AD0CM1
                                     35 	.globl _ADSTM1
                                     36 	.globl _AD0CM0
                                     37 	.globl _ADSTM0
                                     38 	.globl _AD0WINT
                                     39 	.globl _ADWINT
                                     40 	.globl _AD0LJST
                                     41 	.globl _ADLJST
                                     42 	.globl _CF
                                     43 	.globl _CR
                                     44 	.globl _CCF4
                                     45 	.globl _CCF3
                                     46 	.globl _CCF2
                                     47 	.globl _CCF1
                                     48 	.globl _CCF0
                                     49 	.globl _CY
                                     50 	.globl _AC
                                     51 	.globl _F0
                                     52 	.globl _RS1
                                     53 	.globl _RS0
                                     54 	.globl _OV
                                     55 	.globl _F1
                                     56 	.globl _P
                                     57 	.globl _TF2
                                     58 	.globl _EXF2
                                     59 	.globl _RCLK
                                     60 	.globl _TCLK
                                     61 	.globl _EXEN2
                                     62 	.globl _TR2
                                     63 	.globl _CT2
                                     64 	.globl _CPRL2
                                     65 	.globl _BUSY
                                     66 	.globl _ENSMB
                                     67 	.globl _STA
                                     68 	.globl _STO
                                     69 	.globl _SI
                                     70 	.globl _AA
                                     71 	.globl _SMBFTE
                                     72 	.globl _SMBTOE
                                     73 	.globl _PT2
                                     74 	.globl _PS
                                     75 	.globl _PS0
                                     76 	.globl _PT1
                                     77 	.globl _PX1
                                     78 	.globl _PT0
                                     79 	.globl _PX0
                                     80 	.globl _P3_7
                                     81 	.globl _P3_6
                                     82 	.globl _P3_5
                                     83 	.globl _P3_4
                                     84 	.globl _P3_3
                                     85 	.globl _P3_2
                                     86 	.globl _P3_1
                                     87 	.globl _P3_0
                                     88 	.globl _EA
                                     89 	.globl _ET2
                                     90 	.globl _ES
                                     91 	.globl _ES0
                                     92 	.globl _ET1
                                     93 	.globl _EX1
                                     94 	.globl _ET0
                                     95 	.globl _EX0
                                     96 	.globl _P2_7
                                     97 	.globl _P2_6
                                     98 	.globl _P2_5
                                     99 	.globl _P2_4
                                    100 	.globl _P2_3
                                    101 	.globl _P2_2
                                    102 	.globl _P2_1
                                    103 	.globl _P2_0
                                    104 	.globl _S0MODE
                                    105 	.globl _SM00
                                    106 	.globl _SM0
                                    107 	.globl _SM10
                                    108 	.globl _SM1
                                    109 	.globl _MCE0
                                    110 	.globl _SM20
                                    111 	.globl _SM2
                                    112 	.globl _REN0
                                    113 	.globl _REN
                                    114 	.globl _TB80
                                    115 	.globl _TB8
                                    116 	.globl _RB80
                                    117 	.globl _RB8
                                    118 	.globl _TI0
                                    119 	.globl _TI
                                    120 	.globl _RI0
                                    121 	.globl _RI
                                    122 	.globl _P1_7
                                    123 	.globl _P1_6
                                    124 	.globl _P1_5
                                    125 	.globl _P1_4
                                    126 	.globl _P1_3
                                    127 	.globl _P1_2
                                    128 	.globl _P1_1
                                    129 	.globl _P1_0
                                    130 	.globl _TF1
                                    131 	.globl _TR1
                                    132 	.globl _TF0
                                    133 	.globl _TR0
                                    134 	.globl _IE1
                                    135 	.globl _IT1
                                    136 	.globl _IE0
                                    137 	.globl _IT0
                                    138 	.globl _P0_7
                                    139 	.globl _P0_6
                                    140 	.globl _P0_5
                                    141 	.globl _P0_4
                                    142 	.globl _P0_3
                                    143 	.globl _P0_2
                                    144 	.globl _P0_1
                                    145 	.globl _P0_0
                                    146 	.globl _PCA0CP4
                                    147 	.globl _PCA0CP3
                                    148 	.globl _PCA0CP2
                                    149 	.globl _PCA0CP1
                                    150 	.globl _PCA0CP0
                                    151 	.globl _PCA0
                                    152 	.globl _DAC1
                                    153 	.globl _DAC0
                                    154 	.globl _ADC0LT
                                    155 	.globl _ADC0GT
                                    156 	.globl _ADC0
                                    157 	.globl _RCAP4
                                    158 	.globl _TMR4
                                    159 	.globl _TMR3RL
                                    160 	.globl _TMR3
                                    161 	.globl _RCAP2
                                    162 	.globl _TMR2
                                    163 	.globl _TMR1
                                    164 	.globl _TMR0
                                    165 	.globl _WDTCN
                                    166 	.globl _PCA0CPH4
                                    167 	.globl _PCA0CPH3
                                    168 	.globl _PCA0CPH2
                                    169 	.globl _PCA0CPH1
                                    170 	.globl _PCA0CPH0
                                    171 	.globl _PCA0H
                                    172 	.globl _SPI0CN
                                    173 	.globl _EIP2
                                    174 	.globl _EIP1
                                    175 	.globl _TH4
                                    176 	.globl _TL4
                                    177 	.globl _SADDR1
                                    178 	.globl _SBUF1
                                    179 	.globl _SCON1
                                    180 	.globl _B
                                    181 	.globl _RSTSRC
                                    182 	.globl _PCA0CPL4
                                    183 	.globl _PCA0CPL3
                                    184 	.globl _PCA0CPL2
                                    185 	.globl _PCA0CPL1
                                    186 	.globl _PCA0CPL0
                                    187 	.globl _PCA0L
                                    188 	.globl _ADC0CN
                                    189 	.globl _EIE2
                                    190 	.globl _EIE1
                                    191 	.globl _RCAP4H
                                    192 	.globl _RCAP4L
                                    193 	.globl _XBR2
                                    194 	.globl _XBR1
                                    195 	.globl _XBR0
                                    196 	.globl _ACC
                                    197 	.globl _PCA0CPM4
                                    198 	.globl _PCA0CPM3
                                    199 	.globl _PCA0CPM2
                                    200 	.globl _PCA0CPM1
                                    201 	.globl _PCA0CPM0
                                    202 	.globl _PCA0MD
                                    203 	.globl _PCA0CN
                                    204 	.globl _DAC1CN
                                    205 	.globl _DAC1H
                                    206 	.globl _DAC1L
                                    207 	.globl _DAC0CN
                                    208 	.globl _DAC0H
                                    209 	.globl _DAC0L
                                    210 	.globl _REF0CN
                                    211 	.globl _PSW
                                    212 	.globl _SMB0CR
                                    213 	.globl _TH2
                                    214 	.globl _TL2
                                    215 	.globl _RCAP2H
                                    216 	.globl _RCAP2L
                                    217 	.globl _T4CON
                                    218 	.globl _T2CON
                                    219 	.globl _ADC0LTH
                                    220 	.globl _ADC0LTL
                                    221 	.globl _ADC0GTH
                                    222 	.globl _ADC0GTL
                                    223 	.globl _SMB0ADR
                                    224 	.globl _SMB0DAT
                                    225 	.globl _SMB0STA
                                    226 	.globl _SMB0CN
                                    227 	.globl _ADC0H
                                    228 	.globl _ADC0L
                                    229 	.globl _P1MDIN
                                    230 	.globl _ADC0CF
                                    231 	.globl _AMX0SL
                                    232 	.globl _AMX0CF
                                    233 	.globl _SADEN0
                                    234 	.globl _IP
                                    235 	.globl _FLACL
                                    236 	.globl _FLSCL
                                    237 	.globl _P74OUT
                                    238 	.globl _OSCICN
                                    239 	.globl _OSCXCN
                                    240 	.globl _P3
                                    241 	.globl __XPAGE
                                    242 	.globl _EMI0CN
                                    243 	.globl _SADEN1
                                    244 	.globl _P3IF
                                    245 	.globl _AMX1SL
                                    246 	.globl _ADC1CF
                                    247 	.globl _ADC1CN
                                    248 	.globl _SADDR0
                                    249 	.globl _IE
                                    250 	.globl _P3MDOUT
                                    251 	.globl _PRT3CF
                                    252 	.globl _P2MDOUT
                                    253 	.globl _PRT2CF
                                    254 	.globl _P1MDOUT
                                    255 	.globl _PRT1CF
                                    256 	.globl _P0MDOUT
                                    257 	.globl _PRT0CF
                                    258 	.globl _EMI0CF
                                    259 	.globl _EMI0TC
                                    260 	.globl _P2
                                    261 	.globl _CPT1CN
                                    262 	.globl _CPT0CN
                                    263 	.globl _SPI0CKR
                                    264 	.globl _ADC1
                                    265 	.globl _SPI0DAT
                                    266 	.globl _SPI0CFG
                                    267 	.globl _SBUF0
                                    268 	.globl _SBUF
                                    269 	.globl _SCON0
                                    270 	.globl _SCON
                                    271 	.globl _P7
                                    272 	.globl _TMR3H
                                    273 	.globl _TMR3L
                                    274 	.globl _TMR3RLH
                                    275 	.globl _TMR3RLL
                                    276 	.globl _TMR3CN
                                    277 	.globl _P1
                                    278 	.globl _PSCTL
                                    279 	.globl _CKCON
                                    280 	.globl _TH1
                                    281 	.globl _TH0
                                    282 	.globl _TL1
                                    283 	.globl _TL0
                                    284 	.globl _TMOD
                                    285 	.globl _TCON
                                    286 	.globl _PCON
                                    287 	.globl _P6
                                    288 	.globl _P5
                                    289 	.globl _P4
                                    290 	.globl _DPH
                                    291 	.globl _DPL
                                    292 	.globl _SP
                                    293 	.globl _P0
                                    294 	.globl _working
                                    295 	.globl _correct
                                    296 	.globl _turns
                                    297 	.globl _Counts
                                    298 	.globl _Port_Init
                                    299 	.globl _Interrupt_Init
                                    300 	.globl _Timer_Init
                                    301 	.globl _Timer0_ISR
                                    302 ;--------------------------------------------------------
                                    303 ; special function registers
                                    304 ;--------------------------------------------------------
                                    305 	.area RSEG    (ABS,DATA)
      000000                        306 	.org 0x0000
                           000080   307 G$P0$0$0 == 0x0080
                           000080   308 _P0	=	0x0080
                           000081   309 G$SP$0$0 == 0x0081
                           000081   310 _SP	=	0x0081
                           000082   311 G$DPL$0$0 == 0x0082
                           000082   312 _DPL	=	0x0082
                           000083   313 G$DPH$0$0 == 0x0083
                           000083   314 _DPH	=	0x0083
                           000084   315 G$P4$0$0 == 0x0084
                           000084   316 _P4	=	0x0084
                           000085   317 G$P5$0$0 == 0x0085
                           000085   318 _P5	=	0x0085
                           000086   319 G$P6$0$0 == 0x0086
                           000086   320 _P6	=	0x0086
                           000087   321 G$PCON$0$0 == 0x0087
                           000087   322 _PCON	=	0x0087
                           000088   323 G$TCON$0$0 == 0x0088
                           000088   324 _TCON	=	0x0088
                           000089   325 G$TMOD$0$0 == 0x0089
                           000089   326 _TMOD	=	0x0089
                           00008A   327 G$TL0$0$0 == 0x008a
                           00008A   328 _TL0	=	0x008a
                           00008B   329 G$TL1$0$0 == 0x008b
                           00008B   330 _TL1	=	0x008b
                           00008C   331 G$TH0$0$0 == 0x008c
                           00008C   332 _TH0	=	0x008c
                           00008D   333 G$TH1$0$0 == 0x008d
                           00008D   334 _TH1	=	0x008d
                           00008E   335 G$CKCON$0$0 == 0x008e
                           00008E   336 _CKCON	=	0x008e
                           00008F   337 G$PSCTL$0$0 == 0x008f
                           00008F   338 _PSCTL	=	0x008f
                           000090   339 G$P1$0$0 == 0x0090
                           000090   340 _P1	=	0x0090
                           000091   341 G$TMR3CN$0$0 == 0x0091
                           000091   342 _TMR3CN	=	0x0091
                           000092   343 G$TMR3RLL$0$0 == 0x0092
                           000092   344 _TMR3RLL	=	0x0092
                           000093   345 G$TMR3RLH$0$0 == 0x0093
                           000093   346 _TMR3RLH	=	0x0093
                           000094   347 G$TMR3L$0$0 == 0x0094
                           000094   348 _TMR3L	=	0x0094
                           000095   349 G$TMR3H$0$0 == 0x0095
                           000095   350 _TMR3H	=	0x0095
                           000096   351 G$P7$0$0 == 0x0096
                           000096   352 _P7	=	0x0096
                           000098   353 G$SCON$0$0 == 0x0098
                           000098   354 _SCON	=	0x0098
                           000098   355 G$SCON0$0$0 == 0x0098
                           000098   356 _SCON0	=	0x0098
                           000099   357 G$SBUF$0$0 == 0x0099
                           000099   358 _SBUF	=	0x0099
                           000099   359 G$SBUF0$0$0 == 0x0099
                           000099   360 _SBUF0	=	0x0099
                           00009A   361 G$SPI0CFG$0$0 == 0x009a
                           00009A   362 _SPI0CFG	=	0x009a
                           00009B   363 G$SPI0DAT$0$0 == 0x009b
                           00009B   364 _SPI0DAT	=	0x009b
                           00009C   365 G$ADC1$0$0 == 0x009c
                           00009C   366 _ADC1	=	0x009c
                           00009D   367 G$SPI0CKR$0$0 == 0x009d
                           00009D   368 _SPI0CKR	=	0x009d
                           00009E   369 G$CPT0CN$0$0 == 0x009e
                           00009E   370 _CPT0CN	=	0x009e
                           00009F   371 G$CPT1CN$0$0 == 0x009f
                           00009F   372 _CPT1CN	=	0x009f
                           0000A0   373 G$P2$0$0 == 0x00a0
                           0000A0   374 _P2	=	0x00a0
                           0000A1   375 G$EMI0TC$0$0 == 0x00a1
                           0000A1   376 _EMI0TC	=	0x00a1
                           0000A3   377 G$EMI0CF$0$0 == 0x00a3
                           0000A3   378 _EMI0CF	=	0x00a3
                           0000A4   379 G$PRT0CF$0$0 == 0x00a4
                           0000A4   380 _PRT0CF	=	0x00a4
                           0000A4   381 G$P0MDOUT$0$0 == 0x00a4
                           0000A4   382 _P0MDOUT	=	0x00a4
                           0000A5   383 G$PRT1CF$0$0 == 0x00a5
                           0000A5   384 _PRT1CF	=	0x00a5
                           0000A5   385 G$P1MDOUT$0$0 == 0x00a5
                           0000A5   386 _P1MDOUT	=	0x00a5
                           0000A6   387 G$PRT2CF$0$0 == 0x00a6
                           0000A6   388 _PRT2CF	=	0x00a6
                           0000A6   389 G$P2MDOUT$0$0 == 0x00a6
                           0000A6   390 _P2MDOUT	=	0x00a6
                           0000A7   391 G$PRT3CF$0$0 == 0x00a7
                           0000A7   392 _PRT3CF	=	0x00a7
                           0000A7   393 G$P3MDOUT$0$0 == 0x00a7
                           0000A7   394 _P3MDOUT	=	0x00a7
                           0000A8   395 G$IE$0$0 == 0x00a8
                           0000A8   396 _IE	=	0x00a8
                           0000A9   397 G$SADDR0$0$0 == 0x00a9
                           0000A9   398 _SADDR0	=	0x00a9
                           0000AA   399 G$ADC1CN$0$0 == 0x00aa
                           0000AA   400 _ADC1CN	=	0x00aa
                           0000AB   401 G$ADC1CF$0$0 == 0x00ab
                           0000AB   402 _ADC1CF	=	0x00ab
                           0000AC   403 G$AMX1SL$0$0 == 0x00ac
                           0000AC   404 _AMX1SL	=	0x00ac
                           0000AD   405 G$P3IF$0$0 == 0x00ad
                           0000AD   406 _P3IF	=	0x00ad
                           0000AE   407 G$SADEN1$0$0 == 0x00ae
                           0000AE   408 _SADEN1	=	0x00ae
                           0000AF   409 G$EMI0CN$0$0 == 0x00af
                           0000AF   410 _EMI0CN	=	0x00af
                           0000AF   411 G$_XPAGE$0$0 == 0x00af
                           0000AF   412 __XPAGE	=	0x00af
                           0000B0   413 G$P3$0$0 == 0x00b0
                           0000B0   414 _P3	=	0x00b0
                           0000B1   415 G$OSCXCN$0$0 == 0x00b1
                           0000B1   416 _OSCXCN	=	0x00b1
                           0000B2   417 G$OSCICN$0$0 == 0x00b2
                           0000B2   418 _OSCICN	=	0x00b2
                           0000B5   419 G$P74OUT$0$0 == 0x00b5
                           0000B5   420 _P74OUT	=	0x00b5
                           0000B6   421 G$FLSCL$0$0 == 0x00b6
                           0000B6   422 _FLSCL	=	0x00b6
                           0000B7   423 G$FLACL$0$0 == 0x00b7
                           0000B7   424 _FLACL	=	0x00b7
                           0000B8   425 G$IP$0$0 == 0x00b8
                           0000B8   426 _IP	=	0x00b8
                           0000B9   427 G$SADEN0$0$0 == 0x00b9
                           0000B9   428 _SADEN0	=	0x00b9
                           0000BA   429 G$AMX0CF$0$0 == 0x00ba
                           0000BA   430 _AMX0CF	=	0x00ba
                           0000BB   431 G$AMX0SL$0$0 == 0x00bb
                           0000BB   432 _AMX0SL	=	0x00bb
                           0000BC   433 G$ADC0CF$0$0 == 0x00bc
                           0000BC   434 _ADC0CF	=	0x00bc
                           0000BD   435 G$P1MDIN$0$0 == 0x00bd
                           0000BD   436 _P1MDIN	=	0x00bd
                           0000BE   437 G$ADC0L$0$0 == 0x00be
                           0000BE   438 _ADC0L	=	0x00be
                           0000BF   439 G$ADC0H$0$0 == 0x00bf
                           0000BF   440 _ADC0H	=	0x00bf
                           0000C0   441 G$SMB0CN$0$0 == 0x00c0
                           0000C0   442 _SMB0CN	=	0x00c0
                           0000C1   443 G$SMB0STA$0$0 == 0x00c1
                           0000C1   444 _SMB0STA	=	0x00c1
                           0000C2   445 G$SMB0DAT$0$0 == 0x00c2
                           0000C2   446 _SMB0DAT	=	0x00c2
                           0000C3   447 G$SMB0ADR$0$0 == 0x00c3
                           0000C3   448 _SMB0ADR	=	0x00c3
                           0000C4   449 G$ADC0GTL$0$0 == 0x00c4
                           0000C4   450 _ADC0GTL	=	0x00c4
                           0000C5   451 G$ADC0GTH$0$0 == 0x00c5
                           0000C5   452 _ADC0GTH	=	0x00c5
                           0000C6   453 G$ADC0LTL$0$0 == 0x00c6
                           0000C6   454 _ADC0LTL	=	0x00c6
                           0000C7   455 G$ADC0LTH$0$0 == 0x00c7
                           0000C7   456 _ADC0LTH	=	0x00c7
                           0000C8   457 G$T2CON$0$0 == 0x00c8
                           0000C8   458 _T2CON	=	0x00c8
                           0000C9   459 G$T4CON$0$0 == 0x00c9
                           0000C9   460 _T4CON	=	0x00c9
                           0000CA   461 G$RCAP2L$0$0 == 0x00ca
                           0000CA   462 _RCAP2L	=	0x00ca
                           0000CB   463 G$RCAP2H$0$0 == 0x00cb
                           0000CB   464 _RCAP2H	=	0x00cb
                           0000CC   465 G$TL2$0$0 == 0x00cc
                           0000CC   466 _TL2	=	0x00cc
                           0000CD   467 G$TH2$0$0 == 0x00cd
                           0000CD   468 _TH2	=	0x00cd
                           0000CF   469 G$SMB0CR$0$0 == 0x00cf
                           0000CF   470 _SMB0CR	=	0x00cf
                           0000D0   471 G$PSW$0$0 == 0x00d0
                           0000D0   472 _PSW	=	0x00d0
                           0000D1   473 G$REF0CN$0$0 == 0x00d1
                           0000D1   474 _REF0CN	=	0x00d1
                           0000D2   475 G$DAC0L$0$0 == 0x00d2
                           0000D2   476 _DAC0L	=	0x00d2
                           0000D3   477 G$DAC0H$0$0 == 0x00d3
                           0000D3   478 _DAC0H	=	0x00d3
                           0000D4   479 G$DAC0CN$0$0 == 0x00d4
                           0000D4   480 _DAC0CN	=	0x00d4
                           0000D5   481 G$DAC1L$0$0 == 0x00d5
                           0000D5   482 _DAC1L	=	0x00d5
                           0000D6   483 G$DAC1H$0$0 == 0x00d6
                           0000D6   484 _DAC1H	=	0x00d6
                           0000D7   485 G$DAC1CN$0$0 == 0x00d7
                           0000D7   486 _DAC1CN	=	0x00d7
                           0000D8   487 G$PCA0CN$0$0 == 0x00d8
                           0000D8   488 _PCA0CN	=	0x00d8
                           0000D9   489 G$PCA0MD$0$0 == 0x00d9
                           0000D9   490 _PCA0MD	=	0x00d9
                           0000DA   491 G$PCA0CPM0$0$0 == 0x00da
                           0000DA   492 _PCA0CPM0	=	0x00da
                           0000DB   493 G$PCA0CPM1$0$0 == 0x00db
                           0000DB   494 _PCA0CPM1	=	0x00db
                           0000DC   495 G$PCA0CPM2$0$0 == 0x00dc
                           0000DC   496 _PCA0CPM2	=	0x00dc
                           0000DD   497 G$PCA0CPM3$0$0 == 0x00dd
                           0000DD   498 _PCA0CPM3	=	0x00dd
                           0000DE   499 G$PCA0CPM4$0$0 == 0x00de
                           0000DE   500 _PCA0CPM4	=	0x00de
                           0000E0   501 G$ACC$0$0 == 0x00e0
                           0000E0   502 _ACC	=	0x00e0
                           0000E1   503 G$XBR0$0$0 == 0x00e1
                           0000E1   504 _XBR0	=	0x00e1
                           0000E2   505 G$XBR1$0$0 == 0x00e2
                           0000E2   506 _XBR1	=	0x00e2
                           0000E3   507 G$XBR2$0$0 == 0x00e3
                           0000E3   508 _XBR2	=	0x00e3
                           0000E4   509 G$RCAP4L$0$0 == 0x00e4
                           0000E4   510 _RCAP4L	=	0x00e4
                           0000E5   511 G$RCAP4H$0$0 == 0x00e5
                           0000E5   512 _RCAP4H	=	0x00e5
                           0000E6   513 G$EIE1$0$0 == 0x00e6
                           0000E6   514 _EIE1	=	0x00e6
                           0000E7   515 G$EIE2$0$0 == 0x00e7
                           0000E7   516 _EIE2	=	0x00e7
                           0000E8   517 G$ADC0CN$0$0 == 0x00e8
                           0000E8   518 _ADC0CN	=	0x00e8
                           0000E9   519 G$PCA0L$0$0 == 0x00e9
                           0000E9   520 _PCA0L	=	0x00e9
                           0000EA   521 G$PCA0CPL0$0$0 == 0x00ea
                           0000EA   522 _PCA0CPL0	=	0x00ea
                           0000EB   523 G$PCA0CPL1$0$0 == 0x00eb
                           0000EB   524 _PCA0CPL1	=	0x00eb
                           0000EC   525 G$PCA0CPL2$0$0 == 0x00ec
                           0000EC   526 _PCA0CPL2	=	0x00ec
                           0000ED   527 G$PCA0CPL3$0$0 == 0x00ed
                           0000ED   528 _PCA0CPL3	=	0x00ed
                           0000EE   529 G$PCA0CPL4$0$0 == 0x00ee
                           0000EE   530 _PCA0CPL4	=	0x00ee
                           0000EF   531 G$RSTSRC$0$0 == 0x00ef
                           0000EF   532 _RSTSRC	=	0x00ef
                           0000F0   533 G$B$0$0 == 0x00f0
                           0000F0   534 _B	=	0x00f0
                           0000F1   535 G$SCON1$0$0 == 0x00f1
                           0000F1   536 _SCON1	=	0x00f1
                           0000F2   537 G$SBUF1$0$0 == 0x00f2
                           0000F2   538 _SBUF1	=	0x00f2
                           0000F3   539 G$SADDR1$0$0 == 0x00f3
                           0000F3   540 _SADDR1	=	0x00f3
                           0000F4   541 G$TL4$0$0 == 0x00f4
                           0000F4   542 _TL4	=	0x00f4
                           0000F5   543 G$TH4$0$0 == 0x00f5
                           0000F5   544 _TH4	=	0x00f5
                           0000F6   545 G$EIP1$0$0 == 0x00f6
                           0000F6   546 _EIP1	=	0x00f6
                           0000F7   547 G$EIP2$0$0 == 0x00f7
                           0000F7   548 _EIP2	=	0x00f7
                           0000F8   549 G$SPI0CN$0$0 == 0x00f8
                           0000F8   550 _SPI0CN	=	0x00f8
                           0000F9   551 G$PCA0H$0$0 == 0x00f9
                           0000F9   552 _PCA0H	=	0x00f9
                           0000FA   553 G$PCA0CPH0$0$0 == 0x00fa
                           0000FA   554 _PCA0CPH0	=	0x00fa
                           0000FB   555 G$PCA0CPH1$0$0 == 0x00fb
                           0000FB   556 _PCA0CPH1	=	0x00fb
                           0000FC   557 G$PCA0CPH2$0$0 == 0x00fc
                           0000FC   558 _PCA0CPH2	=	0x00fc
                           0000FD   559 G$PCA0CPH3$0$0 == 0x00fd
                           0000FD   560 _PCA0CPH3	=	0x00fd
                           0000FE   561 G$PCA0CPH4$0$0 == 0x00fe
                           0000FE   562 _PCA0CPH4	=	0x00fe
                           0000FF   563 G$WDTCN$0$0 == 0x00ff
                           0000FF   564 _WDTCN	=	0x00ff
                           008C8A   565 G$TMR0$0$0 == 0x8c8a
                           008C8A   566 _TMR0	=	0x8c8a
                           008D8B   567 G$TMR1$0$0 == 0x8d8b
                           008D8B   568 _TMR1	=	0x8d8b
                           00CDCC   569 G$TMR2$0$0 == 0xcdcc
                           00CDCC   570 _TMR2	=	0xcdcc
                           00CBCA   571 G$RCAP2$0$0 == 0xcbca
                           00CBCA   572 _RCAP2	=	0xcbca
                           009594   573 G$TMR3$0$0 == 0x9594
                           009594   574 _TMR3	=	0x9594
                           009392   575 G$TMR3RL$0$0 == 0x9392
                           009392   576 _TMR3RL	=	0x9392
                           00F5F4   577 G$TMR4$0$0 == 0xf5f4
                           00F5F4   578 _TMR4	=	0xf5f4
                           00E5E4   579 G$RCAP4$0$0 == 0xe5e4
                           00E5E4   580 _RCAP4	=	0xe5e4
                           00BFBE   581 G$ADC0$0$0 == 0xbfbe
                           00BFBE   582 _ADC0	=	0xbfbe
                           00C5C4   583 G$ADC0GT$0$0 == 0xc5c4
                           00C5C4   584 _ADC0GT	=	0xc5c4
                           00C7C6   585 G$ADC0LT$0$0 == 0xc7c6
                           00C7C6   586 _ADC0LT	=	0xc7c6
                           00D3D2   587 G$DAC0$0$0 == 0xd3d2
                           00D3D2   588 _DAC0	=	0xd3d2
                           00D6D5   589 G$DAC1$0$0 == 0xd6d5
                           00D6D5   590 _DAC1	=	0xd6d5
                           00F9E9   591 G$PCA0$0$0 == 0xf9e9
                           00F9E9   592 _PCA0	=	0xf9e9
                           00FAEA   593 G$PCA0CP0$0$0 == 0xfaea
                           00FAEA   594 _PCA0CP0	=	0xfaea
                           00FBEB   595 G$PCA0CP1$0$0 == 0xfbeb
                           00FBEB   596 _PCA0CP1	=	0xfbeb
                           00FCEC   597 G$PCA0CP2$0$0 == 0xfcec
                           00FCEC   598 _PCA0CP2	=	0xfcec
                           00FDED   599 G$PCA0CP3$0$0 == 0xfded
                           00FDED   600 _PCA0CP3	=	0xfded
                           00FEEE   601 G$PCA0CP4$0$0 == 0xfeee
                           00FEEE   602 _PCA0CP4	=	0xfeee
                                    603 ;--------------------------------------------------------
                                    604 ; special function bits
                                    605 ;--------------------------------------------------------
                                    606 	.area RSEG    (ABS,DATA)
      000000                        607 	.org 0x0000
                           000080   608 G$P0_0$0$0 == 0x0080
                           000080   609 _P0_0	=	0x0080
                           000081   610 G$P0_1$0$0 == 0x0081
                           000081   611 _P0_1	=	0x0081
                           000082   612 G$P0_2$0$0 == 0x0082
                           000082   613 _P0_2	=	0x0082
                           000083   614 G$P0_3$0$0 == 0x0083
                           000083   615 _P0_3	=	0x0083
                           000084   616 G$P0_4$0$0 == 0x0084
                           000084   617 _P0_4	=	0x0084
                           000085   618 G$P0_5$0$0 == 0x0085
                           000085   619 _P0_5	=	0x0085
                           000086   620 G$P0_6$0$0 == 0x0086
                           000086   621 _P0_6	=	0x0086
                           000087   622 G$P0_7$0$0 == 0x0087
                           000087   623 _P0_7	=	0x0087
                           000088   624 G$IT0$0$0 == 0x0088
                           000088   625 _IT0	=	0x0088
                           000089   626 G$IE0$0$0 == 0x0089
                           000089   627 _IE0	=	0x0089
                           00008A   628 G$IT1$0$0 == 0x008a
                           00008A   629 _IT1	=	0x008a
                           00008B   630 G$IE1$0$0 == 0x008b
                           00008B   631 _IE1	=	0x008b
                           00008C   632 G$TR0$0$0 == 0x008c
                           00008C   633 _TR0	=	0x008c
                           00008D   634 G$TF0$0$0 == 0x008d
                           00008D   635 _TF0	=	0x008d
                           00008E   636 G$TR1$0$0 == 0x008e
                           00008E   637 _TR1	=	0x008e
                           00008F   638 G$TF1$0$0 == 0x008f
                           00008F   639 _TF1	=	0x008f
                           000090   640 G$P1_0$0$0 == 0x0090
                           000090   641 _P1_0	=	0x0090
                           000091   642 G$P1_1$0$0 == 0x0091
                           000091   643 _P1_1	=	0x0091
                           000092   644 G$P1_2$0$0 == 0x0092
                           000092   645 _P1_2	=	0x0092
                           000093   646 G$P1_3$0$0 == 0x0093
                           000093   647 _P1_3	=	0x0093
                           000094   648 G$P1_4$0$0 == 0x0094
                           000094   649 _P1_4	=	0x0094
                           000095   650 G$P1_5$0$0 == 0x0095
                           000095   651 _P1_5	=	0x0095
                           000096   652 G$P1_6$0$0 == 0x0096
                           000096   653 _P1_6	=	0x0096
                           000097   654 G$P1_7$0$0 == 0x0097
                           000097   655 _P1_7	=	0x0097
                           000098   656 G$RI$0$0 == 0x0098
                           000098   657 _RI	=	0x0098
                           000098   658 G$RI0$0$0 == 0x0098
                           000098   659 _RI0	=	0x0098
                           000099   660 G$TI$0$0 == 0x0099
                           000099   661 _TI	=	0x0099
                           000099   662 G$TI0$0$0 == 0x0099
                           000099   663 _TI0	=	0x0099
                           00009A   664 G$RB8$0$0 == 0x009a
                           00009A   665 _RB8	=	0x009a
                           00009A   666 G$RB80$0$0 == 0x009a
                           00009A   667 _RB80	=	0x009a
                           00009B   668 G$TB8$0$0 == 0x009b
                           00009B   669 _TB8	=	0x009b
                           00009B   670 G$TB80$0$0 == 0x009b
                           00009B   671 _TB80	=	0x009b
                           00009C   672 G$REN$0$0 == 0x009c
                           00009C   673 _REN	=	0x009c
                           00009C   674 G$REN0$0$0 == 0x009c
                           00009C   675 _REN0	=	0x009c
                           00009D   676 G$SM2$0$0 == 0x009d
                           00009D   677 _SM2	=	0x009d
                           00009D   678 G$SM20$0$0 == 0x009d
                           00009D   679 _SM20	=	0x009d
                           00009D   680 G$MCE0$0$0 == 0x009d
                           00009D   681 _MCE0	=	0x009d
                           00009E   682 G$SM1$0$0 == 0x009e
                           00009E   683 _SM1	=	0x009e
                           00009E   684 G$SM10$0$0 == 0x009e
                           00009E   685 _SM10	=	0x009e
                           00009F   686 G$SM0$0$0 == 0x009f
                           00009F   687 _SM0	=	0x009f
                           00009F   688 G$SM00$0$0 == 0x009f
                           00009F   689 _SM00	=	0x009f
                           00009F   690 G$S0MODE$0$0 == 0x009f
                           00009F   691 _S0MODE	=	0x009f
                           0000A0   692 G$P2_0$0$0 == 0x00a0
                           0000A0   693 _P2_0	=	0x00a0
                           0000A1   694 G$P2_1$0$0 == 0x00a1
                           0000A1   695 _P2_1	=	0x00a1
                           0000A2   696 G$P2_2$0$0 == 0x00a2
                           0000A2   697 _P2_2	=	0x00a2
                           0000A3   698 G$P2_3$0$0 == 0x00a3
                           0000A3   699 _P2_3	=	0x00a3
                           0000A4   700 G$P2_4$0$0 == 0x00a4
                           0000A4   701 _P2_4	=	0x00a4
                           0000A5   702 G$P2_5$0$0 == 0x00a5
                           0000A5   703 _P2_5	=	0x00a5
                           0000A6   704 G$P2_6$0$0 == 0x00a6
                           0000A6   705 _P2_6	=	0x00a6
                           0000A7   706 G$P2_7$0$0 == 0x00a7
                           0000A7   707 _P2_7	=	0x00a7
                           0000A8   708 G$EX0$0$0 == 0x00a8
                           0000A8   709 _EX0	=	0x00a8
                           0000A9   710 G$ET0$0$0 == 0x00a9
                           0000A9   711 _ET0	=	0x00a9
                           0000AA   712 G$EX1$0$0 == 0x00aa
                           0000AA   713 _EX1	=	0x00aa
                           0000AB   714 G$ET1$0$0 == 0x00ab
                           0000AB   715 _ET1	=	0x00ab
                           0000AC   716 G$ES0$0$0 == 0x00ac
                           0000AC   717 _ES0	=	0x00ac
                           0000AC   718 G$ES$0$0 == 0x00ac
                           0000AC   719 _ES	=	0x00ac
                           0000AD   720 G$ET2$0$0 == 0x00ad
                           0000AD   721 _ET2	=	0x00ad
                           0000AF   722 G$EA$0$0 == 0x00af
                           0000AF   723 _EA	=	0x00af
                           0000B0   724 G$P3_0$0$0 == 0x00b0
                           0000B0   725 _P3_0	=	0x00b0
                           0000B1   726 G$P3_1$0$0 == 0x00b1
                           0000B1   727 _P3_1	=	0x00b1
                           0000B2   728 G$P3_2$0$0 == 0x00b2
                           0000B2   729 _P3_2	=	0x00b2
                           0000B3   730 G$P3_3$0$0 == 0x00b3
                           0000B3   731 _P3_3	=	0x00b3
                           0000B4   732 G$P3_4$0$0 == 0x00b4
                           0000B4   733 _P3_4	=	0x00b4
                           0000B5   734 G$P3_5$0$0 == 0x00b5
                           0000B5   735 _P3_5	=	0x00b5
                           0000B6   736 G$P3_6$0$0 == 0x00b6
                           0000B6   737 _P3_6	=	0x00b6
                           0000B7   738 G$P3_7$0$0 == 0x00b7
                           0000B7   739 _P3_7	=	0x00b7
                           0000B8   740 G$PX0$0$0 == 0x00b8
                           0000B8   741 _PX0	=	0x00b8
                           0000B9   742 G$PT0$0$0 == 0x00b9
                           0000B9   743 _PT0	=	0x00b9
                           0000BA   744 G$PX1$0$0 == 0x00ba
                           0000BA   745 _PX1	=	0x00ba
                           0000BB   746 G$PT1$0$0 == 0x00bb
                           0000BB   747 _PT1	=	0x00bb
                           0000BC   748 G$PS0$0$0 == 0x00bc
                           0000BC   749 _PS0	=	0x00bc
                           0000BC   750 G$PS$0$0 == 0x00bc
                           0000BC   751 _PS	=	0x00bc
                           0000BD   752 G$PT2$0$0 == 0x00bd
                           0000BD   753 _PT2	=	0x00bd
                           0000C0   754 G$SMBTOE$0$0 == 0x00c0
                           0000C0   755 _SMBTOE	=	0x00c0
                           0000C1   756 G$SMBFTE$0$0 == 0x00c1
                           0000C1   757 _SMBFTE	=	0x00c1
                           0000C2   758 G$AA$0$0 == 0x00c2
                           0000C2   759 _AA	=	0x00c2
                           0000C3   760 G$SI$0$0 == 0x00c3
                           0000C3   761 _SI	=	0x00c3
                           0000C4   762 G$STO$0$0 == 0x00c4
                           0000C4   763 _STO	=	0x00c4
                           0000C5   764 G$STA$0$0 == 0x00c5
                           0000C5   765 _STA	=	0x00c5
                           0000C6   766 G$ENSMB$0$0 == 0x00c6
                           0000C6   767 _ENSMB	=	0x00c6
                           0000C7   768 G$BUSY$0$0 == 0x00c7
                           0000C7   769 _BUSY	=	0x00c7
                           0000C8   770 G$CPRL2$0$0 == 0x00c8
                           0000C8   771 _CPRL2	=	0x00c8
                           0000C9   772 G$CT2$0$0 == 0x00c9
                           0000C9   773 _CT2	=	0x00c9
                           0000CA   774 G$TR2$0$0 == 0x00ca
                           0000CA   775 _TR2	=	0x00ca
                           0000CB   776 G$EXEN2$0$0 == 0x00cb
                           0000CB   777 _EXEN2	=	0x00cb
                           0000CC   778 G$TCLK$0$0 == 0x00cc
                           0000CC   779 _TCLK	=	0x00cc
                           0000CD   780 G$RCLK$0$0 == 0x00cd
                           0000CD   781 _RCLK	=	0x00cd
                           0000CE   782 G$EXF2$0$0 == 0x00ce
                           0000CE   783 _EXF2	=	0x00ce
                           0000CF   784 G$TF2$0$0 == 0x00cf
                           0000CF   785 _TF2	=	0x00cf
                           0000D0   786 G$P$0$0 == 0x00d0
                           0000D0   787 _P	=	0x00d0
                           0000D1   788 G$F1$0$0 == 0x00d1
                           0000D1   789 _F1	=	0x00d1
                           0000D2   790 G$OV$0$0 == 0x00d2
                           0000D2   791 _OV	=	0x00d2
                           0000D3   792 G$RS0$0$0 == 0x00d3
                           0000D3   793 _RS0	=	0x00d3
                           0000D4   794 G$RS1$0$0 == 0x00d4
                           0000D4   795 _RS1	=	0x00d4
                           0000D5   796 G$F0$0$0 == 0x00d5
                           0000D5   797 _F0	=	0x00d5
                           0000D6   798 G$AC$0$0 == 0x00d6
                           0000D6   799 _AC	=	0x00d6
                           0000D7   800 G$CY$0$0 == 0x00d7
                           0000D7   801 _CY	=	0x00d7
                           0000D8   802 G$CCF0$0$0 == 0x00d8
                           0000D8   803 _CCF0	=	0x00d8
                           0000D9   804 G$CCF1$0$0 == 0x00d9
                           0000D9   805 _CCF1	=	0x00d9
                           0000DA   806 G$CCF2$0$0 == 0x00da
                           0000DA   807 _CCF2	=	0x00da
                           0000DB   808 G$CCF3$0$0 == 0x00db
                           0000DB   809 _CCF3	=	0x00db
                           0000DC   810 G$CCF4$0$0 == 0x00dc
                           0000DC   811 _CCF4	=	0x00dc
                           0000DE   812 G$CR$0$0 == 0x00de
                           0000DE   813 _CR	=	0x00de
                           0000DF   814 G$CF$0$0 == 0x00df
                           0000DF   815 _CF	=	0x00df
                           0000E8   816 G$ADLJST$0$0 == 0x00e8
                           0000E8   817 _ADLJST	=	0x00e8
                           0000E8   818 G$AD0LJST$0$0 == 0x00e8
                           0000E8   819 _AD0LJST	=	0x00e8
                           0000E9   820 G$ADWINT$0$0 == 0x00e9
                           0000E9   821 _ADWINT	=	0x00e9
                           0000E9   822 G$AD0WINT$0$0 == 0x00e9
                           0000E9   823 _AD0WINT	=	0x00e9
                           0000EA   824 G$ADSTM0$0$0 == 0x00ea
                           0000EA   825 _ADSTM0	=	0x00ea
                           0000EA   826 G$AD0CM0$0$0 == 0x00ea
                           0000EA   827 _AD0CM0	=	0x00ea
                           0000EB   828 G$ADSTM1$0$0 == 0x00eb
                           0000EB   829 _ADSTM1	=	0x00eb
                           0000EB   830 G$AD0CM1$0$0 == 0x00eb
                           0000EB   831 _AD0CM1	=	0x00eb
                           0000EC   832 G$ADBUSY$0$0 == 0x00ec
                           0000EC   833 _ADBUSY	=	0x00ec
                           0000EC   834 G$AD0BUSY$0$0 == 0x00ec
                           0000EC   835 _AD0BUSY	=	0x00ec
                           0000ED   836 G$ADCINT$0$0 == 0x00ed
                           0000ED   837 _ADCINT	=	0x00ed
                           0000ED   838 G$AD0INT$0$0 == 0x00ed
                           0000ED   839 _AD0INT	=	0x00ed
                           0000EE   840 G$ADCTM$0$0 == 0x00ee
                           0000EE   841 _ADCTM	=	0x00ee
                           0000EE   842 G$AD0TM$0$0 == 0x00ee
                           0000EE   843 _AD0TM	=	0x00ee
                           0000EF   844 G$ADCEN$0$0 == 0x00ef
                           0000EF   845 _ADCEN	=	0x00ef
                           0000EF   846 G$AD0EN$0$0 == 0x00ef
                           0000EF   847 _AD0EN	=	0x00ef
                           0000F8   848 G$SPIEN$0$0 == 0x00f8
                           0000F8   849 _SPIEN	=	0x00f8
                           0000F9   850 G$MSTEN$0$0 == 0x00f9
                           0000F9   851 _MSTEN	=	0x00f9
                           0000FA   852 G$SLVSEL$0$0 == 0x00fa
                           0000FA   853 _SLVSEL	=	0x00fa
                           0000FB   854 G$TXBSY$0$0 == 0x00fb
                           0000FB   855 _TXBSY	=	0x00fb
                           0000FC   856 G$RXOVRN$0$0 == 0x00fc
                           0000FC   857 _RXOVRN	=	0x00fc
                           0000FD   858 G$MODF$0$0 == 0x00fd
                           0000FD   859 _MODF	=	0x00fd
                           0000FE   860 G$WCOL$0$0 == 0x00fe
                           0000FE   861 _WCOL	=	0x00fe
                           0000FF   862 G$SPIF$0$0 == 0x00ff
                           0000FF   863 _SPIF	=	0x00ff
                                    864 ;--------------------------------------------------------
                                    865 ; overlayable register banks
                                    866 ;--------------------------------------------------------
                                    867 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        868 	.ds 8
                                    869 ;--------------------------------------------------------
                                    870 ; internal ram data
                                    871 ;--------------------------------------------------------
                                    872 	.area DSEG    (DATA)
                           000000   873 G$Counts$0$0==.
      000000                        874 _Counts::
      000000                        875 	.ds 2
                           000002   876 G$turns$0$0==.
      000002                        877 _turns::
      000002                        878 	.ds 1
                           000003   879 G$correct$0$0==.
      000003                        880 _correct::
      000003                        881 	.ds 1
                           000004   882 G$working$0$0==.
      000004                        883 _working::
      000004                        884 	.ds 1
                                    885 ;--------------------------------------------------------
                                    886 ; overlayable items in internal ram 
                                    887 ;--------------------------------------------------------
                                    888 	.area	OSEG    (OVR,DATA)
                                    889 	.area	OSEG    (OVR,DATA)
                                    890 ;--------------------------------------------------------
                                    891 ; Stack segment in internal ram 
                                    892 ;--------------------------------------------------------
                                    893 	.area	SSEG
      000000                        894 __start__stack:
      000000                        895 	.ds	1
                                    896 
                                    897 ;--------------------------------------------------------
                                    898 ; indirectly addressable internal ram data
                                    899 ;--------------------------------------------------------
                                    900 	.area ISEG    (DATA)
                                    901 ;--------------------------------------------------------
                                    902 ; absolute internal ram data
                                    903 ;--------------------------------------------------------
                                    904 	.area IABS    (ABS,DATA)
                                    905 	.area IABS    (ABS,DATA)
                                    906 ;--------------------------------------------------------
                                    907 ; bit data
                                    908 ;--------------------------------------------------------
                                    909 	.area BSEG    (BIT)
                                    910 ;--------------------------------------------------------
                                    911 ; paged external ram data
                                    912 ;--------------------------------------------------------
                                    913 	.area PSEG    (PAG,XDATA)
                                    914 ;--------------------------------------------------------
                                    915 ; external ram data
                                    916 ;--------------------------------------------------------
                                    917 	.area XSEG    (XDATA)
                                    918 ;--------------------------------------------------------
                                    919 ; absolute external ram data
                                    920 ;--------------------------------------------------------
                                    921 	.area XABS    (ABS,XDATA)
                                    922 ;--------------------------------------------------------
                                    923 ; external initialized ram data
                                    924 ;--------------------------------------------------------
                                    925 	.area XISEG   (XDATA)
                                    926 	.area HOME    (CODE)
                                    927 	.area GSINIT0 (CODE)
                                    928 	.area GSINIT1 (CODE)
                                    929 	.area GSINIT2 (CODE)
                                    930 	.area GSINIT3 (CODE)
                                    931 	.area GSINIT4 (CODE)
                                    932 	.area GSINIT5 (CODE)
                                    933 	.area GSINIT  (CODE)
                                    934 	.area GSFINAL (CODE)
                                    935 	.area CSEG    (CODE)
                                    936 ;--------------------------------------------------------
                                    937 ; interrupt vector 
                                    938 ;--------------------------------------------------------
                                    939 	.area HOME    (CODE)
      000000                        940 __interrupt_vect:
      000000 02r00r00         [24]  941 	ljmp	__sdcc_gsinit_startup
      000003 32               [24]  942 	reti
      000004                        943 	.ds	7
      00000B 02r00rC9         [24]  944 	ljmp	_Timer0_ISR
                                    945 ;--------------------------------------------------------
                                    946 ; global & static initialisations
                                    947 ;--------------------------------------------------------
                                    948 	.area HOME    (CODE)
                                    949 	.area GSINIT  (CODE)
                                    950 	.area GSFINAL (CODE)
                                    951 	.area GSINIT  (CODE)
                                    952 	.globl __sdcc_gsinit_startup
                                    953 	.globl __sdcc_program_startup
                                    954 	.globl __start__stack
                                    955 	.globl __mcs51_genXINIT
                                    956 	.globl __mcs51_genXRAMCLEAR
                                    957 	.globl __mcs51_genRAMCLEAR
                           000000   958 	C$old.c$30$1$57 ==.
                                    959 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:30: unsigned int Counts = 0;
      000000 E4               [12]  960 	clr	a
      000001 F5*00            [12]  961 	mov	_Counts,a
      000003 F5*01            [12]  962 	mov	(_Counts + 1),a
                           000005   963 	C$old.c$31$1$57 ==.
                                    964 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:31: char turns =0;
                                    965 ;	1-genFromRTrack replaced	mov	_turns,#0x00
      000005 F5*02            [12]  966 	mov	_turns,a
                           000007   967 	C$old.c$32$1$57 ==.
                                    968 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:32: char correct=0;
                                    969 ;	1-genFromRTrack replaced	mov	_correct,#0x00
      000007 F5*03            [12]  970 	mov	_correct,a
                                    971 	.area GSFINAL (CODE)
      000000 02r00r0E         [24]  972 	ljmp	__sdcc_program_startup
                                    973 ;--------------------------------------------------------
                                    974 ; Home
                                    975 ;--------------------------------------------------------
                                    976 	.area HOME    (CODE)
                                    977 	.area HOME    (CODE)
      00000E                        978 __sdcc_program_startup:
      00000E 02r00r5C         [24]  979 	ljmp	_main
                                    980 ;	return from main will return to caller
                                    981 ;--------------------------------------------------------
                                    982 ; code
                                    983 ;--------------------------------------------------------
                                    984 	.area CSEG    (CODE)
                                    985 ;------------------------------------------------------------
                                    986 ;Allocation info for local variables in function 'SYSCLK_Init'
                                    987 ;------------------------------------------------------------
                                    988 ;i                         Allocated to registers 
                                    989 ;------------------------------------------------------------
                           000000   990 	G$SYSCLK_Init$0$0 ==.
                           000000   991 	C$c8051_SDCC.h$42$0$0 ==.
                                    992 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:42: void SYSCLK_Init(void)
                                    993 ;	-----------------------------------------
                                    994 ;	 function SYSCLK_Init
                                    995 ;	-----------------------------------------
      000000                        996 _SYSCLK_Init:
                           000007   997 	ar7 = 0x07
                           000006   998 	ar6 = 0x06
                           000005   999 	ar5 = 0x05
                           000004  1000 	ar4 = 0x04
                           000003  1001 	ar3 = 0x03
                           000002  1002 	ar2 = 0x02
                           000001  1003 	ar1 = 0x01
                           000000  1004 	ar0 = 0x00
                           000000  1005 	C$c8051_SDCC.h$46$1$2 ==.
                                   1006 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:46: OSCXCN = 0x67;                      // start external oscillator with
      000000 75 B1 67         [24] 1007 	mov	_OSCXCN,#0x67
                           000003  1008 	C$c8051_SDCC.h$49$1$2 ==.
                                   1009 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:49: for (i=0; i < 256; i++);            // wait for oscillator to start
      000003 7E 00            [12] 1010 	mov	r6,#0x00
      000005 7F 01            [12] 1011 	mov	r7,#0x01
      000007                       1012 00107$:
      000007 1E               [12] 1013 	dec	r6
      000008 BE FF 01         [24] 1014 	cjne	r6,#0xFF,00121$
      00000B 1F               [12] 1015 	dec	r7
      00000C                       1016 00121$:
      00000C EE               [12] 1017 	mov	a,r6
      00000D 4F               [12] 1018 	orl	a,r7
      00000E 70 F7            [24] 1019 	jnz	00107$
                           000010  1020 	C$c8051_SDCC.h$51$1$2 ==.
                                   1021 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:51: while (!(OSCXCN & 0x80));           // Wait for crystal osc. to settle
      000010                       1022 00102$:
      000010 E5 B1            [12] 1023 	mov	a,_OSCXCN
      000012 30 E7 FB         [24] 1024 	jnb	acc.7,00102$
                           000015  1025 	C$c8051_SDCC.h$53$1$2 ==.
                                   1026 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:53: OSCICN = 0x88;                      // select external oscillator as SYSCLK
      000015 75 B2 88         [24] 1027 	mov	_OSCICN,#0x88
                           000018  1028 	C$c8051_SDCC.h$56$1$2 ==.
                           000018  1029 	XG$SYSCLK_Init$0$0 ==.
      000018 22               [24] 1030 	ret
                                   1031 ;------------------------------------------------------------
                                   1032 ;Allocation info for local variables in function 'UART0_Init'
                                   1033 ;------------------------------------------------------------
                           000019  1034 	G$UART0_Init$0$0 ==.
                           000019  1035 	C$c8051_SDCC.h$64$1$2 ==.
                                   1036 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:64: void UART0_Init(void)
                                   1037 ;	-----------------------------------------
                                   1038 ;	 function UART0_Init
                                   1039 ;	-----------------------------------------
      000019                       1040 _UART0_Init:
                           000019  1041 	C$c8051_SDCC.h$66$1$4 ==.
                                   1042 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:66: SCON0  = 0x50;                      // SCON0: mode 1, 8-bit UART, enable RX
      000019 75 98 50         [24] 1043 	mov	_SCON0,#0x50
                           00001C  1044 	C$c8051_SDCC.h$67$1$4 ==.
                                   1045 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:67: TMOD   = 0x20;                      // TMOD: timer 1, mode 2, 8-bit reload
      00001C 75 89 20         [24] 1046 	mov	_TMOD,#0x20
                           00001F  1047 	C$c8051_SDCC.h$68$1$4 ==.
                                   1048 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:68: TH1    = -(SYSCLK/BAUDRATE/16);     // set Timer1 reload value for baudrate
      00001F 75 8D DC         [24] 1049 	mov	_TH1,#0xDC
                           000022  1050 	C$c8051_SDCC.h$69$1$4 ==.
                                   1051 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:69: TR1    = 1;                         // start Timer1
      000022 D2 8E            [12] 1052 	setb	_TR1
                           000024  1053 	C$c8051_SDCC.h$70$1$4 ==.
                                   1054 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:70: CKCON |= 0x10;                      // Timer1 uses SYSCLK as time base
      000024 43 8E 10         [24] 1055 	orl	_CKCON,#0x10
                           000027  1056 	C$c8051_SDCC.h$71$1$4 ==.
                                   1057 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:71: PCON  |= 0x80;                      // SMOD00 = 1 (disable baud rate 
      000027 43 87 80         [24] 1058 	orl	_PCON,#0x80
                           00002A  1059 	C$c8051_SDCC.h$73$1$4 ==.
                                   1060 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:73: TI0    = 1;                         // Indicate TX0 ready
      00002A D2 99            [12] 1061 	setb	_TI0
                           00002C  1062 	C$c8051_SDCC.h$74$1$4 ==.
                                   1063 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:74: P0MDOUT |= 0x01;                    // Set TX0 to push/pull
      00002C 43 A4 01         [24] 1064 	orl	_P0MDOUT,#0x01
                           00002F  1065 	C$c8051_SDCC.h$75$1$4 ==.
                           00002F  1066 	XG$UART0_Init$0$0 ==.
      00002F 22               [24] 1067 	ret
                                   1068 ;------------------------------------------------------------
                                   1069 ;Allocation info for local variables in function 'Sys_Init'
                                   1070 ;------------------------------------------------------------
                           000030  1071 	G$Sys_Init$0$0 ==.
                           000030  1072 	C$c8051_SDCC.h$83$1$4 ==.
                                   1073 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:83: void Sys_Init(void)
                                   1074 ;	-----------------------------------------
                                   1075 ;	 function Sys_Init
                                   1076 ;	-----------------------------------------
      000030                       1077 _Sys_Init:
                           000030  1078 	C$c8051_SDCC.h$85$1$6 ==.
                                   1079 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:85: WDTCN = 0xde;			// disable watchdog timer
      000030 75 FF DE         [24] 1080 	mov	_WDTCN,#0xDE
                           000033  1081 	C$c8051_SDCC.h$86$1$6 ==.
                                   1082 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:86: WDTCN = 0xad;
      000033 75 FF AD         [24] 1083 	mov	_WDTCN,#0xAD
                           000036  1084 	C$c8051_SDCC.h$88$1$6 ==.
                                   1085 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:88: SYSCLK_Init();			// initialize oscillator
      000036 12r00r00         [24] 1086 	lcall	_SYSCLK_Init
                           000039  1087 	C$c8051_SDCC.h$89$1$6 ==.
                                   1088 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:89: UART0_Init();			// initialize UART0
      000039 12r00r19         [24] 1089 	lcall	_UART0_Init
                           00003C  1090 	C$c8051_SDCC.h$91$1$6 ==.
                                   1091 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:91: XBR0 |= 0x04;
      00003C 43 E1 04         [24] 1092 	orl	_XBR0,#0x04
                           00003F  1093 	C$c8051_SDCC.h$92$1$6 ==.
                                   1094 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:92: XBR2 |= 0x40;                    	// Enable crossbar and weak pull-ups
      00003F 43 E3 40         [24] 1095 	orl	_XBR2,#0x40
                           000042  1096 	C$c8051_SDCC.h$93$1$6 ==.
                           000042  1097 	XG$Sys_Init$0$0 ==.
      000042 22               [24] 1098 	ret
                                   1099 ;------------------------------------------------------------
                                   1100 ;Allocation info for local variables in function 'putchar'
                                   1101 ;------------------------------------------------------------
                                   1102 ;c                         Allocated to registers r7 
                                   1103 ;------------------------------------------------------------
                           000043  1104 	G$putchar$0$0 ==.
                           000043  1105 	C$c8051_SDCC.h$98$1$6 ==.
                                   1106 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:98: void putchar(char c)
                                   1107 ;	-----------------------------------------
                                   1108 ;	 function putchar
                                   1109 ;	-----------------------------------------
      000043                       1110 _putchar:
      000043 AF 82            [24] 1111 	mov	r7,dpl
                           000045  1112 	C$c8051_SDCC.h$100$1$8 ==.
                                   1113 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:100: while (!TI0); 
      000045                       1114 00101$:
                           000045  1115 	C$c8051_SDCC.h$101$1$8 ==.
                                   1116 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:101: TI0 = 0;
      000045 10 99 02         [24] 1117 	jbc	_TI0,00112$
      000048 80 FB            [24] 1118 	sjmp	00101$
      00004A                       1119 00112$:
                           00004A  1120 	C$c8051_SDCC.h$102$1$8 ==.
                                   1121 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:102: SBUF0 = c;
      00004A 8F 99            [24] 1122 	mov	_SBUF0,r7
                           00004C  1123 	C$c8051_SDCC.h$103$1$8 ==.
                           00004C  1124 	XG$putchar$0$0 ==.
      00004C 22               [24] 1125 	ret
                                   1126 ;------------------------------------------------------------
                                   1127 ;Allocation info for local variables in function 'getchar'
                                   1128 ;------------------------------------------------------------
                                   1129 ;c                         Allocated to registers 
                                   1130 ;------------------------------------------------------------
                           00004D  1131 	G$getchar$0$0 ==.
                           00004D  1132 	C$c8051_SDCC.h$108$1$8 ==.
                                   1133 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:108: char getchar(void)
                                   1134 ;	-----------------------------------------
                                   1135 ;	 function getchar
                                   1136 ;	-----------------------------------------
      00004D                       1137 _getchar:
                           00004D  1138 	C$c8051_SDCC.h$111$1$10 ==.
                                   1139 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:111: while (!RI0);
      00004D                       1140 00101$:
                           00004D  1141 	C$c8051_SDCC.h$112$1$10 ==.
                                   1142 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:112: RI0 = 0;
      00004D 10 98 02         [24] 1143 	jbc	_RI0,00112$
      000050 80 FB            [24] 1144 	sjmp	00101$
      000052                       1145 00112$:
                           000052  1146 	C$c8051_SDCC.h$113$1$10 ==.
                                   1147 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:113: c = SBUF0;
      000052 85 99 82         [24] 1148 	mov	dpl,_SBUF0
                           000055  1149 	C$c8051_SDCC.h$114$1$10 ==.
                                   1150 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:114: putchar(c);                          // echo to terminal
      000055 12r00r43         [24] 1151 	lcall	_putchar
                           000058  1152 	C$c8051_SDCC.h$115$1$10 ==.
                                   1153 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:115: return SBUF0;
      000058 85 99 82         [24] 1154 	mov	dpl,_SBUF0
                           00005B  1155 	C$c8051_SDCC.h$116$1$10 ==.
                           00005B  1156 	XG$getchar$0$0 ==.
      00005B 22               [24] 1157 	ret
                                   1158 ;------------------------------------------------------------
                                   1159 ;Allocation info for local variables in function 'main'
                                   1160 ;------------------------------------------------------------
                                   1161 ;temp                      Allocated with name '_main_temp_1_47'
                                   1162 ;------------------------------------------------------------
                           00005C  1163 	G$main$0$0 ==.
                           00005C  1164 	C$old.c$37$1$10 ==.
                                   1165 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:37: void main(void)
                                   1166 ;	-----------------------------------------
                                   1167 ;	 function main
                                   1168 ;	-----------------------------------------
      00005C                       1169 _main:
                           00005C  1170 	C$old.c$42$1$47 ==.
                                   1171 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:42: Sys_Init();      // System Initialization
      00005C 12r00r30         [24] 1172 	lcall	_Sys_Init
                           00005F  1173 	C$old.c$43$1$47 ==.
                                   1174 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:43: Port_Init();     // Initialize ports 2 and 3 
      00005F 12r00rAC         [24] 1175 	lcall	_Port_Init
                           000062  1176 	C$old.c$44$1$47 ==.
                                   1177 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:44: Interrupt_Init(); // Initilize Interrupt
      000062 12r00rAD         [24] 1178 	lcall	_Interrupt_Init
                           000065  1179 	C$old.c$45$1$47 ==.
                                   1180 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:45: Timer_Init();    // Initialize Timer 0 
      000065 12r00rB3         [24] 1181 	lcall	_Timer_Init
                           000068  1182 	C$old.c$46$1$47 ==.
                                   1183 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:46: putchar(' ');    
      000068 75 82 20         [24] 1184 	mov	dpl,#0x20
      00006B 12r00r43         [24] 1185 	lcall	_putchar
                           00006E  1186 	C$old.c$47$1$47 ==.
                                   1187 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:47: printf("Start\r\n");
      00006E 74r00            [12] 1188 	mov	a,#___str_0
      000070 C0 E0            [24] 1189 	push	acc
      000072 74s00            [12] 1190 	mov	a,#(___str_0 >> 8)
      000074 C0 E0            [24] 1191 	push	acc
      000076 74 80            [12] 1192 	mov	a,#0x80
      000078 C0 E0            [24] 1193 	push	acc
      00007A 12r00r00         [24] 1194 	lcall	_printf
      00007D 15 81            [12] 1195 	dec	sp
      00007F 15 81            [12] 1196 	dec	sp
      000081 15 81            [12] 1197 	dec	sp
                           000083  1198 	C$old.c$50$1$47 ==.
                                   1199 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:50: while (1) 
      000083                       1200 00104$:
                           000083  1201 	C$old.c$53$2$48 ==.
                                   1202 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:53: TR0 = 1;     // Timer 0 enabled
      000083 D2 8C            [12] 1203 	setb	_TR0
                           000085  1204 	C$old.c$54$2$48 ==.
                                   1205 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:54: if (Counts>255){printf("WE DID IT");Counts =0;}     
      000085 C3               [12] 1206 	clr	c
      000086 74 FF            [12] 1207 	mov	a,#0xFF
      000088 95*00            [12] 1208 	subb	a,_Counts
      00008A E4               [12] 1209 	clr	a
      00008B 95*01            [12] 1210 	subb	a,(_Counts + 1)
      00008D 50 F4            [24] 1211 	jnc	00104$
      00008F 74r08            [12] 1212 	mov	a,#___str_1
      000091 C0 E0            [24] 1213 	push	acc
      000093 74s00            [12] 1214 	mov	a,#(___str_1 >> 8)
      000095 C0 E0            [24] 1215 	push	acc
      000097 74 80            [12] 1216 	mov	a,#0x80
      000099 C0 E0            [24] 1217 	push	acc
      00009B 12r00r00         [24] 1218 	lcall	_printf
      00009E 15 81            [12] 1219 	dec	sp
      0000A0 15 81            [12] 1220 	dec	sp
      0000A2 15 81            [12] 1221 	dec	sp
      0000A4 E4               [12] 1222 	clr	a
      0000A5 F5*00            [12] 1223 	mov	_Counts,a
      0000A7 F5*01            [12] 1224 	mov	(_Counts + 1),a
      0000A9 80 D8            [24] 1225 	sjmp	00104$
                           0000AB  1226 	C$old.c$59$1$47 ==.
                           0000AB  1227 	XG$main$0$0 ==.
      0000AB 22               [24] 1228 	ret
                                   1229 ;------------------------------------------------------------
                                   1230 ;Allocation info for local variables in function 'Port_Init'
                                   1231 ;------------------------------------------------------------
                           0000AC  1232 	G$Port_Init$0$0 ==.
                           0000AC  1233 	C$old.c$62$1$47 ==.
                                   1234 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:62: void Port_Init(void)
                                   1235 ;	-----------------------------------------
                                   1236 ;	 function Port_Init
                                   1237 ;	-----------------------------------------
      0000AC                       1238 _Port_Init:
                           0000AC  1239 	C$old.c$76$1$47 ==.
                                   1240 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:76: }
                           0000AC  1241 	C$old.c$76$1$47 ==.
                           0000AC  1242 	XG$Port_Init$0$0 ==.
      0000AC 22               [24] 1243 	ret
                                   1244 ;------------------------------------------------------------
                                   1245 ;Allocation info for local variables in function 'Interrupt_Init'
                                   1246 ;------------------------------------------------------------
                           0000AD  1247 	G$Interrupt_Init$0$0 ==.
                           0000AD  1248 	C$old.c$78$1$47 ==.
                                   1249 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:78: void Interrupt_Init(void)
                                   1250 ;	-----------------------------------------
                                   1251 ;	 function Interrupt_Init
                                   1252 ;	-----------------------------------------
      0000AD                       1253 _Interrupt_Init:
                           0000AD  1254 	C$old.c$80$1$53 ==.
                                   1255 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:80: IE |= 0x02;      // enable Timer0 Interrupt request, page 44
      0000AD 43 A8 02         [24] 1256 	orl	_IE,#0x02
                           0000B0  1257 	C$old.c$81$1$53 ==.
                                   1258 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:81: EA = 1;       // enable global interrupts
      0000B0 D2 AF            [12] 1259 	setb	_EA
                           0000B2  1260 	C$old.c$82$1$53 ==.
                           0000B2  1261 	XG$Interrupt_Init$0$0 ==.
      0000B2 22               [24] 1262 	ret
                                   1263 ;------------------------------------------------------------
                                   1264 ;Allocation info for local variables in function 'Timer_Init'
                                   1265 ;------------------------------------------------------------
                           0000B3  1266 	G$Timer_Init$0$0 ==.
                           0000B3  1267 	C$old.c$84$1$53 ==.
                                   1268 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:84: void Timer_Init(void)
                                   1269 ;	-----------------------------------------
                                   1270 ;	 function Timer_Init
                                   1271 ;	-----------------------------------------
      0000B3                       1272 _Timer_Init:
                           0000B3  1273 	C$old.c$87$1$55 ==.
                                   1274 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:87: CKCON |= 0x08;  // Timer0 uses SYSCLK as source
      0000B3 43 8E 08         [24] 1275 	orl	_CKCON,#0x08
                           0000B6  1276 	C$old.c$88$1$55 ==.
                                   1277 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:88: TMOD &= ~0x0F;   // clear the 4 least significant bits
      0000B6 AF 89            [24] 1278 	mov	r7,_TMOD
      0000B8 74 F0            [12] 1279 	mov	a,#0xF0
      0000BA 5F               [12] 1280 	anl	a,r7
      0000BB F5 89            [12] 1281 	mov	_TMOD,a
                           0000BD  1282 	C$old.c$89$1$55 ==.
                                   1283 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:89: TMOD |= 0x01;   // Timer0 in mode 1
      0000BD 43 89 01         [24] 1284 	orl	_TMOD,#0x01
                           0000C0  1285 	C$old.c$91$1$55 ==.
                                   1286 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:91: TR0 = 0;           // Stop Timer0
      0000C0 C2 8C            [12] 1287 	clr	_TR0
                           0000C2  1288 	C$old.c$92$1$55 ==.
                                   1289 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:92: TL0 = 0;           // Clear low byte of register T0
      0000C2 75 8A 00         [24] 1290 	mov	_TL0,#0x00
                           0000C5  1291 	C$old.c$93$1$55 ==.
                                   1292 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:93: TH0 = 0;           // Clear high byte of register T0
      0000C5 75 8C 00         [24] 1293 	mov	_TH0,#0x00
                           0000C8  1294 	C$old.c$95$1$55 ==.
                           0000C8  1295 	XG$Timer_Init$0$0 ==.
      0000C8 22               [24] 1296 	ret
                                   1297 ;------------------------------------------------------------
                                   1298 ;Allocation info for local variables in function 'Timer0_ISR'
                                   1299 ;------------------------------------------------------------
                           0000C9  1300 	G$Timer0_ISR$0$0 ==.
                           0000C9  1301 	C$old.c$99$1$55 ==.
                                   1302 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:99: void Timer0_ISR(void) __interrupt 1
                                   1303 ;	-----------------------------------------
                                   1304 ;	 function Timer0_ISR
                                   1305 ;	-----------------------------------------
      0000C9                       1306 _Timer0_ISR:
      0000C9 C0 E0            [24] 1307 	push	acc
      0000CB C0 D0            [24] 1308 	push	psw
                           0000CD  1309 	C$old.c$101$1$57 ==.
                                   1310 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:101: TF0=0;
      0000CD C2 8D            [12] 1311 	clr	_TF0
                           0000CF  1312 	C$old.c$102$1$57 ==.
                                   1313 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.2-Silly Time\old.c:102: Counts++;
      0000CF 05*00            [12] 1314 	inc	_Counts
      0000D1 E4               [12] 1315 	clr	a
      0000D2 B5*00 02         [24] 1316 	cjne	a,_Counts,00103$
      0000D5 05*01            [12] 1317 	inc	(_Counts + 1)
      0000D7                       1318 00103$:
      0000D7 D0 D0            [24] 1319 	pop	psw
      0000D9 D0 E0            [24] 1320 	pop	acc
                           0000DB  1321 	C$old.c$105$1$57 ==.
                           0000DB  1322 	XG$Timer0_ISR$0$0 ==.
      0000DB 32               [24] 1323 	reti
                                   1324 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   1325 ;	eliminated unneeded push/pop dpl
                                   1326 ;	eliminated unneeded push/pop dph
                                   1327 ;	eliminated unneeded push/pop b
                                   1328 	.area CSEG    (CODE)
                                   1329 	.area CONST   (CODE)
                           000000  1330 Fold$__str_0$0$0 == .
      000000                       1331 ___str_0:
      000000 53 74 61 72 74        1332 	.ascii "Start"
      000005 0D                    1333 	.db 0x0D
      000006 0A                    1334 	.db 0x0A
      000007 00                    1335 	.db 0x00
                           000008  1336 Fold$__str_1$0$0 == .
      000008                       1337 ___str_1:
      000008 57 45 20 44 49 44 20  1338 	.ascii "WE DID IT"
             49 54
      000011 00                    1339 	.db 0x00
                                   1340 	.area XINIT   (CODE)
                                   1341 	.area CABS    (ABS,CODE)
