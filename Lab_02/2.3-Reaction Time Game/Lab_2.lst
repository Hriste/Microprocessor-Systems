                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Apr  5 2014) (MINGW32)
                                      4 ; This file was generated Thu Sep 22 18:09:15 2016
                                      5 ;--------------------------------------------------------
                                      6 	.module Lab_2
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _rand
                                     13 	.globl _printf
                                     14 	.globl _P7_7
                                     15 	.globl _P7_6
                                     16 	.globl _P7_5
                                     17 	.globl _P7_4
                                     18 	.globl _P7_3
                                     19 	.globl _P7_2
                                     20 	.globl _P7_1
                                     21 	.globl _P7_0
                                     22 	.globl _SPIF
                                     23 	.globl _WCOL
                                     24 	.globl _MODF
                                     25 	.globl _RXOVRN
                                     26 	.globl _NSSMD1
                                     27 	.globl _NSSMD0
                                     28 	.globl _TXBMT
                                     29 	.globl _SPIEN
                                     30 	.globl _P6_7
                                     31 	.globl _P6_6
                                     32 	.globl _P6_5
                                     33 	.globl _P6_4
                                     34 	.globl _P6_3
                                     35 	.globl _P6_2
                                     36 	.globl _P6_1
                                     37 	.globl _P6_0
                                     38 	.globl _AD2EN
                                     39 	.globl _AD2TM
                                     40 	.globl _AD2INT
                                     41 	.globl _AD2BUSY
                                     42 	.globl _AD2CM2
                                     43 	.globl _AD2CM1
                                     44 	.globl _AD2CM0
                                     45 	.globl _AD2WINT
                                     46 	.globl _AD0EN
                                     47 	.globl _AD0TM
                                     48 	.globl _AD0INT
                                     49 	.globl _AD0BUSY
                                     50 	.globl _AD0CM1
                                     51 	.globl _AD0CM0
                                     52 	.globl _AD0WINT
                                     53 	.globl _AD0LJST
                                     54 	.globl _P5_7
                                     55 	.globl _P5_6
                                     56 	.globl _P5_5
                                     57 	.globl _P5_4
                                     58 	.globl _P5_3
                                     59 	.globl _P5_2
                                     60 	.globl _P5_1
                                     61 	.globl _P5_0
                                     62 	.globl _CF
                                     63 	.globl _CR
                                     64 	.globl _CCF5
                                     65 	.globl _CCF4
                                     66 	.globl _CCF3
                                     67 	.globl _CCF2
                                     68 	.globl _CCF1
                                     69 	.globl _CCF0
                                     70 	.globl _CY
                                     71 	.globl _AC
                                     72 	.globl _F0
                                     73 	.globl _RS1
                                     74 	.globl _RS0
                                     75 	.globl _OV
                                     76 	.globl _F1
                                     77 	.globl _P
                                     78 	.globl _P4_7
                                     79 	.globl _P4_6
                                     80 	.globl _P4_5
                                     81 	.globl _P4_4
                                     82 	.globl _P4_3
                                     83 	.globl _P4_2
                                     84 	.globl _P4_1
                                     85 	.globl _P4_0
                                     86 	.globl _TF4
                                     87 	.globl _EXF4
                                     88 	.globl _EXEN4
                                     89 	.globl _TR4
                                     90 	.globl _CT4
                                     91 	.globl _CPRL4
                                     92 	.globl _TF3
                                     93 	.globl _EXF3
                                     94 	.globl _EXEN3
                                     95 	.globl _TR3
                                     96 	.globl _CT3
                                     97 	.globl _CPRL3
                                     98 	.globl _TF2
                                     99 	.globl _EXF2
                                    100 	.globl _EXEN2
                                    101 	.globl _TR2
                                    102 	.globl _CT2
                                    103 	.globl _CPRL2
                                    104 	.globl _MAC0HO
                                    105 	.globl _MAC0Z
                                    106 	.globl _MAC0SO
                                    107 	.globl _MAC0N
                                    108 	.globl _BUSY
                                    109 	.globl _ENSMB
                                    110 	.globl _STA
                                    111 	.globl _STO
                                    112 	.globl _SI
                                    113 	.globl _AA
                                    114 	.globl _SMBFTE
                                    115 	.globl _SMBTOE
                                    116 	.globl _PT2
                                    117 	.globl _PS
                                    118 	.globl _PS0
                                    119 	.globl _PT1
                                    120 	.globl _PX1
                                    121 	.globl _PT0
                                    122 	.globl _PX0
                                    123 	.globl _P3_7
                                    124 	.globl _P3_6
                                    125 	.globl _P3_5
                                    126 	.globl _P3_4
                                    127 	.globl _P3_3
                                    128 	.globl _P3_2
                                    129 	.globl _P3_1
                                    130 	.globl _P3_0
                                    131 	.globl _EA
                                    132 	.globl _ET2
                                    133 	.globl _ES
                                    134 	.globl _ES0
                                    135 	.globl _ET1
                                    136 	.globl _EX1
                                    137 	.globl _ET0
                                    138 	.globl _EX0
                                    139 	.globl _P2_7
                                    140 	.globl _P2_6
                                    141 	.globl _P2_5
                                    142 	.globl _P2_4
                                    143 	.globl _P2_3
                                    144 	.globl _P2_2
                                    145 	.globl _P2_1
                                    146 	.globl _P2_0
                                    147 	.globl _S1MODE
                                    148 	.globl _MCE1
                                    149 	.globl _REN1
                                    150 	.globl _TB81
                                    151 	.globl _RB81
                                    152 	.globl _TI1
                                    153 	.globl _RI1
                                    154 	.globl _SM00
                                    155 	.globl _SM10
                                    156 	.globl _SM20
                                    157 	.globl _REN
                                    158 	.globl _REN0
                                    159 	.globl _TB80
                                    160 	.globl _RB80
                                    161 	.globl _TI
                                    162 	.globl _TI0
                                    163 	.globl _RI
                                    164 	.globl _RI0
                                    165 	.globl _P1_7
                                    166 	.globl _P1_6
                                    167 	.globl _P1_5
                                    168 	.globl _P1_4
                                    169 	.globl _P1_3
                                    170 	.globl _P1_2
                                    171 	.globl _P1_1
                                    172 	.globl _P1_0
                                    173 	.globl _FLHBUSY
                                    174 	.globl _CP1EN
                                    175 	.globl _CP1OUT
                                    176 	.globl _CP1RIF
                                    177 	.globl _CP1FIF
                                    178 	.globl _CP1HYP1
                                    179 	.globl _CP1HYP0
                                    180 	.globl _CP1HYN1
                                    181 	.globl _CP1HYN0
                                    182 	.globl _CP0EN
                                    183 	.globl _CP0OUT
                                    184 	.globl _CP0RIF
                                    185 	.globl _CP0FIF
                                    186 	.globl _CP0HYP1
                                    187 	.globl _CP0HYP0
                                    188 	.globl _CP0HYN1
                                    189 	.globl _CP0HYN0
                                    190 	.globl _TF1
                                    191 	.globl _TR1
                                    192 	.globl _TF0
                                    193 	.globl _TR0
                                    194 	.globl _IE1
                                    195 	.globl _IT1
                                    196 	.globl _IE0
                                    197 	.globl _IT0
                                    198 	.globl _P0_7
                                    199 	.globl _P0_6
                                    200 	.globl _P0_5
                                    201 	.globl _P0_4
                                    202 	.globl _P0_3
                                    203 	.globl _P0_2
                                    204 	.globl _P0_1
                                    205 	.globl _P0_0
                                    206 	.globl _MAC0RND
                                    207 	.globl _MAC0ACC
                                    208 	.globl _MAC0A
                                    209 	.globl _RCAP4
                                    210 	.globl _TMR4
                                    211 	.globl _DAC1
                                    212 	.globl _RCAP3
                                    213 	.globl _TMR3
                                    214 	.globl _PCA0CP5
                                    215 	.globl _PCA0CP4
                                    216 	.globl _PCA0CP3
                                    217 	.globl _PCA0CP2
                                    218 	.globl _PCA0CP1
                                    219 	.globl _PCA0CP0
                                    220 	.globl _PCA0
                                    221 	.globl _DAC0
                                    222 	.globl _ADC0LT
                                    223 	.globl _ADC0GT
                                    224 	.globl _ADC0
                                    225 	.globl _RCAP2
                                    226 	.globl _TMR2
                                    227 	.globl _TMR1
                                    228 	.globl _TMR0
                                    229 	.globl _P7
                                    230 	.globl _P6
                                    231 	.globl _XBR2
                                    232 	.globl _XBR1
                                    233 	.globl _XBR0
                                    234 	.globl _P5
                                    235 	.globl _P4
                                    236 	.globl _FLACL
                                    237 	.globl _P1MDIN
                                    238 	.globl _P3MDOUT
                                    239 	.globl _P2MDOUT
                                    240 	.globl _P1MDOUT
                                    241 	.globl _P0MDOUT
                                    242 	.globl _CCH0LC
                                    243 	.globl _CCH0TN
                                    244 	.globl _CCH0CN
                                    245 	.globl _P7MDOUT
                                    246 	.globl _P6MDOUT
                                    247 	.globl _P5MDOUT
                                    248 	.globl _P4MDOUT
                                    249 	.globl _CCH0MA
                                    250 	.globl _CLKSEL
                                    251 	.globl _SFRPGCN
                                    252 	.globl _PLL0FLT
                                    253 	.globl _PLL0MUL
                                    254 	.globl _PLL0DIV
                                    255 	.globl _OSCXCN
                                    256 	.globl _OSCICL
                                    257 	.globl _OSCICN
                                    258 	.globl _PLL0CN
                                    259 	.globl _FLSTAT
                                    260 	.globl _MAC0RNDH
                                    261 	.globl _MAC0RNDL
                                    262 	.globl _MAC0CF
                                    263 	.globl _MAC0AH
                                    264 	.globl _MAC0AL
                                    265 	.globl _MAC0STA
                                    266 	.globl _MAC0OVR
                                    267 	.globl _MAC0ACC3
                                    268 	.globl _MAC0ACC2
                                    269 	.globl _MAC0ACC1
                                    270 	.globl _MAC0ACC0
                                    271 	.globl _MAC0BH
                                    272 	.globl _MAC0BL
                                    273 	.globl _ADC2CN
                                    274 	.globl _TMR4H
                                    275 	.globl _TMR4L
                                    276 	.globl _RCAP4H
                                    277 	.globl _RCAP4L
                                    278 	.globl _TMR4CF
                                    279 	.globl _TMR4CN
                                    280 	.globl _ADC2LT
                                    281 	.globl _ADC2GT
                                    282 	.globl _ADC2
                                    283 	.globl _ADC2CF
                                    284 	.globl _AMX2SL
                                    285 	.globl _AMX2CF
                                    286 	.globl _CPT1MD
                                    287 	.globl _CPT1CN
                                    288 	.globl _DAC1CN
                                    289 	.globl _DAC1H
                                    290 	.globl _DAC1L
                                    291 	.globl _TMR3H
                                    292 	.globl _TMR3L
                                    293 	.globl _RCAP3H
                                    294 	.globl _RCAP3L
                                    295 	.globl _TMR3CF
                                    296 	.globl _TMR3CN
                                    297 	.globl _SBUF1
                                    298 	.globl _SCON1
                                    299 	.globl _CPT0MD
                                    300 	.globl _CPT0CN
                                    301 	.globl _PCA0CPH1
                                    302 	.globl _PCA0CPL1
                                    303 	.globl _PCA0CPH0
                                    304 	.globl _PCA0CPL0
                                    305 	.globl _PCA0H
                                    306 	.globl _PCA0L
                                    307 	.globl _SPI0CN
                                    308 	.globl _RSTSRC
                                    309 	.globl _PCA0CPH4
                                    310 	.globl _PCA0CPL4
                                    311 	.globl _PCA0CPH3
                                    312 	.globl _PCA0CPL3
                                    313 	.globl _PCA0CPH2
                                    314 	.globl _PCA0CPL2
                                    315 	.globl _ADC0CN
                                    316 	.globl _PCA0CPH5
                                    317 	.globl _PCA0CPL5
                                    318 	.globl _PCA0CPM5
                                    319 	.globl _PCA0CPM4
                                    320 	.globl _PCA0CPM3
                                    321 	.globl _PCA0CPM2
                                    322 	.globl _PCA0CPM1
                                    323 	.globl _PCA0CPM0
                                    324 	.globl _PCA0MD
                                    325 	.globl _PCA0CN
                                    326 	.globl _DAC0CN
                                    327 	.globl _DAC0H
                                    328 	.globl _DAC0L
                                    329 	.globl _REF0CN
                                    330 	.globl _SMB0CR
                                    331 	.globl _TH2
                                    332 	.globl _TMR2H
                                    333 	.globl _TL2
                                    334 	.globl _TMR2L
                                    335 	.globl _RCAP2H
                                    336 	.globl _RCAP2L
                                    337 	.globl _TMR2CF
                                    338 	.globl _TMR2CN
                                    339 	.globl _ADC0LTH
                                    340 	.globl _ADC0LTL
                                    341 	.globl _ADC0GTH
                                    342 	.globl _ADC0GTL
                                    343 	.globl _SMB0ADR
                                    344 	.globl _SMB0DAT
                                    345 	.globl _SMB0STA
                                    346 	.globl _SMB0CN
                                    347 	.globl _ADC0H
                                    348 	.globl _ADC0L
                                    349 	.globl _ADC0CF
                                    350 	.globl _AMX0SL
                                    351 	.globl _AMX0CF
                                    352 	.globl _SADEN0
                                    353 	.globl _FLSCL
                                    354 	.globl _SADDR0
                                    355 	.globl _EMI0CF
                                    356 	.globl __XPAGE
                                    357 	.globl _EMI0CN
                                    358 	.globl _EMI0TC
                                    359 	.globl _SPI0CKR
                                    360 	.globl _SPI0DAT
                                    361 	.globl _SPI0CFG
                                    362 	.globl _SBUF
                                    363 	.globl _SBUF0
                                    364 	.globl _SCON
                                    365 	.globl _SCON0
                                    366 	.globl _SSTA0
                                    367 	.globl _PSCTL
                                    368 	.globl _CKCON
                                    369 	.globl _TH1
                                    370 	.globl _TH0
                                    371 	.globl _TL1
                                    372 	.globl _TL0
                                    373 	.globl _TMOD
                                    374 	.globl _TCON
                                    375 	.globl _WDTCN
                                    376 	.globl _EIP2
                                    377 	.globl _EIP1
                                    378 	.globl _B
                                    379 	.globl _EIE2
                                    380 	.globl _EIE1
                                    381 	.globl _ACC
                                    382 	.globl _PSW
                                    383 	.globl _IP
                                    384 	.globl _PSBANK
                                    385 	.globl _P3
                                    386 	.globl _IE
                                    387 	.globl _P2
                                    388 	.globl _P1
                                    389 	.globl _PCON
                                    390 	.globl _SFRLAST
                                    391 	.globl _SFRNEXT
                                    392 	.globl _SFRPAGE
                                    393 	.globl _DPH
                                    394 	.globl _DPL
                                    395 	.globl _SP
                                    396 	.globl _P0
                                    397 	.globl _SW2press
                                    398 	.globl _tenth
                                    399 	.globl _time
                                    400 	.globl _putchar
                                    401 	.globl _getchar
                                    402 	.globl _main
                                    403 	.globl _Timer0_ISR
                                    404 	.globl _SW2_ISR
                                    405 	.globl _Flash
                                    406 	.globl _PORT_INIT
                                    407 	.globl _SYSCLK_INIT
                                    408 	.globl _UART0_INIT
                                    409 ;--------------------------------------------------------
                                    410 ; special function registers
                                    411 ;--------------------------------------------------------
                                    412 	.area RSEG    (ABS,DATA)
      000000                        413 	.org 0x0000
                           000080   414 G$P0$0$0 == 0x0080
                           000080   415 _P0	=	0x0080
                           000081   416 G$SP$0$0 == 0x0081
                           000081   417 _SP	=	0x0081
                           000082   418 G$DPL$0$0 == 0x0082
                           000082   419 _DPL	=	0x0082
                           000083   420 G$DPH$0$0 == 0x0083
                           000083   421 _DPH	=	0x0083
                           000084   422 G$SFRPAGE$0$0 == 0x0084
                           000084   423 _SFRPAGE	=	0x0084
                           000085   424 G$SFRNEXT$0$0 == 0x0085
                           000085   425 _SFRNEXT	=	0x0085
                           000086   426 G$SFRLAST$0$0 == 0x0086
                           000086   427 _SFRLAST	=	0x0086
                           000087   428 G$PCON$0$0 == 0x0087
                           000087   429 _PCON	=	0x0087
                           000090   430 G$P1$0$0 == 0x0090
                           000090   431 _P1	=	0x0090
                           0000A0   432 G$P2$0$0 == 0x00a0
                           0000A0   433 _P2	=	0x00a0
                           0000A8   434 G$IE$0$0 == 0x00a8
                           0000A8   435 _IE	=	0x00a8
                           0000B0   436 G$P3$0$0 == 0x00b0
                           0000B0   437 _P3	=	0x00b0
                           0000B1   438 G$PSBANK$0$0 == 0x00b1
                           0000B1   439 _PSBANK	=	0x00b1
                           0000B8   440 G$IP$0$0 == 0x00b8
                           0000B8   441 _IP	=	0x00b8
                           0000D0   442 G$PSW$0$0 == 0x00d0
                           0000D0   443 _PSW	=	0x00d0
                           0000E0   444 G$ACC$0$0 == 0x00e0
                           0000E0   445 _ACC	=	0x00e0
                           0000E6   446 G$EIE1$0$0 == 0x00e6
                           0000E6   447 _EIE1	=	0x00e6
                           0000E7   448 G$EIE2$0$0 == 0x00e7
                           0000E7   449 _EIE2	=	0x00e7
                           0000F0   450 G$B$0$0 == 0x00f0
                           0000F0   451 _B	=	0x00f0
                           0000F6   452 G$EIP1$0$0 == 0x00f6
                           0000F6   453 _EIP1	=	0x00f6
                           0000F7   454 G$EIP2$0$0 == 0x00f7
                           0000F7   455 _EIP2	=	0x00f7
                           0000FF   456 G$WDTCN$0$0 == 0x00ff
                           0000FF   457 _WDTCN	=	0x00ff
                           000088   458 G$TCON$0$0 == 0x0088
                           000088   459 _TCON	=	0x0088
                           000089   460 G$TMOD$0$0 == 0x0089
                           000089   461 _TMOD	=	0x0089
                           00008A   462 G$TL0$0$0 == 0x008a
                           00008A   463 _TL0	=	0x008a
                           00008B   464 G$TL1$0$0 == 0x008b
                           00008B   465 _TL1	=	0x008b
                           00008C   466 G$TH0$0$0 == 0x008c
                           00008C   467 _TH0	=	0x008c
                           00008D   468 G$TH1$0$0 == 0x008d
                           00008D   469 _TH1	=	0x008d
                           00008E   470 G$CKCON$0$0 == 0x008e
                           00008E   471 _CKCON	=	0x008e
                           00008F   472 G$PSCTL$0$0 == 0x008f
                           00008F   473 _PSCTL	=	0x008f
                           000091   474 G$SSTA0$0$0 == 0x0091
                           000091   475 _SSTA0	=	0x0091
                           000098   476 G$SCON0$0$0 == 0x0098
                           000098   477 _SCON0	=	0x0098
                           000098   478 G$SCON$0$0 == 0x0098
                           000098   479 _SCON	=	0x0098
                           000099   480 G$SBUF0$0$0 == 0x0099
                           000099   481 _SBUF0	=	0x0099
                           000099   482 G$SBUF$0$0 == 0x0099
                           000099   483 _SBUF	=	0x0099
                           00009A   484 G$SPI0CFG$0$0 == 0x009a
                           00009A   485 _SPI0CFG	=	0x009a
                           00009B   486 G$SPI0DAT$0$0 == 0x009b
                           00009B   487 _SPI0DAT	=	0x009b
                           00009D   488 G$SPI0CKR$0$0 == 0x009d
                           00009D   489 _SPI0CKR	=	0x009d
                           0000A1   490 G$EMI0TC$0$0 == 0x00a1
                           0000A1   491 _EMI0TC	=	0x00a1
                           0000A2   492 G$EMI0CN$0$0 == 0x00a2
                           0000A2   493 _EMI0CN	=	0x00a2
                           0000A2   494 G$_XPAGE$0$0 == 0x00a2
                           0000A2   495 __XPAGE	=	0x00a2
                           0000A3   496 G$EMI0CF$0$0 == 0x00a3
                           0000A3   497 _EMI0CF	=	0x00a3
                           0000A9   498 G$SADDR0$0$0 == 0x00a9
                           0000A9   499 _SADDR0	=	0x00a9
                           0000B7   500 G$FLSCL$0$0 == 0x00b7
                           0000B7   501 _FLSCL	=	0x00b7
                           0000B9   502 G$SADEN0$0$0 == 0x00b9
                           0000B9   503 _SADEN0	=	0x00b9
                           0000BA   504 G$AMX0CF$0$0 == 0x00ba
                           0000BA   505 _AMX0CF	=	0x00ba
                           0000BB   506 G$AMX0SL$0$0 == 0x00bb
                           0000BB   507 _AMX0SL	=	0x00bb
                           0000BC   508 G$ADC0CF$0$0 == 0x00bc
                           0000BC   509 _ADC0CF	=	0x00bc
                           0000BE   510 G$ADC0L$0$0 == 0x00be
                           0000BE   511 _ADC0L	=	0x00be
                           0000BF   512 G$ADC0H$0$0 == 0x00bf
                           0000BF   513 _ADC0H	=	0x00bf
                           0000C0   514 G$SMB0CN$0$0 == 0x00c0
                           0000C0   515 _SMB0CN	=	0x00c0
                           0000C1   516 G$SMB0STA$0$0 == 0x00c1
                           0000C1   517 _SMB0STA	=	0x00c1
                           0000C2   518 G$SMB0DAT$0$0 == 0x00c2
                           0000C2   519 _SMB0DAT	=	0x00c2
                           0000C3   520 G$SMB0ADR$0$0 == 0x00c3
                           0000C3   521 _SMB0ADR	=	0x00c3
                           0000C4   522 G$ADC0GTL$0$0 == 0x00c4
                           0000C4   523 _ADC0GTL	=	0x00c4
                           0000C5   524 G$ADC0GTH$0$0 == 0x00c5
                           0000C5   525 _ADC0GTH	=	0x00c5
                           0000C6   526 G$ADC0LTL$0$0 == 0x00c6
                           0000C6   527 _ADC0LTL	=	0x00c6
                           0000C7   528 G$ADC0LTH$0$0 == 0x00c7
                           0000C7   529 _ADC0LTH	=	0x00c7
                           0000C8   530 G$TMR2CN$0$0 == 0x00c8
                           0000C8   531 _TMR2CN	=	0x00c8
                           0000C9   532 G$TMR2CF$0$0 == 0x00c9
                           0000C9   533 _TMR2CF	=	0x00c9
                           0000CA   534 G$RCAP2L$0$0 == 0x00ca
                           0000CA   535 _RCAP2L	=	0x00ca
                           0000CB   536 G$RCAP2H$0$0 == 0x00cb
                           0000CB   537 _RCAP2H	=	0x00cb
                           0000CC   538 G$TMR2L$0$0 == 0x00cc
                           0000CC   539 _TMR2L	=	0x00cc
                           0000CC   540 G$TL2$0$0 == 0x00cc
                           0000CC   541 _TL2	=	0x00cc
                           0000CD   542 G$TMR2H$0$0 == 0x00cd
                           0000CD   543 _TMR2H	=	0x00cd
                           0000CD   544 G$TH2$0$0 == 0x00cd
                           0000CD   545 _TH2	=	0x00cd
                           0000CF   546 G$SMB0CR$0$0 == 0x00cf
                           0000CF   547 _SMB0CR	=	0x00cf
                           0000D1   548 G$REF0CN$0$0 == 0x00d1
                           0000D1   549 _REF0CN	=	0x00d1
                           0000D2   550 G$DAC0L$0$0 == 0x00d2
                           0000D2   551 _DAC0L	=	0x00d2
                           0000D3   552 G$DAC0H$0$0 == 0x00d3
                           0000D3   553 _DAC0H	=	0x00d3
                           0000D4   554 G$DAC0CN$0$0 == 0x00d4
                           0000D4   555 _DAC0CN	=	0x00d4
                           0000D8   556 G$PCA0CN$0$0 == 0x00d8
                           0000D8   557 _PCA0CN	=	0x00d8
                           0000D9   558 G$PCA0MD$0$0 == 0x00d9
                           0000D9   559 _PCA0MD	=	0x00d9
                           0000DA   560 G$PCA0CPM0$0$0 == 0x00da
                           0000DA   561 _PCA0CPM0	=	0x00da
                           0000DB   562 G$PCA0CPM1$0$0 == 0x00db
                           0000DB   563 _PCA0CPM1	=	0x00db
                           0000DC   564 G$PCA0CPM2$0$0 == 0x00dc
                           0000DC   565 _PCA0CPM2	=	0x00dc
                           0000DD   566 G$PCA0CPM3$0$0 == 0x00dd
                           0000DD   567 _PCA0CPM3	=	0x00dd
                           0000DE   568 G$PCA0CPM4$0$0 == 0x00de
                           0000DE   569 _PCA0CPM4	=	0x00de
                           0000DF   570 G$PCA0CPM5$0$0 == 0x00df
                           0000DF   571 _PCA0CPM5	=	0x00df
                           0000E1   572 G$PCA0CPL5$0$0 == 0x00e1
                           0000E1   573 _PCA0CPL5	=	0x00e1
                           0000E2   574 G$PCA0CPH5$0$0 == 0x00e2
                           0000E2   575 _PCA0CPH5	=	0x00e2
                           0000E8   576 G$ADC0CN$0$0 == 0x00e8
                           0000E8   577 _ADC0CN	=	0x00e8
                           0000E9   578 G$PCA0CPL2$0$0 == 0x00e9
                           0000E9   579 _PCA0CPL2	=	0x00e9
                           0000EA   580 G$PCA0CPH2$0$0 == 0x00ea
                           0000EA   581 _PCA0CPH2	=	0x00ea
                           0000EB   582 G$PCA0CPL3$0$0 == 0x00eb
                           0000EB   583 _PCA0CPL3	=	0x00eb
                           0000EC   584 G$PCA0CPH3$0$0 == 0x00ec
                           0000EC   585 _PCA0CPH3	=	0x00ec
                           0000ED   586 G$PCA0CPL4$0$0 == 0x00ed
                           0000ED   587 _PCA0CPL4	=	0x00ed
                           0000EE   588 G$PCA0CPH4$0$0 == 0x00ee
                           0000EE   589 _PCA0CPH4	=	0x00ee
                           0000EF   590 G$RSTSRC$0$0 == 0x00ef
                           0000EF   591 _RSTSRC	=	0x00ef
                           0000F8   592 G$SPI0CN$0$0 == 0x00f8
                           0000F8   593 _SPI0CN	=	0x00f8
                           0000F9   594 G$PCA0L$0$0 == 0x00f9
                           0000F9   595 _PCA0L	=	0x00f9
                           0000FA   596 G$PCA0H$0$0 == 0x00fa
                           0000FA   597 _PCA0H	=	0x00fa
                           0000FB   598 G$PCA0CPL0$0$0 == 0x00fb
                           0000FB   599 _PCA0CPL0	=	0x00fb
                           0000FC   600 G$PCA0CPH0$0$0 == 0x00fc
                           0000FC   601 _PCA0CPH0	=	0x00fc
                           0000FD   602 G$PCA0CPL1$0$0 == 0x00fd
                           0000FD   603 _PCA0CPL1	=	0x00fd
                           0000FE   604 G$PCA0CPH1$0$0 == 0x00fe
                           0000FE   605 _PCA0CPH1	=	0x00fe
                           000088   606 G$CPT0CN$0$0 == 0x0088
                           000088   607 _CPT0CN	=	0x0088
                           000089   608 G$CPT0MD$0$0 == 0x0089
                           000089   609 _CPT0MD	=	0x0089
                           000098   610 G$SCON1$0$0 == 0x0098
                           000098   611 _SCON1	=	0x0098
                           000099   612 G$SBUF1$0$0 == 0x0099
                           000099   613 _SBUF1	=	0x0099
                           0000C8   614 G$TMR3CN$0$0 == 0x00c8
                           0000C8   615 _TMR3CN	=	0x00c8
                           0000C9   616 G$TMR3CF$0$0 == 0x00c9
                           0000C9   617 _TMR3CF	=	0x00c9
                           0000CA   618 G$RCAP3L$0$0 == 0x00ca
                           0000CA   619 _RCAP3L	=	0x00ca
                           0000CB   620 G$RCAP3H$0$0 == 0x00cb
                           0000CB   621 _RCAP3H	=	0x00cb
                           0000CC   622 G$TMR3L$0$0 == 0x00cc
                           0000CC   623 _TMR3L	=	0x00cc
                           0000CD   624 G$TMR3H$0$0 == 0x00cd
                           0000CD   625 _TMR3H	=	0x00cd
                           0000D2   626 G$DAC1L$0$0 == 0x00d2
                           0000D2   627 _DAC1L	=	0x00d2
                           0000D3   628 G$DAC1H$0$0 == 0x00d3
                           0000D3   629 _DAC1H	=	0x00d3
                           0000D4   630 G$DAC1CN$0$0 == 0x00d4
                           0000D4   631 _DAC1CN	=	0x00d4
                           000088   632 G$CPT1CN$0$0 == 0x0088
                           000088   633 _CPT1CN	=	0x0088
                           000089   634 G$CPT1MD$0$0 == 0x0089
                           000089   635 _CPT1MD	=	0x0089
                           0000BA   636 G$AMX2CF$0$0 == 0x00ba
                           0000BA   637 _AMX2CF	=	0x00ba
                           0000BB   638 G$AMX2SL$0$0 == 0x00bb
                           0000BB   639 _AMX2SL	=	0x00bb
                           0000BC   640 G$ADC2CF$0$0 == 0x00bc
                           0000BC   641 _ADC2CF	=	0x00bc
                           0000BE   642 G$ADC2$0$0 == 0x00be
                           0000BE   643 _ADC2	=	0x00be
                           0000C4   644 G$ADC2GT$0$0 == 0x00c4
                           0000C4   645 _ADC2GT	=	0x00c4
                           0000C6   646 G$ADC2LT$0$0 == 0x00c6
                           0000C6   647 _ADC2LT	=	0x00c6
                           0000C8   648 G$TMR4CN$0$0 == 0x00c8
                           0000C8   649 _TMR4CN	=	0x00c8
                           0000C9   650 G$TMR4CF$0$0 == 0x00c9
                           0000C9   651 _TMR4CF	=	0x00c9
                           0000CA   652 G$RCAP4L$0$0 == 0x00ca
                           0000CA   653 _RCAP4L	=	0x00ca
                           0000CB   654 G$RCAP4H$0$0 == 0x00cb
                           0000CB   655 _RCAP4H	=	0x00cb
                           0000CC   656 G$TMR4L$0$0 == 0x00cc
                           0000CC   657 _TMR4L	=	0x00cc
                           0000CD   658 G$TMR4H$0$0 == 0x00cd
                           0000CD   659 _TMR4H	=	0x00cd
                           0000E8   660 G$ADC2CN$0$0 == 0x00e8
                           0000E8   661 _ADC2CN	=	0x00e8
                           000091   662 G$MAC0BL$0$0 == 0x0091
                           000091   663 _MAC0BL	=	0x0091
                           000092   664 G$MAC0BH$0$0 == 0x0092
                           000092   665 _MAC0BH	=	0x0092
                           000093   666 G$MAC0ACC0$0$0 == 0x0093
                           000093   667 _MAC0ACC0	=	0x0093
                           000094   668 G$MAC0ACC1$0$0 == 0x0094
                           000094   669 _MAC0ACC1	=	0x0094
                           000095   670 G$MAC0ACC2$0$0 == 0x0095
                           000095   671 _MAC0ACC2	=	0x0095
                           000096   672 G$MAC0ACC3$0$0 == 0x0096
                           000096   673 _MAC0ACC3	=	0x0096
                           000097   674 G$MAC0OVR$0$0 == 0x0097
                           000097   675 _MAC0OVR	=	0x0097
                           0000C0   676 G$MAC0STA$0$0 == 0x00c0
                           0000C0   677 _MAC0STA	=	0x00c0
                           0000C1   678 G$MAC0AL$0$0 == 0x00c1
                           0000C1   679 _MAC0AL	=	0x00c1
                           0000C2   680 G$MAC0AH$0$0 == 0x00c2
                           0000C2   681 _MAC0AH	=	0x00c2
                           0000C3   682 G$MAC0CF$0$0 == 0x00c3
                           0000C3   683 _MAC0CF	=	0x00c3
                           0000CE   684 G$MAC0RNDL$0$0 == 0x00ce
                           0000CE   685 _MAC0RNDL	=	0x00ce
                           0000CF   686 G$MAC0RNDH$0$0 == 0x00cf
                           0000CF   687 _MAC0RNDH	=	0x00cf
                           000088   688 G$FLSTAT$0$0 == 0x0088
                           000088   689 _FLSTAT	=	0x0088
                           000089   690 G$PLL0CN$0$0 == 0x0089
                           000089   691 _PLL0CN	=	0x0089
                           00008A   692 G$OSCICN$0$0 == 0x008a
                           00008A   693 _OSCICN	=	0x008a
                           00008B   694 G$OSCICL$0$0 == 0x008b
                           00008B   695 _OSCICL	=	0x008b
                           00008C   696 G$OSCXCN$0$0 == 0x008c
                           00008C   697 _OSCXCN	=	0x008c
                           00008D   698 G$PLL0DIV$0$0 == 0x008d
                           00008D   699 _PLL0DIV	=	0x008d
                           00008E   700 G$PLL0MUL$0$0 == 0x008e
                           00008E   701 _PLL0MUL	=	0x008e
                           00008F   702 G$PLL0FLT$0$0 == 0x008f
                           00008F   703 _PLL0FLT	=	0x008f
                           000096   704 G$SFRPGCN$0$0 == 0x0096
                           000096   705 _SFRPGCN	=	0x0096
                           000097   706 G$CLKSEL$0$0 == 0x0097
                           000097   707 _CLKSEL	=	0x0097
                           00009A   708 G$CCH0MA$0$0 == 0x009a
                           00009A   709 _CCH0MA	=	0x009a
                           00009C   710 G$P4MDOUT$0$0 == 0x009c
                           00009C   711 _P4MDOUT	=	0x009c
                           00009D   712 G$P5MDOUT$0$0 == 0x009d
                           00009D   713 _P5MDOUT	=	0x009d
                           00009E   714 G$P6MDOUT$0$0 == 0x009e
                           00009E   715 _P6MDOUT	=	0x009e
                           00009F   716 G$P7MDOUT$0$0 == 0x009f
                           00009F   717 _P7MDOUT	=	0x009f
                           0000A1   718 G$CCH0CN$0$0 == 0x00a1
                           0000A1   719 _CCH0CN	=	0x00a1
                           0000A2   720 G$CCH0TN$0$0 == 0x00a2
                           0000A2   721 _CCH0TN	=	0x00a2
                           0000A3   722 G$CCH0LC$0$0 == 0x00a3
                           0000A3   723 _CCH0LC	=	0x00a3
                           0000A4   724 G$P0MDOUT$0$0 == 0x00a4
                           0000A4   725 _P0MDOUT	=	0x00a4
                           0000A5   726 G$P1MDOUT$0$0 == 0x00a5
                           0000A5   727 _P1MDOUT	=	0x00a5
                           0000A6   728 G$P2MDOUT$0$0 == 0x00a6
                           0000A6   729 _P2MDOUT	=	0x00a6
                           0000A7   730 G$P3MDOUT$0$0 == 0x00a7
                           0000A7   731 _P3MDOUT	=	0x00a7
                           0000AD   732 G$P1MDIN$0$0 == 0x00ad
                           0000AD   733 _P1MDIN	=	0x00ad
                           0000B7   734 G$FLACL$0$0 == 0x00b7
                           0000B7   735 _FLACL	=	0x00b7
                           0000C8   736 G$P4$0$0 == 0x00c8
                           0000C8   737 _P4	=	0x00c8
                           0000D8   738 G$P5$0$0 == 0x00d8
                           0000D8   739 _P5	=	0x00d8
                           0000E1   740 G$XBR0$0$0 == 0x00e1
                           0000E1   741 _XBR0	=	0x00e1
                           0000E2   742 G$XBR1$0$0 == 0x00e2
                           0000E2   743 _XBR1	=	0x00e2
                           0000E3   744 G$XBR2$0$0 == 0x00e3
                           0000E3   745 _XBR2	=	0x00e3
                           0000E8   746 G$P6$0$0 == 0x00e8
                           0000E8   747 _P6	=	0x00e8
                           0000F8   748 G$P7$0$0 == 0x00f8
                           0000F8   749 _P7	=	0x00f8
                           008C8A   750 G$TMR0$0$0 == 0x8c8a
                           008C8A   751 _TMR0	=	0x8c8a
                           008D8B   752 G$TMR1$0$0 == 0x8d8b
                           008D8B   753 _TMR1	=	0x8d8b
                           00CDCC   754 G$TMR2$0$0 == 0xcdcc
                           00CDCC   755 _TMR2	=	0xcdcc
                           00CBCA   756 G$RCAP2$0$0 == 0xcbca
                           00CBCA   757 _RCAP2	=	0xcbca
                           00BFBE   758 G$ADC0$0$0 == 0xbfbe
                           00BFBE   759 _ADC0	=	0xbfbe
                           00C5C4   760 G$ADC0GT$0$0 == 0xc5c4
                           00C5C4   761 _ADC0GT	=	0xc5c4
                           00C7C6   762 G$ADC0LT$0$0 == 0xc7c6
                           00C7C6   763 _ADC0LT	=	0xc7c6
                           00D3D2   764 G$DAC0$0$0 == 0xd3d2
                           00D3D2   765 _DAC0	=	0xd3d2
                           00FAF9   766 G$PCA0$0$0 == 0xfaf9
                           00FAF9   767 _PCA0	=	0xfaf9
                           00FCFB   768 G$PCA0CP0$0$0 == 0xfcfb
                           00FCFB   769 _PCA0CP0	=	0xfcfb
                           00FEFD   770 G$PCA0CP1$0$0 == 0xfefd
                           00FEFD   771 _PCA0CP1	=	0xfefd
                           00EAE9   772 G$PCA0CP2$0$0 == 0xeae9
                           00EAE9   773 _PCA0CP2	=	0xeae9
                           00ECEB   774 G$PCA0CP3$0$0 == 0xeceb
                           00ECEB   775 _PCA0CP3	=	0xeceb
                           00EEED   776 G$PCA0CP4$0$0 == 0xeeed
                           00EEED   777 _PCA0CP4	=	0xeeed
                           00E2E1   778 G$PCA0CP5$0$0 == 0xe2e1
                           00E2E1   779 _PCA0CP5	=	0xe2e1
                           00CDCC   780 G$TMR3$0$0 == 0xcdcc
                           00CDCC   781 _TMR3	=	0xcdcc
                           00CBCA   782 G$RCAP3$0$0 == 0xcbca
                           00CBCA   783 _RCAP3	=	0xcbca
                           00D3D2   784 G$DAC1$0$0 == 0xd3d2
                           00D3D2   785 _DAC1	=	0xd3d2
                           00CDCC   786 G$TMR4$0$0 == 0xcdcc
                           00CDCC   787 _TMR4	=	0xcdcc
                           00CBCA   788 G$RCAP4$0$0 == 0xcbca
                           00CBCA   789 _RCAP4	=	0xcbca
                           00C2C1   790 G$MAC0A$0$0 == 0xc2c1
                           00C2C1   791 _MAC0A	=	0xc2c1
                           96959493   792 G$MAC0ACC$0$0 == 0x96959493
                           96959493   793 _MAC0ACC	=	0x96959493
                           00CFCE   794 G$MAC0RND$0$0 == 0xcfce
                           00CFCE   795 _MAC0RND	=	0xcfce
                                    796 ;--------------------------------------------------------
                                    797 ; special function bits
                                    798 ;--------------------------------------------------------
                                    799 	.area RSEG    (ABS,DATA)
      000000                        800 	.org 0x0000
                           000080   801 G$P0_0$0$0 == 0x0080
                           000080   802 _P0_0	=	0x0080
                           000081   803 G$P0_1$0$0 == 0x0081
                           000081   804 _P0_1	=	0x0081
                           000082   805 G$P0_2$0$0 == 0x0082
                           000082   806 _P0_2	=	0x0082
                           000083   807 G$P0_3$0$0 == 0x0083
                           000083   808 _P0_3	=	0x0083
                           000084   809 G$P0_4$0$0 == 0x0084
                           000084   810 _P0_4	=	0x0084
                           000085   811 G$P0_5$0$0 == 0x0085
                           000085   812 _P0_5	=	0x0085
                           000086   813 G$P0_6$0$0 == 0x0086
                           000086   814 _P0_6	=	0x0086
                           000087   815 G$P0_7$0$0 == 0x0087
                           000087   816 _P0_7	=	0x0087
                           000088   817 G$IT0$0$0 == 0x0088
                           000088   818 _IT0	=	0x0088
                           000089   819 G$IE0$0$0 == 0x0089
                           000089   820 _IE0	=	0x0089
                           00008A   821 G$IT1$0$0 == 0x008a
                           00008A   822 _IT1	=	0x008a
                           00008B   823 G$IE1$0$0 == 0x008b
                           00008B   824 _IE1	=	0x008b
                           00008C   825 G$TR0$0$0 == 0x008c
                           00008C   826 _TR0	=	0x008c
                           00008D   827 G$TF0$0$0 == 0x008d
                           00008D   828 _TF0	=	0x008d
                           00008E   829 G$TR1$0$0 == 0x008e
                           00008E   830 _TR1	=	0x008e
                           00008F   831 G$TF1$0$0 == 0x008f
                           00008F   832 _TF1	=	0x008f
                           000088   833 G$CP0HYN0$0$0 == 0x0088
                           000088   834 _CP0HYN0	=	0x0088
                           000089   835 G$CP0HYN1$0$0 == 0x0089
                           000089   836 _CP0HYN1	=	0x0089
                           00008A   837 G$CP0HYP0$0$0 == 0x008a
                           00008A   838 _CP0HYP0	=	0x008a
                           00008B   839 G$CP0HYP1$0$0 == 0x008b
                           00008B   840 _CP0HYP1	=	0x008b
                           00008C   841 G$CP0FIF$0$0 == 0x008c
                           00008C   842 _CP0FIF	=	0x008c
                           00008D   843 G$CP0RIF$0$0 == 0x008d
                           00008D   844 _CP0RIF	=	0x008d
                           00008E   845 G$CP0OUT$0$0 == 0x008e
                           00008E   846 _CP0OUT	=	0x008e
                           00008F   847 G$CP0EN$0$0 == 0x008f
                           00008F   848 _CP0EN	=	0x008f
                           000088   849 G$CP1HYN0$0$0 == 0x0088
                           000088   850 _CP1HYN0	=	0x0088
                           000089   851 G$CP1HYN1$0$0 == 0x0089
                           000089   852 _CP1HYN1	=	0x0089
                           00008A   853 G$CP1HYP0$0$0 == 0x008a
                           00008A   854 _CP1HYP0	=	0x008a
                           00008B   855 G$CP1HYP1$0$0 == 0x008b
                           00008B   856 _CP1HYP1	=	0x008b
                           00008C   857 G$CP1FIF$0$0 == 0x008c
                           00008C   858 _CP1FIF	=	0x008c
                           00008D   859 G$CP1RIF$0$0 == 0x008d
                           00008D   860 _CP1RIF	=	0x008d
                           00008E   861 G$CP1OUT$0$0 == 0x008e
                           00008E   862 _CP1OUT	=	0x008e
                           00008F   863 G$CP1EN$0$0 == 0x008f
                           00008F   864 _CP1EN	=	0x008f
                           000088   865 G$FLHBUSY$0$0 == 0x0088
                           000088   866 _FLHBUSY	=	0x0088
                           000090   867 G$P1_0$0$0 == 0x0090
                           000090   868 _P1_0	=	0x0090
                           000091   869 G$P1_1$0$0 == 0x0091
                           000091   870 _P1_1	=	0x0091
                           000092   871 G$P1_2$0$0 == 0x0092
                           000092   872 _P1_2	=	0x0092
                           000093   873 G$P1_3$0$0 == 0x0093
                           000093   874 _P1_3	=	0x0093
                           000094   875 G$P1_4$0$0 == 0x0094
                           000094   876 _P1_4	=	0x0094
                           000095   877 G$P1_5$0$0 == 0x0095
                           000095   878 _P1_5	=	0x0095
                           000096   879 G$P1_6$0$0 == 0x0096
                           000096   880 _P1_6	=	0x0096
                           000097   881 G$P1_7$0$0 == 0x0097
                           000097   882 _P1_7	=	0x0097
                           000098   883 G$RI0$0$0 == 0x0098
                           000098   884 _RI0	=	0x0098
                           000098   885 G$RI$0$0 == 0x0098
                           000098   886 _RI	=	0x0098
                           000099   887 G$TI0$0$0 == 0x0099
                           000099   888 _TI0	=	0x0099
                           000099   889 G$TI$0$0 == 0x0099
                           000099   890 _TI	=	0x0099
                           00009A   891 G$RB80$0$0 == 0x009a
                           00009A   892 _RB80	=	0x009a
                           00009B   893 G$TB80$0$0 == 0x009b
                           00009B   894 _TB80	=	0x009b
                           00009C   895 G$REN0$0$0 == 0x009c
                           00009C   896 _REN0	=	0x009c
                           00009C   897 G$REN$0$0 == 0x009c
                           00009C   898 _REN	=	0x009c
                           00009D   899 G$SM20$0$0 == 0x009d
                           00009D   900 _SM20	=	0x009d
                           00009E   901 G$SM10$0$0 == 0x009e
                           00009E   902 _SM10	=	0x009e
                           00009F   903 G$SM00$0$0 == 0x009f
                           00009F   904 _SM00	=	0x009f
                           000098   905 G$RI1$0$0 == 0x0098
                           000098   906 _RI1	=	0x0098
                           000099   907 G$TI1$0$0 == 0x0099
                           000099   908 _TI1	=	0x0099
                           00009A   909 G$RB81$0$0 == 0x009a
                           00009A   910 _RB81	=	0x009a
                           00009B   911 G$TB81$0$0 == 0x009b
                           00009B   912 _TB81	=	0x009b
                           00009C   913 G$REN1$0$0 == 0x009c
                           00009C   914 _REN1	=	0x009c
                           00009D   915 G$MCE1$0$0 == 0x009d
                           00009D   916 _MCE1	=	0x009d
                           00009F   917 G$S1MODE$0$0 == 0x009f
                           00009F   918 _S1MODE	=	0x009f
                           0000A0   919 G$P2_0$0$0 == 0x00a0
                           0000A0   920 _P2_0	=	0x00a0
                           0000A1   921 G$P2_1$0$0 == 0x00a1
                           0000A1   922 _P2_1	=	0x00a1
                           0000A2   923 G$P2_2$0$0 == 0x00a2
                           0000A2   924 _P2_2	=	0x00a2
                           0000A3   925 G$P2_3$0$0 == 0x00a3
                           0000A3   926 _P2_3	=	0x00a3
                           0000A4   927 G$P2_4$0$0 == 0x00a4
                           0000A4   928 _P2_4	=	0x00a4
                           0000A5   929 G$P2_5$0$0 == 0x00a5
                           0000A5   930 _P2_5	=	0x00a5
                           0000A6   931 G$P2_6$0$0 == 0x00a6
                           0000A6   932 _P2_6	=	0x00a6
                           0000A7   933 G$P2_7$0$0 == 0x00a7
                           0000A7   934 _P2_7	=	0x00a7
                           0000A8   935 G$EX0$0$0 == 0x00a8
                           0000A8   936 _EX0	=	0x00a8
                           0000A9   937 G$ET0$0$0 == 0x00a9
                           0000A9   938 _ET0	=	0x00a9
                           0000AA   939 G$EX1$0$0 == 0x00aa
                           0000AA   940 _EX1	=	0x00aa
                           0000AB   941 G$ET1$0$0 == 0x00ab
                           0000AB   942 _ET1	=	0x00ab
                           0000AC   943 G$ES0$0$0 == 0x00ac
                           0000AC   944 _ES0	=	0x00ac
                           0000AC   945 G$ES$0$0 == 0x00ac
                           0000AC   946 _ES	=	0x00ac
                           0000AD   947 G$ET2$0$0 == 0x00ad
                           0000AD   948 _ET2	=	0x00ad
                           0000AF   949 G$EA$0$0 == 0x00af
                           0000AF   950 _EA	=	0x00af
                           0000B0   951 G$P3_0$0$0 == 0x00b0
                           0000B0   952 _P3_0	=	0x00b0
                           0000B1   953 G$P3_1$0$0 == 0x00b1
                           0000B1   954 _P3_1	=	0x00b1
                           0000B2   955 G$P3_2$0$0 == 0x00b2
                           0000B2   956 _P3_2	=	0x00b2
                           0000B3   957 G$P3_3$0$0 == 0x00b3
                           0000B3   958 _P3_3	=	0x00b3
                           0000B4   959 G$P3_4$0$0 == 0x00b4
                           0000B4   960 _P3_4	=	0x00b4
                           0000B5   961 G$P3_5$0$0 == 0x00b5
                           0000B5   962 _P3_5	=	0x00b5
                           0000B6   963 G$P3_6$0$0 == 0x00b6
                           0000B6   964 _P3_6	=	0x00b6
                           0000B7   965 G$P3_7$0$0 == 0x00b7
                           0000B7   966 _P3_7	=	0x00b7
                           0000B8   967 G$PX0$0$0 == 0x00b8
                           0000B8   968 _PX0	=	0x00b8
                           0000B9   969 G$PT0$0$0 == 0x00b9
                           0000B9   970 _PT0	=	0x00b9
                           0000BA   971 G$PX1$0$0 == 0x00ba
                           0000BA   972 _PX1	=	0x00ba
                           0000BB   973 G$PT1$0$0 == 0x00bb
                           0000BB   974 _PT1	=	0x00bb
                           0000BC   975 G$PS0$0$0 == 0x00bc
                           0000BC   976 _PS0	=	0x00bc
                           0000BC   977 G$PS$0$0 == 0x00bc
                           0000BC   978 _PS	=	0x00bc
                           0000BD   979 G$PT2$0$0 == 0x00bd
                           0000BD   980 _PT2	=	0x00bd
                           0000C0   981 G$SMBTOE$0$0 == 0x00c0
                           0000C0   982 _SMBTOE	=	0x00c0
                           0000C1   983 G$SMBFTE$0$0 == 0x00c1
                           0000C1   984 _SMBFTE	=	0x00c1
                           0000C2   985 G$AA$0$0 == 0x00c2
                           0000C2   986 _AA	=	0x00c2
                           0000C3   987 G$SI$0$0 == 0x00c3
                           0000C3   988 _SI	=	0x00c3
                           0000C4   989 G$STO$0$0 == 0x00c4
                           0000C4   990 _STO	=	0x00c4
                           0000C5   991 G$STA$0$0 == 0x00c5
                           0000C5   992 _STA	=	0x00c5
                           0000C6   993 G$ENSMB$0$0 == 0x00c6
                           0000C6   994 _ENSMB	=	0x00c6
                           0000C7   995 G$BUSY$0$0 == 0x00c7
                           0000C7   996 _BUSY	=	0x00c7
                           0000C0   997 G$MAC0N$0$0 == 0x00c0
                           0000C0   998 _MAC0N	=	0x00c0
                           0000C1   999 G$MAC0SO$0$0 == 0x00c1
                           0000C1  1000 _MAC0SO	=	0x00c1
                           0000C2  1001 G$MAC0Z$0$0 == 0x00c2
                           0000C2  1002 _MAC0Z	=	0x00c2
                           0000C3  1003 G$MAC0HO$0$0 == 0x00c3
                           0000C3  1004 _MAC0HO	=	0x00c3
                           0000C8  1005 G$CPRL2$0$0 == 0x00c8
                           0000C8  1006 _CPRL2	=	0x00c8
                           0000C9  1007 G$CT2$0$0 == 0x00c9
                           0000C9  1008 _CT2	=	0x00c9
                           0000CA  1009 G$TR2$0$0 == 0x00ca
                           0000CA  1010 _TR2	=	0x00ca
                           0000CB  1011 G$EXEN2$0$0 == 0x00cb
                           0000CB  1012 _EXEN2	=	0x00cb
                           0000CE  1013 G$EXF2$0$0 == 0x00ce
                           0000CE  1014 _EXF2	=	0x00ce
                           0000CF  1015 G$TF2$0$0 == 0x00cf
                           0000CF  1016 _TF2	=	0x00cf
                           0000C8  1017 G$CPRL3$0$0 == 0x00c8
                           0000C8  1018 _CPRL3	=	0x00c8
                           0000C9  1019 G$CT3$0$0 == 0x00c9
                           0000C9  1020 _CT3	=	0x00c9
                           0000CA  1021 G$TR3$0$0 == 0x00ca
                           0000CA  1022 _TR3	=	0x00ca
                           0000CB  1023 G$EXEN3$0$0 == 0x00cb
                           0000CB  1024 _EXEN3	=	0x00cb
                           0000CE  1025 G$EXF3$0$0 == 0x00ce
                           0000CE  1026 _EXF3	=	0x00ce
                           0000CF  1027 G$TF3$0$0 == 0x00cf
                           0000CF  1028 _TF3	=	0x00cf
                           0000C8  1029 G$CPRL4$0$0 == 0x00c8
                           0000C8  1030 _CPRL4	=	0x00c8
                           0000C9  1031 G$CT4$0$0 == 0x00c9
                           0000C9  1032 _CT4	=	0x00c9
                           0000CA  1033 G$TR4$0$0 == 0x00ca
                           0000CA  1034 _TR4	=	0x00ca
                           0000CB  1035 G$EXEN4$0$0 == 0x00cb
                           0000CB  1036 _EXEN4	=	0x00cb
                           0000CE  1037 G$EXF4$0$0 == 0x00ce
                           0000CE  1038 _EXF4	=	0x00ce
                           0000CF  1039 G$TF4$0$0 == 0x00cf
                           0000CF  1040 _TF4	=	0x00cf
                           0000C8  1041 G$P4_0$0$0 == 0x00c8
                           0000C8  1042 _P4_0	=	0x00c8
                           0000C9  1043 G$P4_1$0$0 == 0x00c9
                           0000C9  1044 _P4_1	=	0x00c9
                           0000CA  1045 G$P4_2$0$0 == 0x00ca
                           0000CA  1046 _P4_2	=	0x00ca
                           0000CB  1047 G$P4_3$0$0 == 0x00cb
                           0000CB  1048 _P4_3	=	0x00cb
                           0000CC  1049 G$P4_4$0$0 == 0x00cc
                           0000CC  1050 _P4_4	=	0x00cc
                           0000CD  1051 G$P4_5$0$0 == 0x00cd
                           0000CD  1052 _P4_5	=	0x00cd
                           0000CE  1053 G$P4_6$0$0 == 0x00ce
                           0000CE  1054 _P4_6	=	0x00ce
                           0000CF  1055 G$P4_7$0$0 == 0x00cf
                           0000CF  1056 _P4_7	=	0x00cf
                           0000D0  1057 G$P$0$0 == 0x00d0
                           0000D0  1058 _P	=	0x00d0
                           0000D1  1059 G$F1$0$0 == 0x00d1
                           0000D1  1060 _F1	=	0x00d1
                           0000D2  1061 G$OV$0$0 == 0x00d2
                           0000D2  1062 _OV	=	0x00d2
                           0000D3  1063 G$RS0$0$0 == 0x00d3
                           0000D3  1064 _RS0	=	0x00d3
                           0000D4  1065 G$RS1$0$0 == 0x00d4
                           0000D4  1066 _RS1	=	0x00d4
                           0000D5  1067 G$F0$0$0 == 0x00d5
                           0000D5  1068 _F0	=	0x00d5
                           0000D6  1069 G$AC$0$0 == 0x00d6
                           0000D6  1070 _AC	=	0x00d6
                           0000D7  1071 G$CY$0$0 == 0x00d7
                           0000D7  1072 _CY	=	0x00d7
                           0000D8  1073 G$CCF0$0$0 == 0x00d8
                           0000D8  1074 _CCF0	=	0x00d8
                           0000D9  1075 G$CCF1$0$0 == 0x00d9
                           0000D9  1076 _CCF1	=	0x00d9
                           0000DA  1077 G$CCF2$0$0 == 0x00da
                           0000DA  1078 _CCF2	=	0x00da
                           0000DB  1079 G$CCF3$0$0 == 0x00db
                           0000DB  1080 _CCF3	=	0x00db
                           0000DC  1081 G$CCF4$0$0 == 0x00dc
                           0000DC  1082 _CCF4	=	0x00dc
                           0000DD  1083 G$CCF5$0$0 == 0x00dd
                           0000DD  1084 _CCF5	=	0x00dd
                           0000DE  1085 G$CR$0$0 == 0x00de
                           0000DE  1086 _CR	=	0x00de
                           0000DF  1087 G$CF$0$0 == 0x00df
                           0000DF  1088 _CF	=	0x00df
                           0000D8  1089 G$P5_0$0$0 == 0x00d8
                           0000D8  1090 _P5_0	=	0x00d8
                           0000D9  1091 G$P5_1$0$0 == 0x00d9
                           0000D9  1092 _P5_1	=	0x00d9
                           0000DA  1093 G$P5_2$0$0 == 0x00da
                           0000DA  1094 _P5_2	=	0x00da
                           0000DB  1095 G$P5_3$0$0 == 0x00db
                           0000DB  1096 _P5_3	=	0x00db
                           0000DC  1097 G$P5_4$0$0 == 0x00dc
                           0000DC  1098 _P5_4	=	0x00dc
                           0000DD  1099 G$P5_5$0$0 == 0x00dd
                           0000DD  1100 _P5_5	=	0x00dd
                           0000DE  1101 G$P5_6$0$0 == 0x00de
                           0000DE  1102 _P5_6	=	0x00de
                           0000DF  1103 G$P5_7$0$0 == 0x00df
                           0000DF  1104 _P5_7	=	0x00df
                           0000E8  1105 G$AD0LJST$0$0 == 0x00e8
                           0000E8  1106 _AD0LJST	=	0x00e8
                           0000E9  1107 G$AD0WINT$0$0 == 0x00e9
                           0000E9  1108 _AD0WINT	=	0x00e9
                           0000EA  1109 G$AD0CM0$0$0 == 0x00ea
                           0000EA  1110 _AD0CM0	=	0x00ea
                           0000EB  1111 G$AD0CM1$0$0 == 0x00eb
                           0000EB  1112 _AD0CM1	=	0x00eb
                           0000EC  1113 G$AD0BUSY$0$0 == 0x00ec
                           0000EC  1114 _AD0BUSY	=	0x00ec
                           0000ED  1115 G$AD0INT$0$0 == 0x00ed
                           0000ED  1116 _AD0INT	=	0x00ed
                           0000EE  1117 G$AD0TM$0$0 == 0x00ee
                           0000EE  1118 _AD0TM	=	0x00ee
                           0000EF  1119 G$AD0EN$0$0 == 0x00ef
                           0000EF  1120 _AD0EN	=	0x00ef
                           0000E8  1121 G$AD2WINT$0$0 == 0x00e8
                           0000E8  1122 _AD2WINT	=	0x00e8
                           0000E9  1123 G$AD2CM0$0$0 == 0x00e9
                           0000E9  1124 _AD2CM0	=	0x00e9
                           0000EA  1125 G$AD2CM1$0$0 == 0x00ea
                           0000EA  1126 _AD2CM1	=	0x00ea
                           0000EB  1127 G$AD2CM2$0$0 == 0x00eb
                           0000EB  1128 _AD2CM2	=	0x00eb
                           0000EC  1129 G$AD2BUSY$0$0 == 0x00ec
                           0000EC  1130 _AD2BUSY	=	0x00ec
                           0000ED  1131 G$AD2INT$0$0 == 0x00ed
                           0000ED  1132 _AD2INT	=	0x00ed
                           0000EE  1133 G$AD2TM$0$0 == 0x00ee
                           0000EE  1134 _AD2TM	=	0x00ee
                           0000EF  1135 G$AD2EN$0$0 == 0x00ef
                           0000EF  1136 _AD2EN	=	0x00ef
                           0000E8  1137 G$P6_0$0$0 == 0x00e8
                           0000E8  1138 _P6_0	=	0x00e8
                           0000E9  1139 G$P6_1$0$0 == 0x00e9
                           0000E9  1140 _P6_1	=	0x00e9
                           0000EA  1141 G$P6_2$0$0 == 0x00ea
                           0000EA  1142 _P6_2	=	0x00ea
                           0000EB  1143 G$P6_3$0$0 == 0x00eb
                           0000EB  1144 _P6_3	=	0x00eb
                           0000EC  1145 G$P6_4$0$0 == 0x00ec
                           0000EC  1146 _P6_4	=	0x00ec
                           0000ED  1147 G$P6_5$0$0 == 0x00ed
                           0000ED  1148 _P6_5	=	0x00ed
                           0000EE  1149 G$P6_6$0$0 == 0x00ee
                           0000EE  1150 _P6_6	=	0x00ee
                           0000EF  1151 G$P6_7$0$0 == 0x00ef
                           0000EF  1152 _P6_7	=	0x00ef
                           0000F8  1153 G$SPIEN$0$0 == 0x00f8
                           0000F8  1154 _SPIEN	=	0x00f8
                           0000F9  1155 G$TXBMT$0$0 == 0x00f9
                           0000F9  1156 _TXBMT	=	0x00f9
                           0000FA  1157 G$NSSMD0$0$0 == 0x00fa
                           0000FA  1158 _NSSMD0	=	0x00fa
                           0000FB  1159 G$NSSMD1$0$0 == 0x00fb
                           0000FB  1160 _NSSMD1	=	0x00fb
                           0000FC  1161 G$RXOVRN$0$0 == 0x00fc
                           0000FC  1162 _RXOVRN	=	0x00fc
                           0000FD  1163 G$MODF$0$0 == 0x00fd
                           0000FD  1164 _MODF	=	0x00fd
                           0000FE  1165 G$WCOL$0$0 == 0x00fe
                           0000FE  1166 _WCOL	=	0x00fe
                           0000FF  1167 G$SPIF$0$0 == 0x00ff
                           0000FF  1168 _SPIF	=	0x00ff
                           0000F8  1169 G$P7_0$0$0 == 0x00f8
                           0000F8  1170 _P7_0	=	0x00f8
                           0000F9  1171 G$P7_1$0$0 == 0x00f9
                           0000F9  1172 _P7_1	=	0x00f9
                           0000FA  1173 G$P7_2$0$0 == 0x00fa
                           0000FA  1174 _P7_2	=	0x00fa
                           0000FB  1175 G$P7_3$0$0 == 0x00fb
                           0000FB  1176 _P7_3	=	0x00fb
                           0000FC  1177 G$P7_4$0$0 == 0x00fc
                           0000FC  1178 _P7_4	=	0x00fc
                           0000FD  1179 G$P7_5$0$0 == 0x00fd
                           0000FD  1180 _P7_5	=	0x00fd
                           0000FE  1181 G$P7_6$0$0 == 0x00fe
                           0000FE  1182 _P7_6	=	0x00fe
                           0000FF  1183 G$P7_7$0$0 == 0x00ff
                           0000FF  1184 _P7_7	=	0x00ff
                                   1185 ;--------------------------------------------------------
                                   1186 ; overlayable register banks
                                   1187 ;--------------------------------------------------------
                                   1188 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                       1189 	.ds 8
                                   1190 ;--------------------------------------------------------
                                   1191 ; internal ram data
                                   1192 ;--------------------------------------------------------
                                   1193 	.area DSEG    (DATA)
                           000000  1194 G$time$0$0==.
      000000                       1195 _time::
      000000                       1196 	.ds 2
                           000002  1197 G$tenth$0$0==.
      000002                       1198 _tenth::
      000002                       1199 	.ds 4
                                   1200 ;--------------------------------------------------------
                                   1201 ; overlayable items in internal ram 
                                   1202 ;--------------------------------------------------------
                                   1203 	.area	OSEG    (OVR,DATA)
                                   1204 	.area	OSEG    (OVR,DATA)
                                   1205 	.area	OSEG    (OVR,DATA)
                                   1206 	.area	OSEG    (OVR,DATA)
                                   1207 	.area	OSEG    (OVR,DATA)
                                   1208 ;--------------------------------------------------------
                                   1209 ; Stack segment in internal ram 
                                   1210 ;--------------------------------------------------------
                                   1211 	.area	SSEG
      000000                       1212 __start__stack:
      000000                       1213 	.ds	1
                                   1214 
                                   1215 ;--------------------------------------------------------
                                   1216 ; indirectly addressable internal ram data
                                   1217 ;--------------------------------------------------------
                                   1218 	.area ISEG    (DATA)
                                   1219 ;--------------------------------------------------------
                                   1220 ; absolute internal ram data
                                   1221 ;--------------------------------------------------------
                                   1222 	.area IABS    (ABS,DATA)
                                   1223 	.area IABS    (ABS,DATA)
                                   1224 ;--------------------------------------------------------
                                   1225 ; bit data
                                   1226 ;--------------------------------------------------------
                                   1227 	.area BSEG    (BIT)
                           000000  1228 G$SW2press$0$0==.
      000000                       1229 _SW2press::
      000000                       1230 	.ds 1
                                   1231 ;--------------------------------------------------------
                                   1232 ; paged external ram data
                                   1233 ;--------------------------------------------------------
                                   1234 	.area PSEG    (PAG,XDATA)
                                   1235 ;--------------------------------------------------------
                                   1236 ; external ram data
                                   1237 ;--------------------------------------------------------
                                   1238 	.area XSEG    (XDATA)
                                   1239 ;--------------------------------------------------------
                                   1240 ; absolute external ram data
                                   1241 ;--------------------------------------------------------
                                   1242 	.area XABS    (ABS,XDATA)
                                   1243 ;--------------------------------------------------------
                                   1244 ; external initialized ram data
                                   1245 ;--------------------------------------------------------
                                   1246 	.area XISEG   (XDATA)
                                   1247 	.area HOME    (CODE)
                                   1248 	.area GSINIT0 (CODE)
                                   1249 	.area GSINIT1 (CODE)
                                   1250 	.area GSINIT2 (CODE)
                                   1251 	.area GSINIT3 (CODE)
                                   1252 	.area GSINIT4 (CODE)
                                   1253 	.area GSINIT5 (CODE)
                                   1254 	.area GSINIT  (CODE)
                                   1255 	.area GSFINAL (CODE)
                                   1256 	.area CSEG    (CODE)
                                   1257 ;--------------------------------------------------------
                                   1258 ; interrupt vector 
                                   1259 ;--------------------------------------------------------
                                   1260 	.area HOME    (CODE)
      000000                       1261 __interrupt_vect:
      000000 02r00r00         [24] 1262 	ljmp	__sdcc_gsinit_startup
      000003 02r01rA0         [24] 1263 	ljmp	_SW2_ISR
      000006                       1264 	.ds	5
      00000B 02r01r7D         [24] 1265 	ljmp	_Timer0_ISR
                                   1266 ;--------------------------------------------------------
                                   1267 ; global & static initialisations
                                   1268 ;--------------------------------------------------------
                                   1269 	.area HOME    (CODE)
                                   1270 	.area GSINIT  (CODE)
                                   1271 	.area GSFINAL (CODE)
                                   1272 	.area GSINIT  (CODE)
                                   1273 	.globl __sdcc_gsinit_startup
                                   1274 	.globl __sdcc_program_startup
                                   1275 	.globl __start__stack
                                   1276 	.globl __mcs51_genXINIT
                                   1277 	.globl __mcs51_genXRAMCLEAR
                                   1278 	.globl __mcs51_genRAMCLEAR
                           000000  1279 	C$Lab_2.c$24$1$61 ==.
                                   1280 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:24: int time = 0; // increments every tenth of a second to keep track of elasped time
      000000 E4               [12] 1281 	clr	a
      000001 F5*00            [12] 1282 	mov	_time,a
      000003 F5*01            [12] 1283 	mov	(_time + 1),a
                           000005  1284 	C$Lab_2.c$25$1$61 ==.
                                   1285 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:25: long tenth = 0; // increments at overflow (.001 seconds)
      000005 F5*02            [12] 1286 	mov	_tenth,a
      000007 F5*03            [12] 1287 	mov	(_tenth + 1),a
      000009 F5*04            [12] 1288 	mov	(_tenth + 2),a
      00000B F5*05            [12] 1289 	mov	(_tenth + 3),a
                           00000D  1290 	C$Lab_2.c$26$1$61 ==.
                                   1291 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:26: __bit SW2press = 0;
      00000D C2*00            [12] 1292 	clr	_SW2press
                                   1293 	.area GSFINAL (CODE)
      000000 02r00r0E         [24] 1294 	ljmp	__sdcc_program_startup
                                   1295 ;--------------------------------------------------------
                                   1296 ; Home
                                   1297 ;--------------------------------------------------------
                                   1298 	.area HOME    (CODE)
                                   1299 	.area HOME    (CODE)
      00000E                       1300 __sdcc_program_startup:
      00000E 02r00r15         [24] 1301 	ljmp	_main
                                   1302 ;	return from main will return to caller
                                   1303 ;--------------------------------------------------------
                                   1304 ; code
                                   1305 ;--------------------------------------------------------
                                   1306 	.area CSEG    (CODE)
                                   1307 ;------------------------------------------------------------
                                   1308 ;Allocation info for local variables in function 'putchar'
                                   1309 ;------------------------------------------------------------
                                   1310 ;c                         Allocated to registers r7 
                                   1311 ;------------------------------------------------------------
                           000000  1312 	G$putchar$0$0 ==.
                           000000  1313 	C$putget.h$18$0$0 ==.
                                   1314 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\/putget.h:18: void putchar(char c)
                                   1315 ;	-----------------------------------------
                                   1316 ;	 function putchar
                                   1317 ;	-----------------------------------------
      000000                       1318 _putchar:
                           000007  1319 	ar7 = 0x07
                           000006  1320 	ar6 = 0x06
                           000005  1321 	ar5 = 0x05
                           000004  1322 	ar4 = 0x04
                           000003  1323 	ar3 = 0x03
                           000002  1324 	ar2 = 0x02
                           000001  1325 	ar1 = 0x01
                           000000  1326 	ar0 = 0x00
      000000 AF 82            [24] 1327 	mov	r7,dpl
                           000002  1328 	C$putget.h$20$1$16 ==.
                                   1329 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\/putget.h:20: while(!TI0); 
      000002                       1330 00101$:
                           000002  1331 	C$putget.h$21$1$16 ==.
                                   1332 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\/putget.h:21: TI0=0;
      000002 10 99 02         [24] 1333 	jbc	_TI0,00112$
      000005 80 FB            [24] 1334 	sjmp	00101$
      000007                       1335 00112$:
                           000007  1336 	C$putget.h$22$1$16 ==.
                                   1337 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\/putget.h:22: SBUF0 = c;
      000007 8F 99            [24] 1338 	mov	_SBUF0,r7
                           000009  1339 	C$putget.h$23$1$16 ==.
                           000009  1340 	XG$putchar$0$0 ==.
      000009 22               [24] 1341 	ret
                                   1342 ;------------------------------------------------------------
                                   1343 ;Allocation info for local variables in function 'getchar'
                                   1344 ;------------------------------------------------------------
                                   1345 ;c                         Allocated to registers 
                                   1346 ;------------------------------------------------------------
                           00000A  1347 	G$getchar$0$0 ==.
                           00000A  1348 	C$putget.h$28$1$16 ==.
                                   1349 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\/putget.h:28: char getchar(void)
                                   1350 ;	-----------------------------------------
                                   1351 ;	 function getchar
                                   1352 ;	-----------------------------------------
      00000A                       1353 _getchar:
                           00000A  1354 	C$putget.h$31$1$18 ==.
                                   1355 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\/putget.h:31: while(!RI0);
      00000A                       1356 00101$:
                           00000A  1357 	C$putget.h$32$1$18 ==.
                                   1358 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\/putget.h:32: RI0 =0;
      00000A 10 98 02         [24] 1359 	jbc	_RI0,00112$
      00000D 80 FB            [24] 1360 	sjmp	00101$
      00000F                       1361 00112$:
                           00000F  1362 	C$putget.h$33$1$18 ==.
                                   1363 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\/putget.h:33: c = SBUF0;
      00000F E5 99            [12] 1364 	mov	a,_SBUF0
                           000011  1365 	C$putget.h$36$1$18 ==.
                                   1366 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\/putget.h:36: return SBUF0;
      000011 85 99 82         [24] 1367 	mov	dpl,_SBUF0
                           000014  1368 	C$putget.h$37$1$18 ==.
                           000014  1369 	XG$getchar$0$0 ==.
      000014 22               [24] 1370 	ret
                                   1371 ;------------------------------------------------------------
                                   1372 ;Allocation info for local variables in function 'main'
                                   1373 ;------------------------------------------------------------
                                   1374 ;delay                     Allocated to registers 
                                   1375 ;turns                     Allocated to registers r6 r7 
                                   1376 ;slowness                  Allocated to registers r4 r5 
                                   1377 ;------------------------------------------------------------
                           000015  1378 	G$main$0$0 ==.
                           000015  1379 	C$Lab_2.c$41$1$18 ==.
                                   1380 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:41: void main (void)
                                   1381 ;	-----------------------------------------
                                   1382 ;	 function main
                                   1383 ;	-----------------------------------------
      000015                       1384 _main:
                           000015  1385 	C$Lab_2.c$45$1$18 ==.
                                   1386 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:45: unsigned int turns = 0;
      000015 7E 00            [12] 1387 	mov	r6,#0x00
      000017 7F 00            [12] 1388 	mov	r7,#0x00
                           000019  1389 	C$Lab_2.c$46$1$18 ==.
                                   1390 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:46: unsigned int slowness = 0;
      000019 7C 00            [12] 1391 	mov	r4,#0x00
      00001B 7D 00            [12] 1392 	mov	r5,#0x00
                           00001D  1393 	C$Lab_2.c$49$1$43 ==.
                                   1394 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:49: SFRPAGE = CONFIG_PAGE;
      00001D 75 84 0F         [24] 1395 	mov	_SFRPAGE,#0x0F
                           000020  1396 	C$Lab_2.c$50$1$43 ==.
                                   1397 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:50: IE |=0x03; //Enable interrupts 0 
      000020 43 A8 03         [24] 1398 	orl	_IE,#0x03
                           000023  1399 	C$Lab_2.c$51$1$43 ==.
                                   1400 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:51: PORT_INIT();                // Configure the Crossbar and GPIO.
      000023 C0 07            [24] 1401 	push	ar7
      000025 C0 06            [24] 1402 	push	ar6
      000027 C0 05            [24] 1403 	push	ar5
      000029 C0 04            [24] 1404 	push	ar4
      00002B 12r03r0E         [24] 1405 	lcall	_PORT_INIT
                           00002E  1406 	C$Lab_2.c$52$1$43 ==.
                                   1407 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:52: SYSCLK_INIT();              // Initialize the oscillator.
      00002E 12r03r2D         [24] 1408 	lcall	_SYSCLK_INIT
                           000031  1409 	C$Lab_2.c$53$1$43 ==.
                                   1410 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:53: UART0_INIT();               // Initialize UART0.
      000031 12r03r83         [24] 1411 	lcall	_UART0_INIT
                           000034  1412 	C$Lab_2.c$55$1$43 ==.
                                   1413 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:55: SFRPAGE = LEGACY_PAGE;
      000034 75 84 00         [24] 1414 	mov	_SFRPAGE,#0x00
                           000037  1415 	C$Lab_2.c$56$1$43 ==.
                                   1416 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:56: IT0     = 1;                // /INT0 is edge triggered, falling-edge.
      000037 D2 88            [12] 1417 	setb	_IT0
                           000039  1418 	C$Lab_2.c$57$1$43 ==.
                                   1419 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:57: SFRPAGE = UART0_PAGE;       // Direct the output to UART0
      000039 75 84 00         [24] 1420 	mov	_SFRPAGE,#0x00
                           00003C  1421 	C$Lab_2.c$59$1$43 ==.
                                   1422 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:59: printf("\033[2J");          // Erase screen and move cursor to the home position.
      00003C 74r00            [12] 1423 	mov	a,#___str_0
      00003E C0 E0            [24] 1424 	push	acc
      000040 74s00            [12] 1425 	mov	a,#(___str_0 >> 8)
      000042 C0 E0            [24] 1426 	push	acc
      000044 74 80            [12] 1427 	mov	a,#0x80
      000046 C0 E0            [24] 1428 	push	acc
      000048 12r00r00         [24] 1429 	lcall	_printf
      00004B 15 81            [12] 1430 	dec	sp
      00004D 15 81            [12] 1431 	dec	sp
      00004F 15 81            [12] 1432 	dec	sp
                           000051  1433 	C$Lab_2.c$60$1$43 ==.
                                   1434 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:60: printf("MPS Interrupt Timer Test\n\n\r");
      000051 74r05            [12] 1435 	mov	a,#___str_1
      000053 C0 E0            [24] 1436 	push	acc
      000055 74s00            [12] 1437 	mov	a,#(___str_1 >> 8)
      000057 C0 E0            [24] 1438 	push	acc
      000059 74 80            [12] 1439 	mov	a,#0x80
      00005B C0 E0            [24] 1440 	push	acc
      00005D 12r00r00         [24] 1441 	lcall	_printf
      000060 15 81            [12] 1442 	dec	sp
      000062 15 81            [12] 1443 	dec	sp
      000064 15 81            [12] 1444 	dec	sp
                           000066  1445 	C$Lab_2.c$61$1$43 ==.
                                   1446 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:61: printf("When indicated press the button\n\r");
      000066 74r21            [12] 1447 	mov	a,#___str_2
      000068 C0 E0            [24] 1448 	push	acc
      00006A 74s00            [12] 1449 	mov	a,#(___str_2 >> 8)
      00006C C0 E0            [24] 1450 	push	acc
      00006E 74 80            [12] 1451 	mov	a,#0x80
      000070 C0 E0            [24] 1452 	push	acc
      000072 12r00r00         [24] 1453 	lcall	_printf
      000075 15 81            [12] 1454 	dec	sp
      000077 15 81            [12] 1455 	dec	sp
      000079 15 81            [12] 1456 	dec	sp
                           00007B  1457 	C$Lab_2.c$64$1$43 ==.
                                   1458 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:64: SFRPAGE = CONFIG_PAGE;
      00007B 75 84 0F         [24] 1459 	mov	_SFRPAGE,#0x0F
                           00007E  1460 	C$Lab_2.c$65$1$43 ==.
                                   1461 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:65: EX0     = 1;                // Enable Ext Int 0 only after everything is settled.
      00007E D2 A8            [12] 1462 	setb	_EX0
                           000080  1463 	C$Lab_2.c$66$1$43 ==.
                                   1464 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:66: SFRPAGE=LEGACY_PAGE;
      000080 75 84 00         [24] 1465 	mov	_SFRPAGE,#0x00
                           000083  1466 	C$Lab_2.c$68$1$43 ==.
                                   1467 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:68: printf("\033[0m");
      000083 74r43            [12] 1468 	mov	a,#___str_3
      000085 C0 E0            [24] 1469 	push	acc
      000087 74s00            [12] 1470 	mov	a,#(___str_3 >> 8)
      000089 C0 E0            [24] 1471 	push	acc
      00008B 74 80            [12] 1472 	mov	a,#0x80
      00008D C0 E0            [24] 1473 	push	acc
      00008F 12r00r00         [24] 1474 	lcall	_printf
      000092 15 81            [12] 1475 	dec	sp
      000094 15 81            [12] 1476 	dec	sp
      000096 15 81            [12] 1477 	dec	sp
      000098 D0 04            [24] 1478 	pop	ar4
      00009A D0 05            [24] 1479 	pop	ar5
      00009C D0 06            [24] 1480 	pop	ar6
      00009E D0 07            [24] 1481 	pop	ar7
                           0000A0  1482 	C$Lab_2.c$69$1$43 ==.
                                   1483 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:69: while (1)                   // No need to set UART0_PAGE
      0000A0                       1484 00106$:
                           0000A0  1485 	C$Lab_2.c$71$2$44 ==.
                                   1486 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:71: if (time ==rand())
      0000A0 C0 07            [24] 1487 	push	ar7
      0000A2 C0 06            [24] 1488 	push	ar6
      0000A4 C0 05            [24] 1489 	push	ar5
      0000A6 C0 04            [24] 1490 	push	ar4
      0000A8 12r00r00         [24] 1491 	lcall	_rand
      0000AB AA 82            [24] 1492 	mov	r2,dpl
      0000AD AB 83            [24] 1493 	mov	r3,dph
      0000AF D0 04            [24] 1494 	pop	ar4
      0000B1 D0 05            [24] 1495 	pop	ar5
      0000B3 D0 06            [24] 1496 	pop	ar6
      0000B5 D0 07            [24] 1497 	pop	ar7
      0000B7 EA               [12] 1498 	mov	a,r2
      0000B8 B5*00 14         [24] 1499 	cjne	a,_time,00102$
      0000BB EB               [12] 1500 	mov	a,r3
      0000BC B5*01 10         [24] 1501 	cjne	a,(_time + 1),00102$
                           0000BF  1502 	C$Lab_2.c$73$3$45 ==.
                                   1503 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:73: tenth =0;
      0000BF E4               [12] 1504 	clr	a
      0000C0 F5*02            [12] 1505 	mov	_tenth,a
      0000C2 F5*03            [12] 1506 	mov	(_tenth + 1),a
      0000C4 F5*04            [12] 1507 	mov	(_tenth + 2),a
      0000C6 F5*05            [12] 1508 	mov	(_tenth + 3),a
                           0000C8  1509 	C$Lab_2.c$74$3$45 ==.
                                   1510 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:74: time = time+1;
      0000C8 05*00            [12] 1511 	inc	_time
                                   1512 ;	genFromRTrack removed	clr	a
      0000CA B5*00 02         [24] 1513 	cjne	a,_time,00121$
      0000CD 05*01            [12] 1514 	inc	(_time + 1)
      0000CF                       1515 00121$:
      0000CF                       1516 00102$:
                           0000CF  1517 	C$Lab_2.c$77$2$44 ==.
                                   1518 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:77: if(time==rand()*100){
      0000CF C0 07            [24] 1519 	push	ar7
      0000D1 C0 06            [24] 1520 	push	ar6
      0000D3 C0 05            [24] 1521 	push	ar5
      0000D5 C0 04            [24] 1522 	push	ar4
      0000D7 12r00r00         [24] 1523 	lcall	_rand
      0000DA 85 82*00         [24] 1524 	mov	__mulint_PARM_2,dpl
      0000DD 85 83*01         [24] 1525 	mov	(__mulint_PARM_2 + 1),dph
      0000E0 90 00 64         [24] 1526 	mov	dptr,#0x0064
      0000E3 12r00r00         [24] 1527 	lcall	__mulint
      0000E6 AA 82            [24] 1528 	mov	r2,dpl
      0000E8 AB 83            [24] 1529 	mov	r3,dph
      0000EA D0 04            [24] 1530 	pop	ar4
      0000EC D0 05            [24] 1531 	pop	ar5
      0000EE D0 06            [24] 1532 	pop	ar6
      0000F0 D0 07            [24] 1533 	pop	ar7
      0000F2 EA               [12] 1534 	mov	a,r2
      0000F3 B5*00 AA         [24] 1535 	cjne	a,_time,00106$
      0000F6 EB               [12] 1536 	mov	a,r3
      0000F7 B5*01 A6         [24] 1537 	cjne	a,(_time + 1),00106$
                           0000FA  1538 	C$Lab_2.c$78$3$46 ==.
                                   1539 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:78: slowness = slowness + Flash(); 
      0000FA C0 07            [24] 1540 	push	ar7
      0000FC C0 06            [24] 1541 	push	ar6
      0000FE C0 05            [24] 1542 	push	ar5
      000100 C0 04            [24] 1543 	push	ar4
      000102 12r01rA3         [24] 1544 	lcall	_Flash
      000105 AA 82            [24] 1545 	mov	r2,dpl
      000107 AB 83            [24] 1546 	mov	r3,dph
      000109 D0 04            [24] 1547 	pop	ar4
      00010B D0 05            [24] 1548 	pop	ar5
      00010D D0 06            [24] 1549 	pop	ar6
      00010F D0 07            [24] 1550 	pop	ar7
      000111 EA               [12] 1551 	mov	a,r2
      000112 2C               [12] 1552 	add	a,r4
      000113 FC               [12] 1553 	mov	r4,a
      000114 EB               [12] 1554 	mov	a,r3
      000115 3D               [12] 1555 	addc	a,r5
      000116 FD               [12] 1556 	mov	r5,a
                           000117  1557 	C$Lab_2.c$79$3$46 ==.
                                   1558 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:79: turns = turns +1;
      000117 0E               [12] 1559 	inc	r6
      000118 BE 00 01         [24] 1560 	cjne	r6,#0x00,00124$
      00011B 0F               [12] 1561 	inc	r7
      00011C                       1562 00124$:
                           00011C  1563 	C$Lab_2.c$80$3$46 ==.
                                   1564 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:80: printf("\033[6;1H");
      00011C C0 07            [24] 1565 	push	ar7
      00011E C0 06            [24] 1566 	push	ar6
      000120 C0 05            [24] 1567 	push	ar5
      000122 C0 04            [24] 1568 	push	ar4
      000124 74r48            [12] 1569 	mov	a,#___str_4
      000126 C0 E0            [24] 1570 	push	acc
      000128 74s00            [12] 1571 	mov	a,#(___str_4 >> 8)
      00012A C0 E0            [24] 1572 	push	acc
      00012C 74 80            [12] 1573 	mov	a,#0x80
      00012E C0 E0            [24] 1574 	push	acc
      000130 12r00r00         [24] 1575 	lcall	_printf
      000133 15 81            [12] 1576 	dec	sp
      000135 15 81            [12] 1577 	dec	sp
      000137 15 81            [12] 1578 	dec	sp
      000139 D0 04            [24] 1579 	pop	ar4
      00013B D0 05            [24] 1580 	pop	ar5
      00013D D0 06            [24] 1581 	pop	ar6
      00013F D0 07            [24] 1582 	pop	ar7
                           000141  1583 	C$Lab_2.c$81$1$43 ==.
                                   1584 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:81: printf("Your average response time is %d thousands of a second",slowness/turns);
      000141 8E*00            [24] 1585 	mov	__divuint_PARM_2,r6
      000143 8F*01            [24] 1586 	mov	(__divuint_PARM_2 + 1),r7
      000145 8C 82            [24] 1587 	mov	dpl,r4
      000147 8D 83            [24] 1588 	mov	dph,r5
      000149 C0 07            [24] 1589 	push	ar7
      00014B C0 06            [24] 1590 	push	ar6
      00014D C0 05            [24] 1591 	push	ar5
      00014F C0 04            [24] 1592 	push	ar4
      000151 12r00r00         [24] 1593 	lcall	__divuint
      000154 AA 82            [24] 1594 	mov	r2,dpl
      000156 AB 83            [24] 1595 	mov	r3,dph
      000158 C0 02            [24] 1596 	push	ar2
      00015A C0 03            [24] 1597 	push	ar3
      00015C 74r4F            [12] 1598 	mov	a,#___str_5
      00015E C0 E0            [24] 1599 	push	acc
      000160 74s00            [12] 1600 	mov	a,#(___str_5 >> 8)
      000162 C0 E0            [24] 1601 	push	acc
      000164 74 80            [12] 1602 	mov	a,#0x80
      000166 C0 E0            [24] 1603 	push	acc
      000168 12r00r00         [24] 1604 	lcall	_printf
      00016B E5 81            [12] 1605 	mov	a,sp
      00016D 24 FB            [12] 1606 	add	a,#0xfb
      00016F F5 81            [12] 1607 	mov	sp,a
      000171 D0 04            [24] 1608 	pop	ar4
      000173 D0 05            [24] 1609 	pop	ar5
      000175 D0 06            [24] 1610 	pop	ar6
      000177 D0 07            [24] 1611 	pop	ar7
      000179 02r00rA0         [24] 1612 	ljmp	00106$
                           00017C  1613 	C$Lab_2.c$84$1$43 ==.
                           00017C  1614 	XG$main$0$0 ==.
      00017C 22               [24] 1615 	ret
                                   1616 ;------------------------------------------------------------
                                   1617 ;Allocation info for local variables in function 'Timer0_ISR'
                                   1618 ;------------------------------------------------------------
                           00017D  1619 	G$Timer0_ISR$0$0 ==.
                           00017D  1620 	C$Lab_2.c$89$1$43 ==.
                                   1621 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:89: void Timer0_ISR(void) __interrupt 1
                                   1622 ;	-----------------------------------------
                                   1623 ;	 function Timer0_ISR
                                   1624 ;	-----------------------------------------
      00017D                       1625 _Timer0_ISR:
      00017D C0 E0            [24] 1626 	push	acc
      00017F C0 D0            [24] 1627 	push	psw
                           000181  1628 	C$Lab_2.c$91$1$48 ==.
                                   1629 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:91: TF0 = 0; //reset the flag
      000181 C2 8D            [12] 1630 	clr	_TF0
                           000183  1631 	C$Lab_2.c$92$1$48 ==.
                                   1632 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:92: tenth = tenth+1;
      000183 05*02            [12] 1633 	inc	_tenth
      000185 E4               [12] 1634 	clr	a
      000186 B5*02 0C         [24] 1635 	cjne	a,_tenth,00103$
      000189 05*03            [12] 1636 	inc	(_tenth + 1)
      00018B B5*03 07         [24] 1637 	cjne	a,(_tenth + 1),00103$
      00018E 05*04            [12] 1638 	inc	(_tenth + 2)
      000190 B5*04 02         [24] 1639 	cjne	a,(_tenth + 2),00103$
      000193 05*05            [12] 1640 	inc	(_tenth + 3)
      000195                       1641 00103$:
                           000195  1642 	C$Lab_2.c$93$1$48 ==.
                                   1643 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:93: TL0=0;
      000195 75 8A 00         [24] 1644 	mov	_TL0,#0x00
                           000198  1645 	C$Lab_2.c$94$1$48 ==.
                                   1646 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:94: TH0=0;
      000198 75 8C 00         [24] 1647 	mov	_TH0,#0x00
      00019B D0 D0            [24] 1648 	pop	psw
      00019D D0 E0            [24] 1649 	pop	acc
                           00019F  1650 	C$Lab_2.c$95$1$48 ==.
                           00019F  1651 	XG$Timer0_ISR$0$0 ==.
      00019F 32               [24] 1652 	reti
                                   1653 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   1654 ;	eliminated unneeded push/pop dpl
                                   1655 ;	eliminated unneeded push/pop dph
                                   1656 ;	eliminated unneeded push/pop b
                                   1657 ;------------------------------------------------------------
                                   1658 ;Allocation info for local variables in function 'SW2_ISR'
                                   1659 ;------------------------------------------------------------
                           0001A0  1660 	G$SW2_ISR$0$0 ==.
                           0001A0  1661 	C$Lab_2.c$97$1$48 ==.
                                   1662 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:97: void SW2_ISR (void) __interrupt 0
                                   1663 ;	-----------------------------------------
                                   1664 ;	 function SW2_ISR
                                   1665 ;	-----------------------------------------
      0001A0                       1666 _SW2_ISR:
                           0001A0  1667 	C$Lab_2.c$99$1$50 ==.
                                   1668 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:99: SW2press=1;
      0001A0 D2*00            [12] 1669 	setb	_SW2press
                           0001A2  1670 	C$Lab_2.c$100$1$50 ==.
                           0001A2  1671 	XG$SW2_ISR$0$0 ==.
      0001A2 32               [24] 1672 	reti
                                   1673 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   1674 ;	eliminated unneeded push/pop psw
                                   1675 ;	eliminated unneeded push/pop dpl
                                   1676 ;	eliminated unneeded push/pop dph
                                   1677 ;	eliminated unneeded push/pop b
                                   1678 ;	eliminated unneeded push/pop acc
                                   1679 ;------------------------------------------------------------
                                   1680 ;Allocation info for local variables in function 'Flash'
                                   1681 ;------------------------------------------------------------
                                   1682 ;reaction                  Allocated to registers r6 r7 
                                   1683 ;------------------------------------------------------------
                           0001A3  1684 	G$Flash$0$0 ==.
                           0001A3  1685 	C$Lab_2.c$104$1$50 ==.
                                   1686 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:104: int Flash(void)
                                   1687 ;	-----------------------------------------
                                   1688 ;	 function Flash
                                   1689 ;	-----------------------------------------
      0001A3                       1690 _Flash:
                           0001A3  1691 	C$Lab_2.c$106$1$50 ==.
                                   1692 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:106: int reaction = 0;
                           0001A3  1693 	C$Lab_2.c$108$1$52 ==.
                                   1694 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:108: tenth = 0;
      0001A3 E4               [12] 1695 	clr	a
      0001A4 FE               [12] 1696 	mov	r6,a
      0001A5 FF               [12] 1697 	mov	r7,a
      0001A6 F5*02            [12] 1698 	mov	_tenth,a
      0001A8 F5*03            [12] 1699 	mov	(_tenth + 1),a
      0001AA F5*04            [12] 1700 	mov	(_tenth + 2),a
      0001AC F5*05            [12] 1701 	mov	(_tenth + 3),a
                           0001AE  1702 	C$Lab_2.c$109$1$52 ==.
                                   1703 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:109: time = 0;
      0001AE F5*00            [12] 1704 	mov	_time,a
      0001B0 F5*01            [12] 1705 	mov	(_time + 1),a
                           0001B2  1706 	C$Lab_2.c$110$1$52 ==.
                                   1707 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:110: TL0 = TH0 = 0; // reset timer
                                   1708 ;	1-genFromRTrack replaced	mov	_TH0,#0x00
      0001B2 F5 8C            [12] 1709 	mov	_TH0,a
                                   1710 ;	1-genFromRTrack replaced	mov	_TL0,#0x00
      0001B4 F5 8A            [12] 1711 	mov	_TL0,a
                           0001B6  1712 	C$Lab_2.c$112$1$52 ==.
                                   1713 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:112: printf("\033[12;12H");	
      0001B6 C0 07            [24] 1714 	push	ar7
      0001B8 C0 06            [24] 1715 	push	ar6
      0001BA 74r86            [12] 1716 	mov	a,#___str_6
      0001BC C0 E0            [24] 1717 	push	acc
      0001BE 74s00            [12] 1718 	mov	a,#(___str_6 >> 8)
      0001C0 C0 E0            [24] 1719 	push	acc
      0001C2 74 80            [12] 1720 	mov	a,#0x80
      0001C4 C0 E0            [24] 1721 	push	acc
      0001C6 12r00r00         [24] 1722 	lcall	_printf
      0001C9 15 81            [12] 1723 	dec	sp
      0001CB 15 81            [12] 1724 	dec	sp
      0001CD 15 81            [12] 1725 	dec	sp
                           0001CF  1726 	C$Lab_2.c$113$1$52 ==.
                                   1727 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:113: printf("PRESS THE BUTTON           ");
      0001CF 74r8F            [12] 1728 	mov	a,#___str_7
      0001D1 C0 E0            [24] 1729 	push	acc
      0001D3 74s00            [12] 1730 	mov	a,#(___str_7 >> 8)
      0001D5 C0 E0            [24] 1731 	push	acc
      0001D7 74 80            [12] 1732 	mov	a,#0x80
      0001D9 C0 E0            [24] 1733 	push	acc
      0001DB 12r00r00         [24] 1734 	lcall	_printf
      0001DE 15 81            [12] 1735 	dec	sp
      0001E0 15 81            [12] 1736 	dec	sp
      0001E2 15 81            [12] 1737 	dec	sp
      0001E4 D0 06            [24] 1738 	pop	ar6
      0001E6 D0 07            [24] 1739 	pop	ar7
                           0001E8  1740 	C$Lab_2.c$117$1$52 ==.
                                   1741 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:117: while(SW2press==0){
      0001E8                       1742 00103$:
      0001E8 30*00 03         [24] 1743 	jnb	_SW2press,00122$
      0001EB 02r02r84         [24] 1744 	ljmp	00105$
      0001EE                       1745 00122$:
                           0001EE  1746 	C$Lab_2.c$118$2$53 ==.
                                   1747 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:118: if(tenth > 5000)
      0001EE C3               [12] 1748 	clr	c
      0001EF 74 88            [12] 1749 	mov	a,#0x88
      0001F1 95*02            [12] 1750 	subb	a,_tenth
      0001F3 74 13            [12] 1751 	mov	a,#0x13
      0001F5 95*03            [12] 1752 	subb	a,(_tenth + 1)
      0001F7 E4               [12] 1753 	clr	a
      0001F8 95*04            [12] 1754 	subb	a,(_tenth + 2)
      0001FA 74 80            [12] 1755 	mov	a,#(0x00 ^ 0x80)
      0001FC 85*05 F0         [24] 1756 	mov	b,(_tenth + 3)
      0001FF 63 F0 80         [24] 1757 	xrl	b,#0x80
      000202 95 F0            [12] 1758 	subb	a,b
      000204 50 E2            [24] 1759 	jnc	00103$
                           000206  1760 	C$Lab_2.c$120$3$54 ==.
                                   1761 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:120: printf("\033[2J");          // Erase screen and move cursor to the home position.
      000206 74r00            [12] 1762 	mov	a,#___str_0
      000208 C0 E0            [24] 1763 	push	acc
      00020A 74s00            [12] 1764 	mov	a,#(___str_0 >> 8)
      00020C C0 E0            [24] 1765 	push	acc
      00020E 74 80            [12] 1766 	mov	a,#0x80
      000210 C0 E0            [24] 1767 	push	acc
      000212 12r00r00         [24] 1768 	lcall	_printf
      000215 15 81            [12] 1769 	dec	sp
      000217 15 81            [12] 1770 	dec	sp
      000219 15 81            [12] 1771 	dec	sp
                           00021B  1772 	C$Lab_2.c$122$3$54 ==.
                                   1773 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:122: tenth = 0;
      00021B E4               [12] 1774 	clr	a
      00021C F5*02            [12] 1775 	mov	_tenth,a
      00021E F5*03            [12] 1776 	mov	(_tenth + 1),a
      000220 F5*04            [12] 1777 	mov	(_tenth + 2),a
      000222 F5*05            [12] 1778 	mov	(_tenth + 3),a
                           000224  1779 	C$Lab_2.c$123$3$54 ==.
                                   1780 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:123: time = 0;
      000224 F5*00            [12] 1781 	mov	_time,a
      000226 F5*01            [12] 1782 	mov	(_time + 1),a
                           000228  1783 	C$Lab_2.c$124$3$54 ==.
                                   1784 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:124: TL0 = TH0 = 0; 
                                   1785 ;	1-genFromRTrack replaced	mov	_TH0,#0x00
      000228 F5 8C            [12] 1786 	mov	_TH0,a
                                   1787 ;	1-genFromRTrack replaced	mov	_TL0,#0x00
      00022A F5 8A            [12] 1788 	mov	_TL0,a
                           00022C  1789 	C$Lab_2.c$125$3$54 ==.
                                   1790 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:125: printf("MPS Interrupt Timer Test\n\n\r");
      00022C 74r05            [12] 1791 	mov	a,#___str_1
      00022E C0 E0            [24] 1792 	push	acc
      000230 74s00            [12] 1793 	mov	a,#(___str_1 >> 8)
      000232 C0 E0            [24] 1794 	push	acc
      000234 74 80            [12] 1795 	mov	a,#0x80
      000236 C0 E0            [24] 1796 	push	acc
      000238 12r00r00         [24] 1797 	lcall	_printf
      00023B 15 81            [12] 1798 	dec	sp
      00023D 15 81            [12] 1799 	dec	sp
      00023F 15 81            [12] 1800 	dec	sp
                           000241  1801 	C$Lab_2.c$126$3$54 ==.
                                   1802 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:126: printf("When indicated press the button\n\r");
      000241 74r21            [12] 1803 	mov	a,#___str_2
      000243 C0 E0            [24] 1804 	push	acc
      000245 74s00            [12] 1805 	mov	a,#(___str_2 >> 8)
      000247 C0 E0            [24] 1806 	push	acc
      000249 74 80            [12] 1807 	mov	a,#0x80
      00024B C0 E0            [24] 1808 	push	acc
      00024D 12r00r00         [24] 1809 	lcall	_printf
      000250 15 81            [12] 1810 	dec	sp
      000252 15 81            [12] 1811 	dec	sp
      000254 15 81            [12] 1812 	dec	sp
                           000256  1813 	C$Lab_2.c$127$3$54 ==.
                                   1814 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:127: printf("\033[12;12H");
      000256 74r86            [12] 1815 	mov	a,#___str_6
      000258 C0 E0            [24] 1816 	push	acc
      00025A 74s00            [12] 1817 	mov	a,#(___str_6 >> 8)
      00025C C0 E0            [24] 1818 	push	acc
      00025E 74 80            [12] 1819 	mov	a,#0x80
      000260 C0 E0            [24] 1820 	push	acc
      000262 12r00r00         [24] 1821 	lcall	_printf
      000265 15 81            [12] 1822 	dec	sp
      000267 15 81            [12] 1823 	dec	sp
      000269 15 81            [12] 1824 	dec	sp
                           00026B  1825 	C$Lab_2.c$128$3$54 ==.
                                   1826 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:128: printf("THE SYSTEM HAS BEEN RESET");
      00026B 74rAB            [12] 1827 	mov	a,#___str_8
      00026D C0 E0            [24] 1828 	push	acc
      00026F 74s00            [12] 1829 	mov	a,#(___str_8 >> 8)
      000271 C0 E0            [24] 1830 	push	acc
      000273 74 80            [12] 1831 	mov	a,#0x80
      000275 C0 E0            [24] 1832 	push	acc
      000277 12r00r00         [24] 1833 	lcall	_printf
      00027A 15 81            [12] 1834 	dec	sp
      00027C 15 81            [12] 1835 	dec	sp
      00027E 15 81            [12] 1836 	dec	sp
                           000280  1837 	C$Lab_2.c$129$3$54 ==.
                                   1838 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:129: reaction = 0;
      000280 7E 00            [12] 1839 	mov	r6,#0x00
      000282 7F 00            [12] 1840 	mov	r7,#0x00
                           000284  1841 	C$Lab_2.c$130$1$52 ==.
                                   1842 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:130: break;
      000284                       1843 00105$:
                           000284  1844 	C$Lab_2.c$134$1$52 ==.
                                   1845 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:134: if(SW2press==1){
      000284 20*00 03         [24] 1846 	jb	_SW2press,00124$
      000287 02r03r09         [24] 1847 	ljmp	00107$
      00028A                       1848 00124$:
                           00028A  1849 	C$Lab_2.c$135$2$55 ==.
                                   1850 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:135: reaction = tenth;
      00028A AE*02            [24] 1851 	mov	r6,_tenth
      00028C AF*03            [24] 1852 	mov	r7,(_tenth + 1)
                           00028E  1853 	C$Lab_2.c$136$2$55 ==.
                                   1854 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:136: printf("\033[5;1H");
      00028E C0 07            [24] 1855 	push	ar7
      000290 C0 06            [24] 1856 	push	ar6
      000292 74rC5            [12] 1857 	mov	a,#___str_9
      000294 C0 E0            [24] 1858 	push	acc
      000296 74s00            [12] 1859 	mov	a,#(___str_9 >> 8)
      000298 C0 E0            [24] 1860 	push	acc
      00029A 74 80            [12] 1861 	mov	a,#0x80
      00029C C0 E0            [24] 1862 	push	acc
      00029E 12r00r00         [24] 1863 	lcall	_printf
      0002A1 15 81            [12] 1864 	dec	sp
      0002A3 15 81            [12] 1865 	dec	sp
      0002A5 15 81            [12] 1866 	dec	sp
      0002A7 D0 06            [24] 1867 	pop	ar6
      0002A9 D0 07            [24] 1868 	pop	ar7
                           0002AB  1869 	C$Lab_2.c$137$2$55 ==.
                                   1870 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:137: printf("You reacted in %d thousands of a second", reaction);
      0002AB C0 07            [24] 1871 	push	ar7
      0002AD C0 06            [24] 1872 	push	ar6
      0002AF C0 06            [24] 1873 	push	ar6
      0002B1 C0 07            [24] 1874 	push	ar7
      0002B3 74rCC            [12] 1875 	mov	a,#___str_10
      0002B5 C0 E0            [24] 1876 	push	acc
      0002B7 74s00            [12] 1877 	mov	a,#(___str_10 >> 8)
      0002B9 C0 E0            [24] 1878 	push	acc
      0002BB 74 80            [12] 1879 	mov	a,#0x80
      0002BD C0 E0            [24] 1880 	push	acc
      0002BF 12r00r00         [24] 1881 	lcall	_printf
      0002C2 E5 81            [12] 1882 	mov	a,sp
      0002C4 24 FB            [12] 1883 	add	a,#0xfb
      0002C6 F5 81            [12] 1884 	mov	sp,a
                           0002C8  1885 	C$Lab_2.c$138$2$55 ==.
                                   1886 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:138: printf("\033[12;12H");
      0002C8 74r86            [12] 1887 	mov	a,#___str_6
      0002CA C0 E0            [24] 1888 	push	acc
      0002CC 74s00            [12] 1889 	mov	a,#(___str_6 >> 8)
      0002CE C0 E0            [24] 1890 	push	acc
      0002D0 74 80            [12] 1891 	mov	a,#0x80
      0002D2 C0 E0            [24] 1892 	push	acc
      0002D4 12r00r00         [24] 1893 	lcall	_printf
      0002D7 15 81            [12] 1894 	dec	sp
      0002D9 15 81            [12] 1895 	dec	sp
      0002DB 15 81            [12] 1896 	dec	sp
                           0002DD  1897 	C$Lab_2.c$139$2$55 ==.
                                   1898 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:139: printf("THE BUTTON WAS PRESSED");
      0002DD 74rF4            [12] 1899 	mov	a,#___str_11
      0002DF C0 E0            [24] 1900 	push	acc
      0002E1 74s00            [12] 1901 	mov	a,#(___str_11 >> 8)
      0002E3 C0 E0            [24] 1902 	push	acc
      0002E5 74 80            [12] 1903 	mov	a,#0x80
      0002E7 C0 E0            [24] 1904 	push	acc
      0002E9 12r00r00         [24] 1905 	lcall	_printf
      0002EC 15 81            [12] 1906 	dec	sp
      0002EE 15 81            [12] 1907 	dec	sp
      0002F0 15 81            [12] 1908 	dec	sp
      0002F2 D0 06            [24] 1909 	pop	ar6
      0002F4 D0 07            [24] 1910 	pop	ar7
                           0002F6  1911 	C$Lab_2.c$141$2$55 ==.
                                   1912 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:141: SW2press = 0;
      0002F6 C2*00            [12] 1913 	clr	_SW2press
                           0002F8  1914 	C$Lab_2.c$142$2$55 ==.
                                   1915 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:142: tenth = 0;
      0002F8 E4               [12] 1916 	clr	a
      0002F9 F5*02            [12] 1917 	mov	_tenth,a
      0002FB F5*03            [12] 1918 	mov	(_tenth + 1),a
      0002FD F5*04            [12] 1919 	mov	(_tenth + 2),a
      0002FF F5*05            [12] 1920 	mov	(_tenth + 3),a
                           000301  1921 	C$Lab_2.c$143$2$55 ==.
                                   1922 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:143: time = 0;
      000301 F5*00            [12] 1923 	mov	_time,a
      000303 F5*01            [12] 1924 	mov	(_time + 1),a
                           000305  1925 	C$Lab_2.c$144$2$55 ==.
                                   1926 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:144: TL0 = TH0 = 0; // reset timer
                                   1927 ;	1-genFromRTrack replaced	mov	_TH0,#0x00
      000305 F5 8C            [12] 1928 	mov	_TH0,a
                                   1929 ;	1-genFromRTrack replaced	mov	_TL0,#0x00
      000307 F5 8A            [12] 1930 	mov	_TL0,a
      000309                       1931 00107$:
                           000309  1932 	C$Lab_2.c$146$1$52 ==.
                                   1933 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:146: return reaction;
      000309 8E 82            [24] 1934 	mov	dpl,r6
      00030B 8F 83            [24] 1935 	mov	dph,r7
                           00030D  1936 	C$Lab_2.c$147$1$52 ==.
                           00030D  1937 	XG$Flash$0$0 ==.
      00030D 22               [24] 1938 	ret
                                   1939 ;------------------------------------------------------------
                                   1940 ;Allocation info for local variables in function 'PORT_INIT'
                                   1941 ;------------------------------------------------------------
                                   1942 ;SFRPAGE_SAVE              Allocated to registers r7 
                                   1943 ;------------------------------------------------------------
                           00030E  1944 	G$PORT_INIT$0$0 ==.
                           00030E  1945 	C$Lab_2.c$156$1$52 ==.
                                   1946 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:156: void PORT_INIT(void)
                                   1947 ;	-----------------------------------------
                                   1948 ;	 function PORT_INIT
                                   1949 ;	-----------------------------------------
      00030E                       1950 _PORT_INIT:
                           00030E  1951 	C$Lab_2.c$160$1$57 ==.
                                   1952 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:160: SFRPAGE_SAVE = SFRPAGE;     // Save Current SFR page.
      00030E AF 84            [24] 1953 	mov	r7,_SFRPAGE
                           000310  1954 	C$Lab_2.c$162$1$57 ==.
                                   1955 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:162: SFRPAGE = CONFIG_PAGE;
      000310 75 84 0F         [24] 1956 	mov	_SFRPAGE,#0x0F
                           000313  1957 	C$Lab_2.c$163$1$57 ==.
                                   1958 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:163: WDTCN   = 0xDE;             // Disable watchdog timer.
      000313 75 FF DE         [24] 1959 	mov	_WDTCN,#0xDE
                           000316  1960 	C$Lab_2.c$164$1$57 ==.
                                   1961 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:164: WDTCN   = 0xAD;
      000316 75 FF AD         [24] 1962 	mov	_WDTCN,#0xAD
                           000319  1963 	C$Lab_2.c$165$1$57 ==.
                                   1964 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:165: EA      = 1;                // Enable interrupts as selected.
      000319 D2 AF            [12] 1965 	setb	_EA
                           00031B  1966 	C$Lab_2.c$167$1$57 ==.
                                   1967 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:167: XBR0    = 0x04;             // Enable UART0.
      00031B 75 E1 04         [24] 1968 	mov	_XBR0,#0x04
                           00031E  1969 	C$Lab_2.c$168$1$57 ==.
                                   1970 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:168: XBR1    = 0x04;             // 
      00031E 75 E2 04         [24] 1971 	mov	_XBR1,#0x04
                           000321  1972 	C$Lab_2.c$169$1$57 ==.
                                   1973 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:169: XBR2    = 0x40;             // Enable Crossbar and weak pull-ups.
      000321 75 E3 40         [24] 1974 	mov	_XBR2,#0x40
                           000324  1975 	C$Lab_2.c$171$1$57 ==.
                                   1976 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:171: P0MDOUT = 0x01;             // P0.0 (TX0) is configured as Push-Pull for output.
      000324 75 A4 01         [24] 1977 	mov	_P0MDOUT,#0x01
                           000327  1978 	C$Lab_2.c$174$1$57 ==.
                                   1979 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:174: P0      = 0x06;             // Additionally, set P0.0=0, P0.1=1, and P0.2=1.
      000327 75 80 06         [24] 1980 	mov	_P0,#0x06
                           00032A  1981 	C$Lab_2.c$176$1$57 ==.
                                   1982 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:176: SFRPAGE = SFRPAGE_SAVE;     // Restore SFR page.
      00032A 8F 84            [24] 1983 	mov	_SFRPAGE,r7
                           00032C  1984 	C$Lab_2.c$177$1$57 ==.
                           00032C  1985 	XG$PORT_INIT$0$0 ==.
      00032C 22               [24] 1986 	ret
                                   1987 ;------------------------------------------------------------
                                   1988 ;Allocation info for local variables in function 'SYSCLK_INIT'
                                   1989 ;------------------------------------------------------------
                                   1990 ;i                         Allocated to registers r5 r6 
                                   1991 ;SFRPAGE_SAVE              Allocated to registers r7 
                                   1992 ;------------------------------------------------------------
                           00032D  1993 	G$SYSCLK_INIT$0$0 ==.
                           00032D  1994 	C$Lab_2.c$185$1$57 ==.
                                   1995 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:185: void SYSCLK_INIT(void)
                                   1996 ;	-----------------------------------------
                                   1997 ;	 function SYSCLK_INIT
                                   1998 ;	-----------------------------------------
      00032D                       1999 _SYSCLK_INIT:
                           00032D  2000 	C$Lab_2.c$191$1$59 ==.
                                   2001 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:191: SFRPAGE_SAVE = SFRPAGE;     // Save Current SFR page.
      00032D AF 84            [24] 2002 	mov	r7,_SFRPAGE
                           00032F  2003 	C$Lab_2.c$193$1$59 ==.
                                   2004 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:193: SFRPAGE = CONFIG_PAGE;
      00032F 75 84 0F         [24] 2005 	mov	_SFRPAGE,#0x0F
                           000332  2006 	C$Lab_2.c$194$1$59 ==.
                                   2007 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:194: OSCXCN  = 0x67;             // Start external oscillator
      000332 75 8C 67         [24] 2008 	mov	_OSCXCN,#0x67
                           000335  2009 	C$Lab_2.c$195$1$59 ==.
                                   2010 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:195: for(i=0; i < 256; i++);     // Wait for the oscillator to start up.
      000335 7D 00            [12] 2011 	mov	r5,#0x00
      000337 7E 01            [12] 2012 	mov	r6,#0x01
      000339                       2013 00111$:
      000339 1D               [12] 2014 	dec	r5
      00033A BD FF 01         [24] 2015 	cjne	r5,#0xFF,00141$
      00033D 1E               [12] 2016 	dec	r6
      00033E                       2017 00141$:
      00033E ED               [12] 2018 	mov	a,r5
      00033F 4E               [12] 2019 	orl	a,r6
      000340 70 F7            [24] 2020 	jnz	00111$
                           000342  2021 	C$Lab_2.c$196$1$59 ==.
                                   2022 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:196: while(!(OSCXCN & 0x80));    // Check to see if the Crystal Oscillator Valid Flag is set.
      000342                       2023 00102$:
      000342 E5 8C            [12] 2024 	mov	a,_OSCXCN
      000344 30 E7 FB         [24] 2025 	jnb	acc.7,00102$
                           000347  2026 	C$Lab_2.c$197$1$59 ==.
                                   2027 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:197: CLKSEL  = 0x01;             // SYSCLK derived from the External Oscillator circuit.
      000347 75 97 01         [24] 2028 	mov	_CLKSEL,#0x01
                           00034A  2029 	C$Lab_2.c$198$1$59 ==.
                                   2030 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:198: OSCICN  = 0x00;             // Disable the internal oscillator.
      00034A 75 8A 00         [24] 2031 	mov	_OSCICN,#0x00
                           00034D  2032 	C$Lab_2.c$200$1$59 ==.
                                   2033 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:200: SFRPAGE = CONFIG_PAGE;
      00034D 75 84 0F         [24] 2034 	mov	_SFRPAGE,#0x0F
                           000350  2035 	C$Lab_2.c$201$1$59 ==.
                                   2036 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:201: PLL0CN  = 0x04;
      000350 75 89 04         [24] 2037 	mov	_PLL0CN,#0x04
                           000353  2038 	C$Lab_2.c$202$1$59 ==.
                                   2039 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:202: SFRPAGE = LEGACY_PAGE;
      000353 75 84 00         [24] 2040 	mov	_SFRPAGE,#0x00
                           000356  2041 	C$Lab_2.c$203$1$59 ==.
                                   2042 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:203: FLSCL   = 0x10;
      000356 75 B7 10         [24] 2043 	mov	_FLSCL,#0x10
                           000359  2044 	C$Lab_2.c$204$1$59 ==.
                                   2045 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:204: SFRPAGE = CONFIG_PAGE;
      000359 75 84 0F         [24] 2046 	mov	_SFRPAGE,#0x0F
                           00035C  2047 	C$Lab_2.c$205$1$59 ==.
                                   2048 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:205: PLL0CN |= 0x01;
      00035C 43 89 01         [24] 2049 	orl	_PLL0CN,#0x01
                           00035F  2050 	C$Lab_2.c$206$1$59 ==.
                                   2051 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:206: PLL0DIV = 0x1B;//27
      00035F 75 8D 1B         [24] 2052 	mov	_PLL0DIV,#0x1B
                           000362  2053 	C$Lab_2.c$207$1$59 ==.
                                   2054 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:207: PLL0FLT = 0x01;//refrence clock is 22MHz
      000362 75 8F 01         [24] 2055 	mov	_PLL0FLT,#0x01
                           000365  2056 	C$Lab_2.c$208$1$59 ==.
                                   2057 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:208: PLL0MUL = 0x50;//80
      000365 75 8E 50         [24] 2058 	mov	_PLL0MUL,#0x50
                           000368  2059 	C$Lab_2.c$209$1$59 ==.
                                   2060 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:209: for(i=0; i < 256; i++);
      000368 7D 00            [12] 2061 	mov	r5,#0x00
      00036A 7E 01            [12] 2062 	mov	r6,#0x01
      00036C                       2063 00114$:
      00036C 1D               [12] 2064 	dec	r5
      00036D BD FF 01         [24] 2065 	cjne	r5,#0xFF,00144$
      000370 1E               [12] 2066 	dec	r6
      000371                       2067 00144$:
      000371 ED               [12] 2068 	mov	a,r5
      000372 4E               [12] 2069 	orl	a,r6
      000373 70 F7            [24] 2070 	jnz	00114$
                           000375  2071 	C$Lab_2.c$210$1$59 ==.
                                   2072 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:210: PLL0CN |= 0x02;
      000375 43 89 02         [24] 2073 	orl	_PLL0CN,#0x02
                           000378  2074 	C$Lab_2.c$211$1$59 ==.
                                   2075 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:211: while(!(PLL0CN & 0x10));
      000378                       2076 00106$:
      000378 E5 89            [12] 2077 	mov	a,_PLL0CN
      00037A 30 E4 FB         [24] 2078 	jnb	acc.4,00106$
                           00037D  2079 	C$Lab_2.c$212$1$59 ==.
                                   2080 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:212: CLKSEL  = 0x02;             // SYSCLK derived from the PLL.
      00037D 75 97 02         [24] 2081 	mov	_CLKSEL,#0x02
                           000380  2082 	C$Lab_2.c$214$1$59 ==.
                                   2083 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:214: SFRPAGE = SFRPAGE_SAVE;     // Restore SFR page.
      000380 8F 84            [24] 2084 	mov	_SFRPAGE,r7
                           000382  2085 	C$Lab_2.c$215$1$59 ==.
                           000382  2086 	XG$SYSCLK_INIT$0$0 ==.
      000382 22               [24] 2087 	ret
                                   2088 ;------------------------------------------------------------
                                   2089 ;Allocation info for local variables in function 'UART0_INIT'
                                   2090 ;------------------------------------------------------------
                                   2091 ;SFRPAGE_SAVE              Allocated to registers r7 
                                   2092 ;------------------------------------------------------------
                           000383  2093 	G$UART0_INIT$0$0 ==.
                           000383  2094 	C$Lab_2.c$224$1$59 ==.
                                   2095 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:224: void UART0_INIT(void)
                                   2096 ;	-----------------------------------------
                                   2097 ;	 function UART0_INIT
                                   2098 ;	-----------------------------------------
      000383                       2099 _UART0_INIT:
                           000383  2100 	C$Lab_2.c$228$1$61 ==.
                                   2101 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:228: SFRPAGE_SAVE = SFRPAGE;     // Save Current SFR page.
      000383 AF 84            [24] 2102 	mov	r7,_SFRPAGE
                           000385  2103 	C$Lab_2.c$230$1$61 ==.
                                   2104 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:230: SFRPAGE = TIMER01_PAGE;
      000385 75 84 00         [24] 2105 	mov	_SFRPAGE,#0x00
                           000388  2106 	C$Lab_2.c$231$1$61 ==.
                                   2107 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:231: TMOD   &= ~0xF0;
      000388 AE 89            [24] 2108 	mov	r6,_TMOD
      00038A 74 0F            [12] 2109 	mov	a,#0x0F
      00038C 5E               [12] 2110 	anl	a,r6
      00038D F5 89            [12] 2111 	mov	_TMOD,a
                           00038F  2112 	C$Lab_2.c$232$1$61 ==.
                                   2113 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:232: TMOD   |=  0x21;            // Timer1, Mode 2: 8-bit counter/timer with auto-reload.//Timer0, Mode 1: 16 bit counter/timer
      00038F 43 89 21         [24] 2114 	orl	_TMOD,#0x21
                           000392  2115 	C$Lab_2.c$233$1$61 ==.
                                   2116 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:233: TH1     = (unsigned char)-(SYSCLK/BAUDRATE/16); // Set Timer1 reload value for baudrate
      000392 75 8D DD         [24] 2117 	mov	_TH1,#0xDD
                           000395  2118 	C$Lab_2.c$234$1$61 ==.
                                   2119 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:234: CKCON  |= 0x18;             // Timer1&0 uses SYSCLK as time base
      000395 43 8E 18         [24] 2120 	orl	_CKCON,#0x18
                           000398  2121 	C$Lab_2.c$235$1$61 ==.
                                   2122 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:235: TL1     = TH1;
      000398 85 8D 8B         [24] 2123 	mov	_TL1,_TH1
                           00039B  2124 	C$Lab_2.c$236$1$61 ==.
                                   2125 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:236: TR1     = 1;                // Start Timer1.
      00039B D2 8E            [12] 2126 	setb	_TR1
                           00039D  2127 	C$Lab_2.c$237$1$61 ==.
                                   2128 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:237: TL0= TH0;
      00039D 85 8C 8A         [24] 2129 	mov	_TL0,_TH0
                           0003A0  2130 	C$Lab_2.c$238$1$61 ==.
                                   2131 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:238: TR0 = 1; //Start Timer0
      0003A0 D2 8C            [12] 2132 	setb	_TR0
                           0003A2  2133 	C$Lab_2.c$239$1$61 ==.
                                   2134 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:239: SFRPAGE = UART0_PAGE;
      0003A2 75 84 00         [24] 2135 	mov	_SFRPAGE,#0x00
                           0003A5  2136 	C$Lab_2.c$240$1$61 ==.
                                   2137 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:240: SCON0   = 0x50;             // Set Mode 1: 8-Bit UART
      0003A5 75 98 50         [24] 2138 	mov	_SCON0,#0x50
                           0003A8  2139 	C$Lab_2.c$241$1$61 ==.
                                   2140 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:241: SSTA0   = 0x10;             // UART0 baud rate divide-by-two disabled (SMOD0 = 1).
      0003A8 75 91 10         [24] 2141 	mov	_SSTA0,#0x10
                           0003AB  2142 	C$Lab_2.c$242$1$61 ==.
                                   2143 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:242: TI0     = 1;                // Indicate TX0 ready.
      0003AB D2 99            [12] 2144 	setb	_TI0
                           0003AD  2145 	C$Lab_2.c$244$1$61 ==.
                                   2146 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_02\2.3-Reaction Time Game\Lab_2.c:244: SFRPAGE = SFRPAGE_SAVE;     // Restore SFR page.
      0003AD 8F 84            [24] 2147 	mov	_SFRPAGE,r7
                           0003AF  2148 	C$Lab_2.c$245$1$61 ==.
                           0003AF  2149 	XG$UART0_INIT$0$0 ==.
      0003AF 22               [24] 2150 	ret
                                   2151 	.area CSEG    (CODE)
                                   2152 	.area CONST   (CODE)
                           000000  2153 FLab_2$__str_0$0$0 == .
      000000                       2154 ___str_0:
      000000 1B                    2155 	.db 0x1B
      000001 5B 32 4A              2156 	.ascii "[2J"
      000004 00                    2157 	.db 0x00
                           000005  2158 FLab_2$__str_1$0$0 == .
      000005                       2159 ___str_1:
      000005 4D 50 53 20 49 6E 74  2160 	.ascii "MPS Interrupt Timer Test"
             65 72 72 75 70 74 20
             54 69 6D 65 72 20 54
             65 73 74
      00001D 0A                    2161 	.db 0x0A
      00001E 0A                    2162 	.db 0x0A
      00001F 0D                    2163 	.db 0x0D
      000020 00                    2164 	.db 0x00
                           000021  2165 FLab_2$__str_2$0$0 == .
      000021                       2166 ___str_2:
      000021 57 68 65 6E 20 69 6E  2167 	.ascii "When indicated press the button"
             64 69 63 61 74 65 64
             20 70 72 65 73 73 20
             74 68 65 20 62 75 74
             74 6F 6E
      000040 0A                    2168 	.db 0x0A
      000041 0D                    2169 	.db 0x0D
      000042 00                    2170 	.db 0x00
                           000043  2171 FLab_2$__str_3$0$0 == .
      000043                       2172 ___str_3:
      000043 1B                    2173 	.db 0x1B
      000044 5B 30 6D              2174 	.ascii "[0m"
      000047 00                    2175 	.db 0x00
                           000048  2176 FLab_2$__str_4$0$0 == .
      000048                       2177 ___str_4:
      000048 1B                    2178 	.db 0x1B
      000049 5B 36 3B 31 48        2179 	.ascii "[6;1H"
      00004E 00                    2180 	.db 0x00
                           00004F  2181 FLab_2$__str_5$0$0 == .
      00004F                       2182 ___str_5:
      00004F 59 6F 75 72 20 61 76  2183 	.ascii "Your average response time is %d thousands of a second"
             65 72 61 67 65 20 72
             65 73 70 6F 6E 73 65
             20 74 69 6D 65 20 69
             73 20 25 64 20 74 68
             6F 75 73 61 6E 64 73
             20 6F 66 20 61 20 73
             65 63 6F 6E 64
      000085 00                    2184 	.db 0x00
                           000086  2185 FLab_2$__str_6$0$0 == .
      000086                       2186 ___str_6:
      000086 1B                    2187 	.db 0x1B
      000087 5B 31 32 3B 31 32 48  2188 	.ascii "[12;12H"
      00008E 00                    2189 	.db 0x00
                           00008F  2190 FLab_2$__str_7$0$0 == .
      00008F                       2191 ___str_7:
      00008F 50 52 45 53 53 20 54  2192 	.ascii "PRESS THE BUTTON           "
             48 45 20 42 55 54 54
             4F 4E 20 20 20 20 20
             20 20 20 20 20 20
      0000AA 00                    2193 	.db 0x00
                           0000AB  2194 FLab_2$__str_8$0$0 == .
      0000AB                       2195 ___str_8:
      0000AB 54 48 45 20 53 59 53  2196 	.ascii "THE SYSTEM HAS BEEN RESET"
             54 45 4D 20 48 41 53
             20 42 45 45 4E 20 52
             45 53 45 54
      0000C4 00                    2197 	.db 0x00
                           0000C5  2198 FLab_2$__str_9$0$0 == .
      0000C5                       2199 ___str_9:
      0000C5 1B                    2200 	.db 0x1B
      0000C6 5B 35 3B 31 48        2201 	.ascii "[5;1H"
      0000CB 00                    2202 	.db 0x00
                           0000CC  2203 FLab_2$__str_10$0$0 == .
      0000CC                       2204 ___str_10:
      0000CC 59 6F 75 20 72 65 61  2205 	.ascii "You reacted in %d thousands of a second"
             63 74 65 64 20 69 6E
             20 25 64 20 74 68 6F
             75 73 61 6E 64 73 20
             6F 66 20 61 20 73 65
             63 6F 6E 64
      0000F3 00                    2206 	.db 0x00
                           0000F4  2207 FLab_2$__str_11$0$0 == .
      0000F4                       2208 ___str_11:
      0000F4 54 48 45 20 42 55 54  2209 	.ascii "THE BUTTON WAS PRESSED"
             54 4F 4E 20 57 41 53
             20 50 52 45 53 53 45
             44
      00010A 00                    2210 	.db 0x00
                                   2211 	.area XINIT   (CODE)
                                   2212 	.area CABS    (ABS,CODE)
