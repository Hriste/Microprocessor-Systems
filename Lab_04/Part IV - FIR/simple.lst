                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Apr  5 2014) (MINGW32)
                                      4 ; This file was generated Mon Oct 31 18:40:12 2016
                                      5 ;--------------------------------------------------------
                                      6 	.module simple
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _printf
                                     13 	.globl _P7_7
                                     14 	.globl _P7_6
                                     15 	.globl _P7_5
                                     16 	.globl _P7_4
                                     17 	.globl _P7_3
                                     18 	.globl _P7_2
                                     19 	.globl _P7_1
                                     20 	.globl _P7_0
                                     21 	.globl _SPIF
                                     22 	.globl _WCOL
                                     23 	.globl _MODF
                                     24 	.globl _RXOVRN
                                     25 	.globl _NSSMD1
                                     26 	.globl _NSSMD0
                                     27 	.globl _TXBMT
                                     28 	.globl _SPIEN
                                     29 	.globl _P6_7
                                     30 	.globl _P6_6
                                     31 	.globl _P6_5
                                     32 	.globl _P6_4
                                     33 	.globl _P6_3
                                     34 	.globl _P6_2
                                     35 	.globl _P6_1
                                     36 	.globl _P6_0
                                     37 	.globl _AD2EN
                                     38 	.globl _AD2TM
                                     39 	.globl _AD2INT
                                     40 	.globl _AD2BUSY
                                     41 	.globl _AD2CM2
                                     42 	.globl _AD2CM1
                                     43 	.globl _AD2CM0
                                     44 	.globl _AD2WINT
                                     45 	.globl _AD0EN
                                     46 	.globl _AD0TM
                                     47 	.globl _AD0INT
                                     48 	.globl _AD0BUSY
                                     49 	.globl _AD0CM1
                                     50 	.globl _AD0CM0
                                     51 	.globl _AD0WINT
                                     52 	.globl _AD0LJST
                                     53 	.globl _P5_7
                                     54 	.globl _P5_6
                                     55 	.globl _P5_5
                                     56 	.globl _P5_4
                                     57 	.globl _P5_3
                                     58 	.globl _P5_2
                                     59 	.globl _P5_1
                                     60 	.globl _P5_0
                                     61 	.globl _CF
                                     62 	.globl _CR
                                     63 	.globl _CCF5
                                     64 	.globl _CCF4
                                     65 	.globl _CCF3
                                     66 	.globl _CCF2
                                     67 	.globl _CCF1
                                     68 	.globl _CCF0
                                     69 	.globl _CY
                                     70 	.globl _AC
                                     71 	.globl _F0
                                     72 	.globl _RS1
                                     73 	.globl _RS0
                                     74 	.globl _OV
                                     75 	.globl _F1
                                     76 	.globl _P
                                     77 	.globl _P4_7
                                     78 	.globl _P4_6
                                     79 	.globl _P4_5
                                     80 	.globl _P4_4
                                     81 	.globl _P4_3
                                     82 	.globl _P4_2
                                     83 	.globl _P4_1
                                     84 	.globl _P4_0
                                     85 	.globl _TF4
                                     86 	.globl _EXF4
                                     87 	.globl _EXEN4
                                     88 	.globl _TR4
                                     89 	.globl _CT4
                                     90 	.globl _CPRL4
                                     91 	.globl _TF3
                                     92 	.globl _EXF3
                                     93 	.globl _EXEN3
                                     94 	.globl _TR3
                                     95 	.globl _CT3
                                     96 	.globl _CPRL3
                                     97 	.globl _TF2
                                     98 	.globl _EXF2
                                     99 	.globl _EXEN2
                                    100 	.globl _TR2
                                    101 	.globl _CT2
                                    102 	.globl _CPRL2
                                    103 	.globl _MAC0HO
                                    104 	.globl _MAC0Z
                                    105 	.globl _MAC0SO
                                    106 	.globl _MAC0N
                                    107 	.globl _BUSY
                                    108 	.globl _ENSMB
                                    109 	.globl _STA
                                    110 	.globl _STO
                                    111 	.globl _SI
                                    112 	.globl _AA
                                    113 	.globl _SMBFTE
                                    114 	.globl _SMBTOE
                                    115 	.globl _PT2
                                    116 	.globl _PS
                                    117 	.globl _PS0
                                    118 	.globl _PT1
                                    119 	.globl _PX1
                                    120 	.globl _PT0
                                    121 	.globl _PX0
                                    122 	.globl _P3_7
                                    123 	.globl _P3_6
                                    124 	.globl _P3_5
                                    125 	.globl _P3_4
                                    126 	.globl _P3_3
                                    127 	.globl _P3_2
                                    128 	.globl _P3_1
                                    129 	.globl _P3_0
                                    130 	.globl _EA
                                    131 	.globl _ET2
                                    132 	.globl _ES
                                    133 	.globl _ES0
                                    134 	.globl _ET1
                                    135 	.globl _EX1
                                    136 	.globl _ET0
                                    137 	.globl _EX0
                                    138 	.globl _P2_7
                                    139 	.globl _P2_6
                                    140 	.globl _P2_5
                                    141 	.globl _P2_4
                                    142 	.globl _P2_3
                                    143 	.globl _P2_2
                                    144 	.globl _P2_1
                                    145 	.globl _P2_0
                                    146 	.globl _S1MODE
                                    147 	.globl _MCE1
                                    148 	.globl _REN1
                                    149 	.globl _TB81
                                    150 	.globl _RB81
                                    151 	.globl _TI1
                                    152 	.globl _RI1
                                    153 	.globl _SM00
                                    154 	.globl _SM10
                                    155 	.globl _SM20
                                    156 	.globl _REN
                                    157 	.globl _REN0
                                    158 	.globl _TB80
                                    159 	.globl _RB80
                                    160 	.globl _TI
                                    161 	.globl _TI0
                                    162 	.globl _RI
                                    163 	.globl _RI0
                                    164 	.globl _P1_7
                                    165 	.globl _P1_6
                                    166 	.globl _P1_5
                                    167 	.globl _P1_4
                                    168 	.globl _P1_3
                                    169 	.globl _P1_2
                                    170 	.globl _P1_1
                                    171 	.globl _P1_0
                                    172 	.globl _FLHBUSY
                                    173 	.globl _CP1EN
                                    174 	.globl _CP1OUT
                                    175 	.globl _CP1RIF
                                    176 	.globl _CP1FIF
                                    177 	.globl _CP1HYP1
                                    178 	.globl _CP1HYP0
                                    179 	.globl _CP1HYN1
                                    180 	.globl _CP1HYN0
                                    181 	.globl _CP0EN
                                    182 	.globl _CP0OUT
                                    183 	.globl _CP0RIF
                                    184 	.globl _CP0FIF
                                    185 	.globl _CP0HYP1
                                    186 	.globl _CP0HYP0
                                    187 	.globl _CP0HYN1
                                    188 	.globl _CP0HYN0
                                    189 	.globl _TF1
                                    190 	.globl _TR1
                                    191 	.globl _TF0
                                    192 	.globl _TR0
                                    193 	.globl _IE1
                                    194 	.globl _IT1
                                    195 	.globl _IE0
                                    196 	.globl _IT0
                                    197 	.globl _P0_7
                                    198 	.globl _P0_6
                                    199 	.globl _P0_5
                                    200 	.globl _P0_4
                                    201 	.globl _P0_3
                                    202 	.globl _P0_2
                                    203 	.globl _P0_1
                                    204 	.globl _P0_0
                                    205 	.globl _MAC0RND
                                    206 	.globl _MAC0ACC
                                    207 	.globl _MAC0A
                                    208 	.globl _RCAP4
                                    209 	.globl _TMR4
                                    210 	.globl _DAC1
                                    211 	.globl _RCAP3
                                    212 	.globl _TMR3
                                    213 	.globl _PCA0CP5
                                    214 	.globl _PCA0CP4
                                    215 	.globl _PCA0CP3
                                    216 	.globl _PCA0CP2
                                    217 	.globl _PCA0CP1
                                    218 	.globl _PCA0CP0
                                    219 	.globl _PCA0
                                    220 	.globl _DAC0
                                    221 	.globl _ADC0LT
                                    222 	.globl _ADC0GT
                                    223 	.globl _ADC0
                                    224 	.globl _RCAP2
                                    225 	.globl _TMR2
                                    226 	.globl _TMR1
                                    227 	.globl _TMR0
                                    228 	.globl _P7
                                    229 	.globl _P6
                                    230 	.globl _XBR2
                                    231 	.globl _XBR1
                                    232 	.globl _XBR0
                                    233 	.globl _P5
                                    234 	.globl _P4
                                    235 	.globl _FLACL
                                    236 	.globl _P1MDIN
                                    237 	.globl _P3MDOUT
                                    238 	.globl _P2MDOUT
                                    239 	.globl _P1MDOUT
                                    240 	.globl _P0MDOUT
                                    241 	.globl _CCH0LC
                                    242 	.globl _CCH0TN
                                    243 	.globl _CCH0CN
                                    244 	.globl _P7MDOUT
                                    245 	.globl _P6MDOUT
                                    246 	.globl _P5MDOUT
                                    247 	.globl _P4MDOUT
                                    248 	.globl _CCH0MA
                                    249 	.globl _CLKSEL
                                    250 	.globl _SFRPGCN
                                    251 	.globl _PLL0FLT
                                    252 	.globl _PLL0MUL
                                    253 	.globl _PLL0DIV
                                    254 	.globl _OSCXCN
                                    255 	.globl _OSCICL
                                    256 	.globl _OSCICN
                                    257 	.globl _PLL0CN
                                    258 	.globl _FLSTAT
                                    259 	.globl _MAC0RNDH
                                    260 	.globl _MAC0RNDL
                                    261 	.globl _MAC0CF
                                    262 	.globl _MAC0AH
                                    263 	.globl _MAC0AL
                                    264 	.globl _MAC0STA
                                    265 	.globl _MAC0OVR
                                    266 	.globl _MAC0ACC3
                                    267 	.globl _MAC0ACC2
                                    268 	.globl _MAC0ACC1
                                    269 	.globl _MAC0ACC0
                                    270 	.globl _MAC0BH
                                    271 	.globl _MAC0BL
                                    272 	.globl _ADC2CN
                                    273 	.globl _TMR4H
                                    274 	.globl _TMR4L
                                    275 	.globl _RCAP4H
                                    276 	.globl _RCAP4L
                                    277 	.globl _TMR4CF
                                    278 	.globl _TMR4CN
                                    279 	.globl _ADC2LT
                                    280 	.globl _ADC2GT
                                    281 	.globl _ADC2
                                    282 	.globl _ADC2CF
                                    283 	.globl _AMX2SL
                                    284 	.globl _AMX2CF
                                    285 	.globl _CPT1MD
                                    286 	.globl _CPT1CN
                                    287 	.globl _DAC1CN
                                    288 	.globl _DAC1H
                                    289 	.globl _DAC1L
                                    290 	.globl _TMR3H
                                    291 	.globl _TMR3L
                                    292 	.globl _RCAP3H
                                    293 	.globl _RCAP3L
                                    294 	.globl _TMR3CF
                                    295 	.globl _TMR3CN
                                    296 	.globl _SBUF1
                                    297 	.globl _SCON1
                                    298 	.globl _CPT0MD
                                    299 	.globl _CPT0CN
                                    300 	.globl _PCA0CPH1
                                    301 	.globl _PCA0CPL1
                                    302 	.globl _PCA0CPH0
                                    303 	.globl _PCA0CPL0
                                    304 	.globl _PCA0H
                                    305 	.globl _PCA0L
                                    306 	.globl _SPI0CN
                                    307 	.globl _RSTSRC
                                    308 	.globl _PCA0CPH4
                                    309 	.globl _PCA0CPL4
                                    310 	.globl _PCA0CPH3
                                    311 	.globl _PCA0CPL3
                                    312 	.globl _PCA0CPH2
                                    313 	.globl _PCA0CPL2
                                    314 	.globl _ADC0CN
                                    315 	.globl _PCA0CPH5
                                    316 	.globl _PCA0CPL5
                                    317 	.globl _PCA0CPM5
                                    318 	.globl _PCA0CPM4
                                    319 	.globl _PCA0CPM3
                                    320 	.globl _PCA0CPM2
                                    321 	.globl _PCA0CPM1
                                    322 	.globl _PCA0CPM0
                                    323 	.globl _PCA0MD
                                    324 	.globl _PCA0CN
                                    325 	.globl _DAC0CN
                                    326 	.globl _DAC0H
                                    327 	.globl _DAC0L
                                    328 	.globl _REF0CN
                                    329 	.globl _SMB0CR
                                    330 	.globl _TH2
                                    331 	.globl _TMR2H
                                    332 	.globl _TL2
                                    333 	.globl _TMR2L
                                    334 	.globl _RCAP2H
                                    335 	.globl _RCAP2L
                                    336 	.globl _TMR2CF
                                    337 	.globl _TMR2CN
                                    338 	.globl _ADC0LTH
                                    339 	.globl _ADC0LTL
                                    340 	.globl _ADC0GTH
                                    341 	.globl _ADC0GTL
                                    342 	.globl _SMB0ADR
                                    343 	.globl _SMB0DAT
                                    344 	.globl _SMB0STA
                                    345 	.globl _SMB0CN
                                    346 	.globl _ADC0H
                                    347 	.globl _ADC0L
                                    348 	.globl _ADC0CF
                                    349 	.globl _AMX0SL
                                    350 	.globl _AMX0CF
                                    351 	.globl _SADEN0
                                    352 	.globl _FLSCL
                                    353 	.globl _SADDR0
                                    354 	.globl _EMI0CF
                                    355 	.globl __XPAGE
                                    356 	.globl _EMI0CN
                                    357 	.globl _EMI0TC
                                    358 	.globl _SPI0CKR
                                    359 	.globl _SPI0DAT
                                    360 	.globl _SPI0CFG
                                    361 	.globl _SBUF
                                    362 	.globl _SBUF0
                                    363 	.globl _SCON
                                    364 	.globl _SCON0
                                    365 	.globl _SSTA0
                                    366 	.globl _PSCTL
                                    367 	.globl _CKCON
                                    368 	.globl _TH1
                                    369 	.globl _TH0
                                    370 	.globl _TL1
                                    371 	.globl _TL0
                                    372 	.globl _TMOD
                                    373 	.globl _TCON
                                    374 	.globl _WDTCN
                                    375 	.globl _EIP2
                                    376 	.globl _EIP1
                                    377 	.globl _B
                                    378 	.globl _EIE2
                                    379 	.globl _EIE1
                                    380 	.globl _ACC
                                    381 	.globl _PSW
                                    382 	.globl _IP
                                    383 	.globl _PSBANK
                                    384 	.globl _P3
                                    385 	.globl _IE
                                    386 	.globl _P2
                                    387 	.globl _P1
                                    388 	.globl _PCON
                                    389 	.globl _SFRLAST
                                    390 	.globl _SFRNEXT
                                    391 	.globl _SFRPAGE
                                    392 	.globl _DPH
                                    393 	.globl _DPL
                                    394 	.globl _SP
                                    395 	.globl _P0
                                    396 	.globl _prev_out
                                    397 	.globl _prev2
                                    398 	.globl _prev
                                    399 	.globl _putchar
                                    400 	.globl _getchar
                                    401 	.globl _main
                                    402 	.globl _MAC_Convert
                                    403 	.globl _ADC_read
                                    404 	.globl _SYSCLK_INIT
                                    405 	.globl _Timer_Init
                                    406 	.globl _UART_Init
                                    407 	.globl _Port_IO_Init
                                    408 	.globl _DAC_INIT
                                    409 ;--------------------------------------------------------
                                    410 ; special function registers
                                    411 ;--------------------------------------------------------
                                    412 	.area RSEG    (ABS,DATA)
      000000                        413 	.org 0x0000
                           000080   414 G$P0$0$0 == 0x0080
                           000080   415 _P0	=	0x0080
                           000081   416 G$SP$0$0 == 0x0081
                           000081   417 _SP	=	0x0081
                           000082   418 G$DPL$0$0 == 0x0082
                           000082   419 _DPL	=	0x0082
                           000083   420 G$DPH$0$0 == 0x0083
                           000083   421 _DPH	=	0x0083
                           000084   422 G$SFRPAGE$0$0 == 0x0084
                           000084   423 _SFRPAGE	=	0x0084
                           000085   424 G$SFRNEXT$0$0 == 0x0085
                           000085   425 _SFRNEXT	=	0x0085
                           000086   426 G$SFRLAST$0$0 == 0x0086
                           000086   427 _SFRLAST	=	0x0086
                           000087   428 G$PCON$0$0 == 0x0087
                           000087   429 _PCON	=	0x0087
                           000090   430 G$P1$0$0 == 0x0090
                           000090   431 _P1	=	0x0090
                           0000A0   432 G$P2$0$0 == 0x00a0
                           0000A0   433 _P2	=	0x00a0
                           0000A8   434 G$IE$0$0 == 0x00a8
                           0000A8   435 _IE	=	0x00a8
                           0000B0   436 G$P3$0$0 == 0x00b0
                           0000B0   437 _P3	=	0x00b0
                           0000B1   438 G$PSBANK$0$0 == 0x00b1
                           0000B1   439 _PSBANK	=	0x00b1
                           0000B8   440 G$IP$0$0 == 0x00b8
                           0000B8   441 _IP	=	0x00b8
                           0000D0   442 G$PSW$0$0 == 0x00d0
                           0000D0   443 _PSW	=	0x00d0
                           0000E0   444 G$ACC$0$0 == 0x00e0
                           0000E0   445 _ACC	=	0x00e0
                           0000E6   446 G$EIE1$0$0 == 0x00e6
                           0000E6   447 _EIE1	=	0x00e6
                           0000E7   448 G$EIE2$0$0 == 0x00e7
                           0000E7   449 _EIE2	=	0x00e7
                           0000F0   450 G$B$0$0 == 0x00f0
                           0000F0   451 _B	=	0x00f0
                           0000F6   452 G$EIP1$0$0 == 0x00f6
                           0000F6   453 _EIP1	=	0x00f6
                           0000F7   454 G$EIP2$0$0 == 0x00f7
                           0000F7   455 _EIP2	=	0x00f7
                           0000FF   456 G$WDTCN$0$0 == 0x00ff
                           0000FF   457 _WDTCN	=	0x00ff
                           000088   458 G$TCON$0$0 == 0x0088
                           000088   459 _TCON	=	0x0088
                           000089   460 G$TMOD$0$0 == 0x0089
                           000089   461 _TMOD	=	0x0089
                           00008A   462 G$TL0$0$0 == 0x008a
                           00008A   463 _TL0	=	0x008a
                           00008B   464 G$TL1$0$0 == 0x008b
                           00008B   465 _TL1	=	0x008b
                           00008C   466 G$TH0$0$0 == 0x008c
                           00008C   467 _TH0	=	0x008c
                           00008D   468 G$TH1$0$0 == 0x008d
                           00008D   469 _TH1	=	0x008d
                           00008E   470 G$CKCON$0$0 == 0x008e
                           00008E   471 _CKCON	=	0x008e
                           00008F   472 G$PSCTL$0$0 == 0x008f
                           00008F   473 _PSCTL	=	0x008f
                           000091   474 G$SSTA0$0$0 == 0x0091
                           000091   475 _SSTA0	=	0x0091
                           000098   476 G$SCON0$0$0 == 0x0098
                           000098   477 _SCON0	=	0x0098
                           000098   478 G$SCON$0$0 == 0x0098
                           000098   479 _SCON	=	0x0098
                           000099   480 G$SBUF0$0$0 == 0x0099
                           000099   481 _SBUF0	=	0x0099
                           000099   482 G$SBUF$0$0 == 0x0099
                           000099   483 _SBUF	=	0x0099
                           00009A   484 G$SPI0CFG$0$0 == 0x009a
                           00009A   485 _SPI0CFG	=	0x009a
                           00009B   486 G$SPI0DAT$0$0 == 0x009b
                           00009B   487 _SPI0DAT	=	0x009b
                           00009D   488 G$SPI0CKR$0$0 == 0x009d
                           00009D   489 _SPI0CKR	=	0x009d
                           0000A1   490 G$EMI0TC$0$0 == 0x00a1
                           0000A1   491 _EMI0TC	=	0x00a1
                           0000A2   492 G$EMI0CN$0$0 == 0x00a2
                           0000A2   493 _EMI0CN	=	0x00a2
                           0000A2   494 G$_XPAGE$0$0 == 0x00a2
                           0000A2   495 __XPAGE	=	0x00a2
                           0000A3   496 G$EMI0CF$0$0 == 0x00a3
                           0000A3   497 _EMI0CF	=	0x00a3
                           0000A9   498 G$SADDR0$0$0 == 0x00a9
                           0000A9   499 _SADDR0	=	0x00a9
                           0000B7   500 G$FLSCL$0$0 == 0x00b7
                           0000B7   501 _FLSCL	=	0x00b7
                           0000B9   502 G$SADEN0$0$0 == 0x00b9
                           0000B9   503 _SADEN0	=	0x00b9
                           0000BA   504 G$AMX0CF$0$0 == 0x00ba
                           0000BA   505 _AMX0CF	=	0x00ba
                           0000BB   506 G$AMX0SL$0$0 == 0x00bb
                           0000BB   507 _AMX0SL	=	0x00bb
                           0000BC   508 G$ADC0CF$0$0 == 0x00bc
                           0000BC   509 _ADC0CF	=	0x00bc
                           0000BE   510 G$ADC0L$0$0 == 0x00be
                           0000BE   511 _ADC0L	=	0x00be
                           0000BF   512 G$ADC0H$0$0 == 0x00bf
                           0000BF   513 _ADC0H	=	0x00bf
                           0000C0   514 G$SMB0CN$0$0 == 0x00c0
                           0000C0   515 _SMB0CN	=	0x00c0
                           0000C1   516 G$SMB0STA$0$0 == 0x00c1
                           0000C1   517 _SMB0STA	=	0x00c1
                           0000C2   518 G$SMB0DAT$0$0 == 0x00c2
                           0000C2   519 _SMB0DAT	=	0x00c2
                           0000C3   520 G$SMB0ADR$0$0 == 0x00c3
                           0000C3   521 _SMB0ADR	=	0x00c3
                           0000C4   522 G$ADC0GTL$0$0 == 0x00c4
                           0000C4   523 _ADC0GTL	=	0x00c4
                           0000C5   524 G$ADC0GTH$0$0 == 0x00c5
                           0000C5   525 _ADC0GTH	=	0x00c5
                           0000C6   526 G$ADC0LTL$0$0 == 0x00c6
                           0000C6   527 _ADC0LTL	=	0x00c6
                           0000C7   528 G$ADC0LTH$0$0 == 0x00c7
                           0000C7   529 _ADC0LTH	=	0x00c7
                           0000C8   530 G$TMR2CN$0$0 == 0x00c8
                           0000C8   531 _TMR2CN	=	0x00c8
                           0000C9   532 G$TMR2CF$0$0 == 0x00c9
                           0000C9   533 _TMR2CF	=	0x00c9
                           0000CA   534 G$RCAP2L$0$0 == 0x00ca
                           0000CA   535 _RCAP2L	=	0x00ca
                           0000CB   536 G$RCAP2H$0$0 == 0x00cb
                           0000CB   537 _RCAP2H	=	0x00cb
                           0000CC   538 G$TMR2L$0$0 == 0x00cc
                           0000CC   539 _TMR2L	=	0x00cc
                           0000CC   540 G$TL2$0$0 == 0x00cc
                           0000CC   541 _TL2	=	0x00cc
                           0000CD   542 G$TMR2H$0$0 == 0x00cd
                           0000CD   543 _TMR2H	=	0x00cd
                           0000CD   544 G$TH2$0$0 == 0x00cd
                           0000CD   545 _TH2	=	0x00cd
                           0000CF   546 G$SMB0CR$0$0 == 0x00cf
                           0000CF   547 _SMB0CR	=	0x00cf
                           0000D1   548 G$REF0CN$0$0 == 0x00d1
                           0000D1   549 _REF0CN	=	0x00d1
                           0000D2   550 G$DAC0L$0$0 == 0x00d2
                           0000D2   551 _DAC0L	=	0x00d2
                           0000D3   552 G$DAC0H$0$0 == 0x00d3
                           0000D3   553 _DAC0H	=	0x00d3
                           0000D4   554 G$DAC0CN$0$0 == 0x00d4
                           0000D4   555 _DAC0CN	=	0x00d4
                           0000D8   556 G$PCA0CN$0$0 == 0x00d8
                           0000D8   557 _PCA0CN	=	0x00d8
                           0000D9   558 G$PCA0MD$0$0 == 0x00d9
                           0000D9   559 _PCA0MD	=	0x00d9
                           0000DA   560 G$PCA0CPM0$0$0 == 0x00da
                           0000DA   561 _PCA0CPM0	=	0x00da
                           0000DB   562 G$PCA0CPM1$0$0 == 0x00db
                           0000DB   563 _PCA0CPM1	=	0x00db
                           0000DC   564 G$PCA0CPM2$0$0 == 0x00dc
                           0000DC   565 _PCA0CPM2	=	0x00dc
                           0000DD   566 G$PCA0CPM3$0$0 == 0x00dd
                           0000DD   567 _PCA0CPM3	=	0x00dd
                           0000DE   568 G$PCA0CPM4$0$0 == 0x00de
                           0000DE   569 _PCA0CPM4	=	0x00de
                           0000DF   570 G$PCA0CPM5$0$0 == 0x00df
                           0000DF   571 _PCA0CPM5	=	0x00df
                           0000E1   572 G$PCA0CPL5$0$0 == 0x00e1
                           0000E1   573 _PCA0CPL5	=	0x00e1
                           0000E2   574 G$PCA0CPH5$0$0 == 0x00e2
                           0000E2   575 _PCA0CPH5	=	0x00e2
                           0000E8   576 G$ADC0CN$0$0 == 0x00e8
                           0000E8   577 _ADC0CN	=	0x00e8
                           0000E9   578 G$PCA0CPL2$0$0 == 0x00e9
                           0000E9   579 _PCA0CPL2	=	0x00e9
                           0000EA   580 G$PCA0CPH2$0$0 == 0x00ea
                           0000EA   581 _PCA0CPH2	=	0x00ea
                           0000EB   582 G$PCA0CPL3$0$0 == 0x00eb
                           0000EB   583 _PCA0CPL3	=	0x00eb
                           0000EC   584 G$PCA0CPH3$0$0 == 0x00ec
                           0000EC   585 _PCA0CPH3	=	0x00ec
                           0000ED   586 G$PCA0CPL4$0$0 == 0x00ed
                           0000ED   587 _PCA0CPL4	=	0x00ed
                           0000EE   588 G$PCA0CPH4$0$0 == 0x00ee
                           0000EE   589 _PCA0CPH4	=	0x00ee
                           0000EF   590 G$RSTSRC$0$0 == 0x00ef
                           0000EF   591 _RSTSRC	=	0x00ef
                           0000F8   592 G$SPI0CN$0$0 == 0x00f8
                           0000F8   593 _SPI0CN	=	0x00f8
                           0000F9   594 G$PCA0L$0$0 == 0x00f9
                           0000F9   595 _PCA0L	=	0x00f9
                           0000FA   596 G$PCA0H$0$0 == 0x00fa
                           0000FA   597 _PCA0H	=	0x00fa
                           0000FB   598 G$PCA0CPL0$0$0 == 0x00fb
                           0000FB   599 _PCA0CPL0	=	0x00fb
                           0000FC   600 G$PCA0CPH0$0$0 == 0x00fc
                           0000FC   601 _PCA0CPH0	=	0x00fc
                           0000FD   602 G$PCA0CPL1$0$0 == 0x00fd
                           0000FD   603 _PCA0CPL1	=	0x00fd
                           0000FE   604 G$PCA0CPH1$0$0 == 0x00fe
                           0000FE   605 _PCA0CPH1	=	0x00fe
                           000088   606 G$CPT0CN$0$0 == 0x0088
                           000088   607 _CPT0CN	=	0x0088
                           000089   608 G$CPT0MD$0$0 == 0x0089
                           000089   609 _CPT0MD	=	0x0089
                           000098   610 G$SCON1$0$0 == 0x0098
                           000098   611 _SCON1	=	0x0098
                           000099   612 G$SBUF1$0$0 == 0x0099
                           000099   613 _SBUF1	=	0x0099
                           0000C8   614 G$TMR3CN$0$0 == 0x00c8
                           0000C8   615 _TMR3CN	=	0x00c8
                           0000C9   616 G$TMR3CF$0$0 == 0x00c9
                           0000C9   617 _TMR3CF	=	0x00c9
                           0000CA   618 G$RCAP3L$0$0 == 0x00ca
                           0000CA   619 _RCAP3L	=	0x00ca
                           0000CB   620 G$RCAP3H$0$0 == 0x00cb
                           0000CB   621 _RCAP3H	=	0x00cb
                           0000CC   622 G$TMR3L$0$0 == 0x00cc
                           0000CC   623 _TMR3L	=	0x00cc
                           0000CD   624 G$TMR3H$0$0 == 0x00cd
                           0000CD   625 _TMR3H	=	0x00cd
                           0000D2   626 G$DAC1L$0$0 == 0x00d2
                           0000D2   627 _DAC1L	=	0x00d2
                           0000D3   628 G$DAC1H$0$0 == 0x00d3
                           0000D3   629 _DAC1H	=	0x00d3
                           0000D4   630 G$DAC1CN$0$0 == 0x00d4
                           0000D4   631 _DAC1CN	=	0x00d4
                           000088   632 G$CPT1CN$0$0 == 0x0088
                           000088   633 _CPT1CN	=	0x0088
                           000089   634 G$CPT1MD$0$0 == 0x0089
                           000089   635 _CPT1MD	=	0x0089
                           0000BA   636 G$AMX2CF$0$0 == 0x00ba
                           0000BA   637 _AMX2CF	=	0x00ba
                           0000BB   638 G$AMX2SL$0$0 == 0x00bb
                           0000BB   639 _AMX2SL	=	0x00bb
                           0000BC   640 G$ADC2CF$0$0 == 0x00bc
                           0000BC   641 _ADC2CF	=	0x00bc
                           0000BE   642 G$ADC2$0$0 == 0x00be
                           0000BE   643 _ADC2	=	0x00be
                           0000C4   644 G$ADC2GT$0$0 == 0x00c4
                           0000C4   645 _ADC2GT	=	0x00c4
                           0000C6   646 G$ADC2LT$0$0 == 0x00c6
                           0000C6   647 _ADC2LT	=	0x00c6
                           0000C8   648 G$TMR4CN$0$0 == 0x00c8
                           0000C8   649 _TMR4CN	=	0x00c8
                           0000C9   650 G$TMR4CF$0$0 == 0x00c9
                           0000C9   651 _TMR4CF	=	0x00c9
                           0000CA   652 G$RCAP4L$0$0 == 0x00ca
                           0000CA   653 _RCAP4L	=	0x00ca
                           0000CB   654 G$RCAP4H$0$0 == 0x00cb
                           0000CB   655 _RCAP4H	=	0x00cb
                           0000CC   656 G$TMR4L$0$0 == 0x00cc
                           0000CC   657 _TMR4L	=	0x00cc
                           0000CD   658 G$TMR4H$0$0 == 0x00cd
                           0000CD   659 _TMR4H	=	0x00cd
                           0000E8   660 G$ADC2CN$0$0 == 0x00e8
                           0000E8   661 _ADC2CN	=	0x00e8
                           000091   662 G$MAC0BL$0$0 == 0x0091
                           000091   663 _MAC0BL	=	0x0091
                           000092   664 G$MAC0BH$0$0 == 0x0092
                           000092   665 _MAC0BH	=	0x0092
                           000093   666 G$MAC0ACC0$0$0 == 0x0093
                           000093   667 _MAC0ACC0	=	0x0093
                           000094   668 G$MAC0ACC1$0$0 == 0x0094
                           000094   669 _MAC0ACC1	=	0x0094
                           000095   670 G$MAC0ACC2$0$0 == 0x0095
                           000095   671 _MAC0ACC2	=	0x0095
                           000096   672 G$MAC0ACC3$0$0 == 0x0096
                           000096   673 _MAC0ACC3	=	0x0096
                           000097   674 G$MAC0OVR$0$0 == 0x0097
                           000097   675 _MAC0OVR	=	0x0097
                           0000C0   676 G$MAC0STA$0$0 == 0x00c0
                           0000C0   677 _MAC0STA	=	0x00c0
                           0000C1   678 G$MAC0AL$0$0 == 0x00c1
                           0000C1   679 _MAC0AL	=	0x00c1
                           0000C2   680 G$MAC0AH$0$0 == 0x00c2
                           0000C2   681 _MAC0AH	=	0x00c2
                           0000C3   682 G$MAC0CF$0$0 == 0x00c3
                           0000C3   683 _MAC0CF	=	0x00c3
                           0000CE   684 G$MAC0RNDL$0$0 == 0x00ce
                           0000CE   685 _MAC0RNDL	=	0x00ce
                           0000CF   686 G$MAC0RNDH$0$0 == 0x00cf
                           0000CF   687 _MAC0RNDH	=	0x00cf
                           000088   688 G$FLSTAT$0$0 == 0x0088
                           000088   689 _FLSTAT	=	0x0088
                           000089   690 G$PLL0CN$0$0 == 0x0089
                           000089   691 _PLL0CN	=	0x0089
                           00008A   692 G$OSCICN$0$0 == 0x008a
                           00008A   693 _OSCICN	=	0x008a
                           00008B   694 G$OSCICL$0$0 == 0x008b
                           00008B   695 _OSCICL	=	0x008b
                           00008C   696 G$OSCXCN$0$0 == 0x008c
                           00008C   697 _OSCXCN	=	0x008c
                           00008D   698 G$PLL0DIV$0$0 == 0x008d
                           00008D   699 _PLL0DIV	=	0x008d
                           00008E   700 G$PLL0MUL$0$0 == 0x008e
                           00008E   701 _PLL0MUL	=	0x008e
                           00008F   702 G$PLL0FLT$0$0 == 0x008f
                           00008F   703 _PLL0FLT	=	0x008f
                           000096   704 G$SFRPGCN$0$0 == 0x0096
                           000096   705 _SFRPGCN	=	0x0096
                           000097   706 G$CLKSEL$0$0 == 0x0097
                           000097   707 _CLKSEL	=	0x0097
                           00009A   708 G$CCH0MA$0$0 == 0x009a
                           00009A   709 _CCH0MA	=	0x009a
                           00009C   710 G$P4MDOUT$0$0 == 0x009c
                           00009C   711 _P4MDOUT	=	0x009c
                           00009D   712 G$P5MDOUT$0$0 == 0x009d
                           00009D   713 _P5MDOUT	=	0x009d
                           00009E   714 G$P6MDOUT$0$0 == 0x009e
                           00009E   715 _P6MDOUT	=	0x009e
                           00009F   716 G$P7MDOUT$0$0 == 0x009f
                           00009F   717 _P7MDOUT	=	0x009f
                           0000A1   718 G$CCH0CN$0$0 == 0x00a1
                           0000A1   719 _CCH0CN	=	0x00a1
                           0000A2   720 G$CCH0TN$0$0 == 0x00a2
                           0000A2   721 _CCH0TN	=	0x00a2
                           0000A3   722 G$CCH0LC$0$0 == 0x00a3
                           0000A3   723 _CCH0LC	=	0x00a3
                           0000A4   724 G$P0MDOUT$0$0 == 0x00a4
                           0000A4   725 _P0MDOUT	=	0x00a4
                           0000A5   726 G$P1MDOUT$0$0 == 0x00a5
                           0000A5   727 _P1MDOUT	=	0x00a5
                           0000A6   728 G$P2MDOUT$0$0 == 0x00a6
                           0000A6   729 _P2MDOUT	=	0x00a6
                           0000A7   730 G$P3MDOUT$0$0 == 0x00a7
                           0000A7   731 _P3MDOUT	=	0x00a7
                           0000AD   732 G$P1MDIN$0$0 == 0x00ad
                           0000AD   733 _P1MDIN	=	0x00ad
                           0000B7   734 G$FLACL$0$0 == 0x00b7
                           0000B7   735 _FLACL	=	0x00b7
                           0000C8   736 G$P4$0$0 == 0x00c8
                           0000C8   737 _P4	=	0x00c8
                           0000D8   738 G$P5$0$0 == 0x00d8
                           0000D8   739 _P5	=	0x00d8
                           0000E1   740 G$XBR0$0$0 == 0x00e1
                           0000E1   741 _XBR0	=	0x00e1
                           0000E2   742 G$XBR1$0$0 == 0x00e2
                           0000E2   743 _XBR1	=	0x00e2
                           0000E3   744 G$XBR2$0$0 == 0x00e3
                           0000E3   745 _XBR2	=	0x00e3
                           0000E8   746 G$P6$0$0 == 0x00e8
                           0000E8   747 _P6	=	0x00e8
                           0000F8   748 G$P7$0$0 == 0x00f8
                           0000F8   749 _P7	=	0x00f8
                           008C8A   750 G$TMR0$0$0 == 0x8c8a
                           008C8A   751 _TMR0	=	0x8c8a
                           008D8B   752 G$TMR1$0$0 == 0x8d8b
                           008D8B   753 _TMR1	=	0x8d8b
                           00CDCC   754 G$TMR2$0$0 == 0xcdcc
                           00CDCC   755 _TMR2	=	0xcdcc
                           00CBCA   756 G$RCAP2$0$0 == 0xcbca
                           00CBCA   757 _RCAP2	=	0xcbca
                           00BFBE   758 G$ADC0$0$0 == 0xbfbe
                           00BFBE   759 _ADC0	=	0xbfbe
                           00C5C4   760 G$ADC0GT$0$0 == 0xc5c4
                           00C5C4   761 _ADC0GT	=	0xc5c4
                           00C7C6   762 G$ADC0LT$0$0 == 0xc7c6
                           00C7C6   763 _ADC0LT	=	0xc7c6
                           00D3D2   764 G$DAC0$0$0 == 0xd3d2
                           00D3D2   765 _DAC0	=	0xd3d2
                           00FAF9   766 G$PCA0$0$0 == 0xfaf9
                           00FAF9   767 _PCA0	=	0xfaf9
                           00FCFB   768 G$PCA0CP0$0$0 == 0xfcfb
                           00FCFB   769 _PCA0CP0	=	0xfcfb
                           00FEFD   770 G$PCA0CP1$0$0 == 0xfefd
                           00FEFD   771 _PCA0CP1	=	0xfefd
                           00EAE9   772 G$PCA0CP2$0$0 == 0xeae9
                           00EAE9   773 _PCA0CP2	=	0xeae9
                           00ECEB   774 G$PCA0CP3$0$0 == 0xeceb
                           00ECEB   775 _PCA0CP3	=	0xeceb
                           00EEED   776 G$PCA0CP4$0$0 == 0xeeed
                           00EEED   777 _PCA0CP4	=	0xeeed
                           00E2E1   778 G$PCA0CP5$0$0 == 0xe2e1
                           00E2E1   779 _PCA0CP5	=	0xe2e1
                           00CDCC   780 G$TMR3$0$0 == 0xcdcc
                           00CDCC   781 _TMR3	=	0xcdcc
                           00CBCA   782 G$RCAP3$0$0 == 0xcbca
                           00CBCA   783 _RCAP3	=	0xcbca
                           00D3D2   784 G$DAC1$0$0 == 0xd3d2
                           00D3D2   785 _DAC1	=	0xd3d2
                           00CDCC   786 G$TMR4$0$0 == 0xcdcc
                           00CDCC   787 _TMR4	=	0xcdcc
                           00CBCA   788 G$RCAP4$0$0 == 0xcbca
                           00CBCA   789 _RCAP4	=	0xcbca
                           00C2C1   790 G$MAC0A$0$0 == 0xc2c1
                           00C2C1   791 _MAC0A	=	0xc2c1
                           96959493   792 G$MAC0ACC$0$0 == 0x96959493
                           96959493   793 _MAC0ACC	=	0x96959493
                           00CFCE   794 G$MAC0RND$0$0 == 0xcfce
                           00CFCE   795 _MAC0RND	=	0xcfce
                                    796 ;--------------------------------------------------------
                                    797 ; special function bits
                                    798 ;--------------------------------------------------------
                                    799 	.area RSEG    (ABS,DATA)
      000000                        800 	.org 0x0000
                           000080   801 G$P0_0$0$0 == 0x0080
                           000080   802 _P0_0	=	0x0080
                           000081   803 G$P0_1$0$0 == 0x0081
                           000081   804 _P0_1	=	0x0081
                           000082   805 G$P0_2$0$0 == 0x0082
                           000082   806 _P0_2	=	0x0082
                           000083   807 G$P0_3$0$0 == 0x0083
                           000083   808 _P0_3	=	0x0083
                           000084   809 G$P0_4$0$0 == 0x0084
                           000084   810 _P0_4	=	0x0084
                           000085   811 G$P0_5$0$0 == 0x0085
                           000085   812 _P0_5	=	0x0085
                           000086   813 G$P0_6$0$0 == 0x0086
                           000086   814 _P0_6	=	0x0086
                           000087   815 G$P0_7$0$0 == 0x0087
                           000087   816 _P0_7	=	0x0087
                           000088   817 G$IT0$0$0 == 0x0088
                           000088   818 _IT0	=	0x0088
                           000089   819 G$IE0$0$0 == 0x0089
                           000089   820 _IE0	=	0x0089
                           00008A   821 G$IT1$0$0 == 0x008a
                           00008A   822 _IT1	=	0x008a
                           00008B   823 G$IE1$0$0 == 0x008b
                           00008B   824 _IE1	=	0x008b
                           00008C   825 G$TR0$0$0 == 0x008c
                           00008C   826 _TR0	=	0x008c
                           00008D   827 G$TF0$0$0 == 0x008d
                           00008D   828 _TF0	=	0x008d
                           00008E   829 G$TR1$0$0 == 0x008e
                           00008E   830 _TR1	=	0x008e
                           00008F   831 G$TF1$0$0 == 0x008f
                           00008F   832 _TF1	=	0x008f
                           000088   833 G$CP0HYN0$0$0 == 0x0088
                           000088   834 _CP0HYN0	=	0x0088
                           000089   835 G$CP0HYN1$0$0 == 0x0089
                           000089   836 _CP0HYN1	=	0x0089
                           00008A   837 G$CP0HYP0$0$0 == 0x008a
                           00008A   838 _CP0HYP0	=	0x008a
                           00008B   839 G$CP0HYP1$0$0 == 0x008b
                           00008B   840 _CP0HYP1	=	0x008b
                           00008C   841 G$CP0FIF$0$0 == 0x008c
                           00008C   842 _CP0FIF	=	0x008c
                           00008D   843 G$CP0RIF$0$0 == 0x008d
                           00008D   844 _CP0RIF	=	0x008d
                           00008E   845 G$CP0OUT$0$0 == 0x008e
                           00008E   846 _CP0OUT	=	0x008e
                           00008F   847 G$CP0EN$0$0 == 0x008f
                           00008F   848 _CP0EN	=	0x008f
                           000088   849 G$CP1HYN0$0$0 == 0x0088
                           000088   850 _CP1HYN0	=	0x0088
                           000089   851 G$CP1HYN1$0$0 == 0x0089
                           000089   852 _CP1HYN1	=	0x0089
                           00008A   853 G$CP1HYP0$0$0 == 0x008a
                           00008A   854 _CP1HYP0	=	0x008a
                           00008B   855 G$CP1HYP1$0$0 == 0x008b
                           00008B   856 _CP1HYP1	=	0x008b
                           00008C   857 G$CP1FIF$0$0 == 0x008c
                           00008C   858 _CP1FIF	=	0x008c
                           00008D   859 G$CP1RIF$0$0 == 0x008d
                           00008D   860 _CP1RIF	=	0x008d
                           00008E   861 G$CP1OUT$0$0 == 0x008e
                           00008E   862 _CP1OUT	=	0x008e
                           00008F   863 G$CP1EN$0$0 == 0x008f
                           00008F   864 _CP1EN	=	0x008f
                           000088   865 G$FLHBUSY$0$0 == 0x0088
                           000088   866 _FLHBUSY	=	0x0088
                           000090   867 G$P1_0$0$0 == 0x0090
                           000090   868 _P1_0	=	0x0090
                           000091   869 G$P1_1$0$0 == 0x0091
                           000091   870 _P1_1	=	0x0091
                           000092   871 G$P1_2$0$0 == 0x0092
                           000092   872 _P1_2	=	0x0092
                           000093   873 G$P1_3$0$0 == 0x0093
                           000093   874 _P1_3	=	0x0093
                           000094   875 G$P1_4$0$0 == 0x0094
                           000094   876 _P1_4	=	0x0094
                           000095   877 G$P1_5$0$0 == 0x0095
                           000095   878 _P1_5	=	0x0095
                           000096   879 G$P1_6$0$0 == 0x0096
                           000096   880 _P1_6	=	0x0096
                           000097   881 G$P1_7$0$0 == 0x0097
                           000097   882 _P1_7	=	0x0097
                           000098   883 G$RI0$0$0 == 0x0098
                           000098   884 _RI0	=	0x0098
                           000098   885 G$RI$0$0 == 0x0098
                           000098   886 _RI	=	0x0098
                           000099   887 G$TI0$0$0 == 0x0099
                           000099   888 _TI0	=	0x0099
                           000099   889 G$TI$0$0 == 0x0099
                           000099   890 _TI	=	0x0099
                           00009A   891 G$RB80$0$0 == 0x009a
                           00009A   892 _RB80	=	0x009a
                           00009B   893 G$TB80$0$0 == 0x009b
                           00009B   894 _TB80	=	0x009b
                           00009C   895 G$REN0$0$0 == 0x009c
                           00009C   896 _REN0	=	0x009c
                           00009C   897 G$REN$0$0 == 0x009c
                           00009C   898 _REN	=	0x009c
                           00009D   899 G$SM20$0$0 == 0x009d
                           00009D   900 _SM20	=	0x009d
                           00009E   901 G$SM10$0$0 == 0x009e
                           00009E   902 _SM10	=	0x009e
                           00009F   903 G$SM00$0$0 == 0x009f
                           00009F   904 _SM00	=	0x009f
                           000098   905 G$RI1$0$0 == 0x0098
                           000098   906 _RI1	=	0x0098
                           000099   907 G$TI1$0$0 == 0x0099
                           000099   908 _TI1	=	0x0099
                           00009A   909 G$RB81$0$0 == 0x009a
                           00009A   910 _RB81	=	0x009a
                           00009B   911 G$TB81$0$0 == 0x009b
                           00009B   912 _TB81	=	0x009b
                           00009C   913 G$REN1$0$0 == 0x009c
                           00009C   914 _REN1	=	0x009c
                           00009D   915 G$MCE1$0$0 == 0x009d
                           00009D   916 _MCE1	=	0x009d
                           00009F   917 G$S1MODE$0$0 == 0x009f
                           00009F   918 _S1MODE	=	0x009f
                           0000A0   919 G$P2_0$0$0 == 0x00a0
                           0000A0   920 _P2_0	=	0x00a0
                           0000A1   921 G$P2_1$0$0 == 0x00a1
                           0000A1   922 _P2_1	=	0x00a1
                           0000A2   923 G$P2_2$0$0 == 0x00a2
                           0000A2   924 _P2_2	=	0x00a2
                           0000A3   925 G$P2_3$0$0 == 0x00a3
                           0000A3   926 _P2_3	=	0x00a3
                           0000A4   927 G$P2_4$0$0 == 0x00a4
                           0000A4   928 _P2_4	=	0x00a4
                           0000A5   929 G$P2_5$0$0 == 0x00a5
                           0000A5   930 _P2_5	=	0x00a5
                           0000A6   931 G$P2_6$0$0 == 0x00a6
                           0000A6   932 _P2_6	=	0x00a6
                           0000A7   933 G$P2_7$0$0 == 0x00a7
                           0000A7   934 _P2_7	=	0x00a7
                           0000A8   935 G$EX0$0$0 == 0x00a8
                           0000A8   936 _EX0	=	0x00a8
                           0000A9   937 G$ET0$0$0 == 0x00a9
                           0000A9   938 _ET0	=	0x00a9
                           0000AA   939 G$EX1$0$0 == 0x00aa
                           0000AA   940 _EX1	=	0x00aa
                           0000AB   941 G$ET1$0$0 == 0x00ab
                           0000AB   942 _ET1	=	0x00ab
                           0000AC   943 G$ES0$0$0 == 0x00ac
                           0000AC   944 _ES0	=	0x00ac
                           0000AC   945 G$ES$0$0 == 0x00ac
                           0000AC   946 _ES	=	0x00ac
                           0000AD   947 G$ET2$0$0 == 0x00ad
                           0000AD   948 _ET2	=	0x00ad
                           0000AF   949 G$EA$0$0 == 0x00af
                           0000AF   950 _EA	=	0x00af
                           0000B0   951 G$P3_0$0$0 == 0x00b0
                           0000B0   952 _P3_0	=	0x00b0
                           0000B1   953 G$P3_1$0$0 == 0x00b1
                           0000B1   954 _P3_1	=	0x00b1
                           0000B2   955 G$P3_2$0$0 == 0x00b2
                           0000B2   956 _P3_2	=	0x00b2
                           0000B3   957 G$P3_3$0$0 == 0x00b3
                           0000B3   958 _P3_3	=	0x00b3
                           0000B4   959 G$P3_4$0$0 == 0x00b4
                           0000B4   960 _P3_4	=	0x00b4
                           0000B5   961 G$P3_5$0$0 == 0x00b5
                           0000B5   962 _P3_5	=	0x00b5
                           0000B6   963 G$P3_6$0$0 == 0x00b6
                           0000B6   964 _P3_6	=	0x00b6
                           0000B7   965 G$P3_7$0$0 == 0x00b7
                           0000B7   966 _P3_7	=	0x00b7
                           0000B8   967 G$PX0$0$0 == 0x00b8
                           0000B8   968 _PX0	=	0x00b8
                           0000B9   969 G$PT0$0$0 == 0x00b9
                           0000B9   970 _PT0	=	0x00b9
                           0000BA   971 G$PX1$0$0 == 0x00ba
                           0000BA   972 _PX1	=	0x00ba
                           0000BB   973 G$PT1$0$0 == 0x00bb
                           0000BB   974 _PT1	=	0x00bb
                           0000BC   975 G$PS0$0$0 == 0x00bc
                           0000BC   976 _PS0	=	0x00bc
                           0000BC   977 G$PS$0$0 == 0x00bc
                           0000BC   978 _PS	=	0x00bc
                           0000BD   979 G$PT2$0$0 == 0x00bd
                           0000BD   980 _PT2	=	0x00bd
                           0000C0   981 G$SMBTOE$0$0 == 0x00c0
                           0000C0   982 _SMBTOE	=	0x00c0
                           0000C1   983 G$SMBFTE$0$0 == 0x00c1
                           0000C1   984 _SMBFTE	=	0x00c1
                           0000C2   985 G$AA$0$0 == 0x00c2
                           0000C2   986 _AA	=	0x00c2
                           0000C3   987 G$SI$0$0 == 0x00c3
                           0000C3   988 _SI	=	0x00c3
                           0000C4   989 G$STO$0$0 == 0x00c4
                           0000C4   990 _STO	=	0x00c4
                           0000C5   991 G$STA$0$0 == 0x00c5
                           0000C5   992 _STA	=	0x00c5
                           0000C6   993 G$ENSMB$0$0 == 0x00c6
                           0000C6   994 _ENSMB	=	0x00c6
                           0000C7   995 G$BUSY$0$0 == 0x00c7
                           0000C7   996 _BUSY	=	0x00c7
                           0000C0   997 G$MAC0N$0$0 == 0x00c0
                           0000C0   998 _MAC0N	=	0x00c0
                           0000C1   999 G$MAC0SO$0$0 == 0x00c1
                           0000C1  1000 _MAC0SO	=	0x00c1
                           0000C2  1001 G$MAC0Z$0$0 == 0x00c2
                           0000C2  1002 _MAC0Z	=	0x00c2
                           0000C3  1003 G$MAC0HO$0$0 == 0x00c3
                           0000C3  1004 _MAC0HO	=	0x00c3
                           0000C8  1005 G$CPRL2$0$0 == 0x00c8
                           0000C8  1006 _CPRL2	=	0x00c8
                           0000C9  1007 G$CT2$0$0 == 0x00c9
                           0000C9  1008 _CT2	=	0x00c9
                           0000CA  1009 G$TR2$0$0 == 0x00ca
                           0000CA  1010 _TR2	=	0x00ca
                           0000CB  1011 G$EXEN2$0$0 == 0x00cb
                           0000CB  1012 _EXEN2	=	0x00cb
                           0000CE  1013 G$EXF2$0$0 == 0x00ce
                           0000CE  1014 _EXF2	=	0x00ce
                           0000CF  1015 G$TF2$0$0 == 0x00cf
                           0000CF  1016 _TF2	=	0x00cf
                           0000C8  1017 G$CPRL3$0$0 == 0x00c8
                           0000C8  1018 _CPRL3	=	0x00c8
                           0000C9  1019 G$CT3$0$0 == 0x00c9
                           0000C9  1020 _CT3	=	0x00c9
                           0000CA  1021 G$TR3$0$0 == 0x00ca
                           0000CA  1022 _TR3	=	0x00ca
                           0000CB  1023 G$EXEN3$0$0 == 0x00cb
                           0000CB  1024 _EXEN3	=	0x00cb
                           0000CE  1025 G$EXF3$0$0 == 0x00ce
                           0000CE  1026 _EXF3	=	0x00ce
                           0000CF  1027 G$TF3$0$0 == 0x00cf
                           0000CF  1028 _TF3	=	0x00cf
                           0000C8  1029 G$CPRL4$0$0 == 0x00c8
                           0000C8  1030 _CPRL4	=	0x00c8
                           0000C9  1031 G$CT4$0$0 == 0x00c9
                           0000C9  1032 _CT4	=	0x00c9
                           0000CA  1033 G$TR4$0$0 == 0x00ca
                           0000CA  1034 _TR4	=	0x00ca
                           0000CB  1035 G$EXEN4$0$0 == 0x00cb
                           0000CB  1036 _EXEN4	=	0x00cb
                           0000CE  1037 G$EXF4$0$0 == 0x00ce
                           0000CE  1038 _EXF4	=	0x00ce
                           0000CF  1039 G$TF4$0$0 == 0x00cf
                           0000CF  1040 _TF4	=	0x00cf
                           0000C8  1041 G$P4_0$0$0 == 0x00c8
                           0000C8  1042 _P4_0	=	0x00c8
                           0000C9  1043 G$P4_1$0$0 == 0x00c9
                           0000C9  1044 _P4_1	=	0x00c9
                           0000CA  1045 G$P4_2$0$0 == 0x00ca
                           0000CA  1046 _P4_2	=	0x00ca
                           0000CB  1047 G$P4_3$0$0 == 0x00cb
                           0000CB  1048 _P4_3	=	0x00cb
                           0000CC  1049 G$P4_4$0$0 == 0x00cc
                           0000CC  1050 _P4_4	=	0x00cc
                           0000CD  1051 G$P4_5$0$0 == 0x00cd
                           0000CD  1052 _P4_5	=	0x00cd
                           0000CE  1053 G$P4_6$0$0 == 0x00ce
                           0000CE  1054 _P4_6	=	0x00ce
                           0000CF  1055 G$P4_7$0$0 == 0x00cf
                           0000CF  1056 _P4_7	=	0x00cf
                           0000D0  1057 G$P$0$0 == 0x00d0
                           0000D0  1058 _P	=	0x00d0
                           0000D1  1059 G$F1$0$0 == 0x00d1
                           0000D1  1060 _F1	=	0x00d1
                           0000D2  1061 G$OV$0$0 == 0x00d2
                           0000D2  1062 _OV	=	0x00d2
                           0000D3  1063 G$RS0$0$0 == 0x00d3
                           0000D3  1064 _RS0	=	0x00d3
                           0000D4  1065 G$RS1$0$0 == 0x00d4
                           0000D4  1066 _RS1	=	0x00d4
                           0000D5  1067 G$F0$0$0 == 0x00d5
                           0000D5  1068 _F0	=	0x00d5
                           0000D6  1069 G$AC$0$0 == 0x00d6
                           0000D6  1070 _AC	=	0x00d6
                           0000D7  1071 G$CY$0$0 == 0x00d7
                           0000D7  1072 _CY	=	0x00d7
                           0000D8  1073 G$CCF0$0$0 == 0x00d8
                           0000D8  1074 _CCF0	=	0x00d8
                           0000D9  1075 G$CCF1$0$0 == 0x00d9
                           0000D9  1076 _CCF1	=	0x00d9
                           0000DA  1077 G$CCF2$0$0 == 0x00da
                           0000DA  1078 _CCF2	=	0x00da
                           0000DB  1079 G$CCF3$0$0 == 0x00db
                           0000DB  1080 _CCF3	=	0x00db
                           0000DC  1081 G$CCF4$0$0 == 0x00dc
                           0000DC  1082 _CCF4	=	0x00dc
                           0000DD  1083 G$CCF5$0$0 == 0x00dd
                           0000DD  1084 _CCF5	=	0x00dd
                           0000DE  1085 G$CR$0$0 == 0x00de
                           0000DE  1086 _CR	=	0x00de
                           0000DF  1087 G$CF$0$0 == 0x00df
                           0000DF  1088 _CF	=	0x00df
                           0000D8  1089 G$P5_0$0$0 == 0x00d8
                           0000D8  1090 _P5_0	=	0x00d8
                           0000D9  1091 G$P5_1$0$0 == 0x00d9
                           0000D9  1092 _P5_1	=	0x00d9
                           0000DA  1093 G$P5_2$0$0 == 0x00da
                           0000DA  1094 _P5_2	=	0x00da
                           0000DB  1095 G$P5_3$0$0 == 0x00db
                           0000DB  1096 _P5_3	=	0x00db
                           0000DC  1097 G$P5_4$0$0 == 0x00dc
                           0000DC  1098 _P5_4	=	0x00dc
                           0000DD  1099 G$P5_5$0$0 == 0x00dd
                           0000DD  1100 _P5_5	=	0x00dd
                           0000DE  1101 G$P5_6$0$0 == 0x00de
                           0000DE  1102 _P5_6	=	0x00de
                           0000DF  1103 G$P5_7$0$0 == 0x00df
                           0000DF  1104 _P5_7	=	0x00df
                           0000E8  1105 G$AD0LJST$0$0 == 0x00e8
                           0000E8  1106 _AD0LJST	=	0x00e8
                           0000E9  1107 G$AD0WINT$0$0 == 0x00e9
                           0000E9  1108 _AD0WINT	=	0x00e9
                           0000EA  1109 G$AD0CM0$0$0 == 0x00ea
                           0000EA  1110 _AD0CM0	=	0x00ea
                           0000EB  1111 G$AD0CM1$0$0 == 0x00eb
                           0000EB  1112 _AD0CM1	=	0x00eb
                           0000EC  1113 G$AD0BUSY$0$0 == 0x00ec
                           0000EC  1114 _AD0BUSY	=	0x00ec
                           0000ED  1115 G$AD0INT$0$0 == 0x00ed
                           0000ED  1116 _AD0INT	=	0x00ed
                           0000EE  1117 G$AD0TM$0$0 == 0x00ee
                           0000EE  1118 _AD0TM	=	0x00ee
                           0000EF  1119 G$AD0EN$0$0 == 0x00ef
                           0000EF  1120 _AD0EN	=	0x00ef
                           0000E8  1121 G$AD2WINT$0$0 == 0x00e8
                           0000E8  1122 _AD2WINT	=	0x00e8
                           0000E9  1123 G$AD2CM0$0$0 == 0x00e9
                           0000E9  1124 _AD2CM0	=	0x00e9
                           0000EA  1125 G$AD2CM1$0$0 == 0x00ea
                           0000EA  1126 _AD2CM1	=	0x00ea
                           0000EB  1127 G$AD2CM2$0$0 == 0x00eb
                           0000EB  1128 _AD2CM2	=	0x00eb
                           0000EC  1129 G$AD2BUSY$0$0 == 0x00ec
                           0000EC  1130 _AD2BUSY	=	0x00ec
                           0000ED  1131 G$AD2INT$0$0 == 0x00ed
                           0000ED  1132 _AD2INT	=	0x00ed
                           0000EE  1133 G$AD2TM$0$0 == 0x00ee
                           0000EE  1134 _AD2TM	=	0x00ee
                           0000EF  1135 G$AD2EN$0$0 == 0x00ef
                           0000EF  1136 _AD2EN	=	0x00ef
                           0000E8  1137 G$P6_0$0$0 == 0x00e8
                           0000E8  1138 _P6_0	=	0x00e8
                           0000E9  1139 G$P6_1$0$0 == 0x00e9
                           0000E9  1140 _P6_1	=	0x00e9
                           0000EA  1141 G$P6_2$0$0 == 0x00ea
                           0000EA  1142 _P6_2	=	0x00ea
                           0000EB  1143 G$P6_3$0$0 == 0x00eb
                           0000EB  1144 _P6_3	=	0x00eb
                           0000EC  1145 G$P6_4$0$0 == 0x00ec
                           0000EC  1146 _P6_4	=	0x00ec
                           0000ED  1147 G$P6_5$0$0 == 0x00ed
                           0000ED  1148 _P6_5	=	0x00ed
                           0000EE  1149 G$P6_6$0$0 == 0x00ee
                           0000EE  1150 _P6_6	=	0x00ee
                           0000EF  1151 G$P6_7$0$0 == 0x00ef
                           0000EF  1152 _P6_7	=	0x00ef
                           0000F8  1153 G$SPIEN$0$0 == 0x00f8
                           0000F8  1154 _SPIEN	=	0x00f8
                           0000F9  1155 G$TXBMT$0$0 == 0x00f9
                           0000F9  1156 _TXBMT	=	0x00f9
                           0000FA  1157 G$NSSMD0$0$0 == 0x00fa
                           0000FA  1158 _NSSMD0	=	0x00fa
                           0000FB  1159 G$NSSMD1$0$0 == 0x00fb
                           0000FB  1160 _NSSMD1	=	0x00fb
                           0000FC  1161 G$RXOVRN$0$0 == 0x00fc
                           0000FC  1162 _RXOVRN	=	0x00fc
                           0000FD  1163 G$MODF$0$0 == 0x00fd
                           0000FD  1164 _MODF	=	0x00fd
                           0000FE  1165 G$WCOL$0$0 == 0x00fe
                           0000FE  1166 _WCOL	=	0x00fe
                           0000FF  1167 G$SPIF$0$0 == 0x00ff
                           0000FF  1168 _SPIF	=	0x00ff
                           0000F8  1169 G$P7_0$0$0 == 0x00f8
                           0000F8  1170 _P7_0	=	0x00f8
                           0000F9  1171 G$P7_1$0$0 == 0x00f9
                           0000F9  1172 _P7_1	=	0x00f9
                           0000FA  1173 G$P7_2$0$0 == 0x00fa
                           0000FA  1174 _P7_2	=	0x00fa
                           0000FB  1175 G$P7_3$0$0 == 0x00fb
                           0000FB  1176 _P7_3	=	0x00fb
                           0000FC  1177 G$P7_4$0$0 == 0x00fc
                           0000FC  1178 _P7_4	=	0x00fc
                           0000FD  1179 G$P7_5$0$0 == 0x00fd
                           0000FD  1180 _P7_5	=	0x00fd
                           0000FE  1181 G$P7_6$0$0 == 0x00fe
                           0000FE  1182 _P7_6	=	0x00fe
                           0000FF  1183 G$P7_7$0$0 == 0x00ff
                           0000FF  1184 _P7_7	=	0x00ff
                                   1185 ;--------------------------------------------------------
                                   1186 ; overlayable register banks
                                   1187 ;--------------------------------------------------------
                                   1188 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                       1189 	.ds 8
                                   1190 ;--------------------------------------------------------
                                   1191 ; internal ram data
                                   1192 ;--------------------------------------------------------
                                   1193 	.area DSEG    (DATA)
                           000000  1194 G$prev$0$0==.
      000000                       1195 _prev::
      000000                       1196 	.ds 2
                           000002  1197 G$prev2$0$0==.
      000002                       1198 _prev2::
      000002                       1199 	.ds 2
                           000004  1200 G$prev_out$0$0==.
      000004                       1201 _prev_out::
      000004                       1202 	.ds 2
                                   1203 ;--------------------------------------------------------
                                   1204 ; overlayable items in internal ram 
                                   1205 ;--------------------------------------------------------
                                   1206 	.area	OSEG    (OVR,DATA)
                                   1207 	.area	OSEG    (OVR,DATA)
                                   1208 	.area	OSEG    (OVR,DATA)
                                   1209 	.area	OSEG    (OVR,DATA)
                                   1210 ;--------------------------------------------------------
                                   1211 ; Stack segment in internal ram 
                                   1212 ;--------------------------------------------------------
                                   1213 	.area	SSEG
      000000                       1214 __start__stack:
      000000                       1215 	.ds	1
                                   1216 
                                   1217 ;--------------------------------------------------------
                                   1218 ; indirectly addressable internal ram data
                                   1219 ;--------------------------------------------------------
                                   1220 	.area ISEG    (DATA)
                                   1221 ;--------------------------------------------------------
                                   1222 ; absolute internal ram data
                                   1223 ;--------------------------------------------------------
                                   1224 	.area IABS    (ABS,DATA)
                                   1225 	.area IABS    (ABS,DATA)
                                   1226 ;--------------------------------------------------------
                                   1227 ; bit data
                                   1228 ;--------------------------------------------------------
                                   1229 	.area BSEG    (BIT)
                                   1230 ;--------------------------------------------------------
                                   1231 ; paged external ram data
                                   1232 ;--------------------------------------------------------
                                   1233 	.area PSEG    (PAG,XDATA)
                                   1234 ;--------------------------------------------------------
                                   1235 ; external ram data
                                   1236 ;--------------------------------------------------------
                                   1237 	.area XSEG    (XDATA)
                                   1238 ;--------------------------------------------------------
                                   1239 ; absolute external ram data
                                   1240 ;--------------------------------------------------------
                                   1241 	.area XABS    (ABS,XDATA)
                                   1242 ;--------------------------------------------------------
                                   1243 ; external initialized ram data
                                   1244 ;--------------------------------------------------------
                                   1245 	.area XISEG   (XDATA)
                                   1246 	.area HOME    (CODE)
                                   1247 	.area GSINIT0 (CODE)
                                   1248 	.area GSINIT1 (CODE)
                                   1249 	.area GSINIT2 (CODE)
                                   1250 	.area GSINIT3 (CODE)
                                   1251 	.area GSINIT4 (CODE)
                                   1252 	.area GSINIT5 (CODE)
                                   1253 	.area GSINIT  (CODE)
                                   1254 	.area GSFINAL (CODE)
                                   1255 	.area CSEG    (CODE)
                                   1256 ;--------------------------------------------------------
                                   1257 ; interrupt vector 
                                   1258 ;--------------------------------------------------------
                                   1259 	.area HOME    (CODE)
      000000                       1260 __interrupt_vect:
      000000 02r00r00         [24] 1261 	ljmp	__sdcc_gsinit_startup
                                   1262 ;--------------------------------------------------------
                                   1263 ; global & static initialisations
                                   1264 ;--------------------------------------------------------
                                   1265 	.area HOME    (CODE)
                                   1266 	.area GSINIT  (CODE)
                                   1267 	.area GSFINAL (CODE)
                                   1268 	.area GSINIT  (CODE)
                                   1269 	.globl __sdcc_gsinit_startup
                                   1270 	.globl __sdcc_program_startup
                                   1271 	.globl __start__stack
                                   1272 	.globl __mcs51_genXINIT
                                   1273 	.globl __mcs51_genXRAMCLEAR
                                   1274 	.globl __mcs51_genRAMCLEAR
                           000000  1275 	C$simple.c$20$1$38 ==.
                                   1276 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:20: int prev = 0;
      000000 E4               [12] 1277 	clr	a
      000001 F5*00            [12] 1278 	mov	_prev,a
      000003 F5*01            [12] 1279 	mov	(_prev + 1),a
                           000005  1280 	C$simple.c$21$1$38 ==.
                                   1281 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:21: int prev2 = 0;
      000005 F5*02            [12] 1282 	mov	_prev2,a
      000007 F5*03            [12] 1283 	mov	(_prev2 + 1),a
                           000009  1284 	C$simple.c$22$1$38 ==.
                                   1285 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:22: int prev_out = 0;
      000009 F5*04            [12] 1286 	mov	_prev_out,a
      00000B F5*05            [12] 1287 	mov	(_prev_out + 1),a
                                   1288 	.area GSFINAL (CODE)
      000000 02r00r03         [24] 1289 	ljmp	__sdcc_program_startup
                                   1290 ;--------------------------------------------------------
                                   1291 ; Home
                                   1292 ;--------------------------------------------------------
                                   1293 	.area HOME    (CODE)
                                   1294 	.area HOME    (CODE)
      000003                       1295 __sdcc_program_startup:
      000003 02r00r15         [24] 1296 	ljmp	_main
                                   1297 ;	return from main will return to caller
                                   1298 ;--------------------------------------------------------
                                   1299 ; code
                                   1300 ;--------------------------------------------------------
                                   1301 	.area CSEG    (CODE)
                                   1302 ;------------------------------------------------------------
                                   1303 ;Allocation info for local variables in function 'putchar'
                                   1304 ;------------------------------------------------------------
                                   1305 ;c                         Allocated to registers r7 
                                   1306 ;------------------------------------------------------------
                           000000  1307 	G$putchar$0$0 ==.
                           000000  1308 	C$putget.h$18$0$0 ==.
                                   1309 ;	C:/Users/Christina/Documents/MPS/Versions/Lab_04/Part IV - FIR/putget.h:18: void putchar(char c)
                                   1310 ;	-----------------------------------------
                                   1311 ;	 function putchar
                                   1312 ;	-----------------------------------------
      000000                       1313 _putchar:
                           000007  1314 	ar7 = 0x07
                           000006  1315 	ar6 = 0x06
                           000005  1316 	ar5 = 0x05
                           000004  1317 	ar4 = 0x04
                           000003  1318 	ar3 = 0x03
                           000002  1319 	ar2 = 0x02
                           000001  1320 	ar1 = 0x01
                           000000  1321 	ar0 = 0x00
      000000 AF 82            [24] 1322 	mov	r7,dpl
                           000002  1323 	C$putget.h$20$1$16 ==.
                                   1324 ;	C:/Users/Christina/Documents/MPS/Versions/Lab_04/Part IV - FIR/putget.h:20: while(!TI0); 
      000002                       1325 00101$:
                           000002  1326 	C$putget.h$21$1$16 ==.
                                   1327 ;	C:/Users/Christina/Documents/MPS/Versions/Lab_04/Part IV - FIR/putget.h:21: TI0=0;
      000002 10 99 02         [24] 1328 	jbc	_TI0,00112$
      000005 80 FB            [24] 1329 	sjmp	00101$
      000007                       1330 00112$:
                           000007  1331 	C$putget.h$22$1$16 ==.
                                   1332 ;	C:/Users/Christina/Documents/MPS/Versions/Lab_04/Part IV - FIR/putget.h:22: SBUF0 = c;
      000007 8F 99            [24] 1333 	mov	_SBUF0,r7
                           000009  1334 	C$putget.h$23$1$16 ==.
                           000009  1335 	XG$putchar$0$0 ==.
      000009 22               [24] 1336 	ret
                                   1337 ;------------------------------------------------------------
                                   1338 ;Allocation info for local variables in function 'getchar'
                                   1339 ;------------------------------------------------------------
                                   1340 ;c                         Allocated to registers 
                                   1341 ;------------------------------------------------------------
                           00000A  1342 	G$getchar$0$0 ==.
                           00000A  1343 	C$putget.h$28$1$16 ==.
                                   1344 ;	C:/Users/Christina/Documents/MPS/Versions/Lab_04/Part IV - FIR/putget.h:28: char getchar(void)
                                   1345 ;	-----------------------------------------
                                   1346 ;	 function getchar
                                   1347 ;	-----------------------------------------
      00000A                       1348 _getchar:
                           00000A  1349 	C$putget.h$31$1$18 ==.
                                   1350 ;	C:/Users/Christina/Documents/MPS/Versions/Lab_04/Part IV - FIR/putget.h:31: while(!RI0);
      00000A                       1351 00101$:
                           00000A  1352 	C$putget.h$32$1$18 ==.
                                   1353 ;	C:/Users/Christina/Documents/MPS/Versions/Lab_04/Part IV - FIR/putget.h:32: RI0 =0;
      00000A 10 98 02         [24] 1354 	jbc	_RI0,00112$
      00000D 80 FB            [24] 1355 	sjmp	00101$
      00000F                       1356 00112$:
                           00000F  1357 	C$putget.h$33$1$18 ==.
                                   1358 ;	C:/Users/Christina/Documents/MPS/Versions/Lab_04/Part IV - FIR/putget.h:33: c = SBUF0;
      00000F E5 99            [12] 1359 	mov	a,_SBUF0
                           000011  1360 	C$putget.h$36$1$18 ==.
                                   1361 ;	C:/Users/Christina/Documents/MPS/Versions/Lab_04/Part IV - FIR/putget.h:36: return SBUF0;
      000011 85 99 82         [24] 1362 	mov	dpl,_SBUF0
                           000014  1363 	C$putget.h$37$1$18 ==.
                           000014  1364 	XG$getchar$0$0 ==.
      000014 22               [24] 1365 	ret
                                   1366 ;------------------------------------------------------------
                                   1367 ;Allocation info for local variables in function 'main'
                                   1368 ;------------------------------------------------------------
                                   1369 ;wave                      Allocated to registers r4 r5 
                                   1370 ;x                         Allocated to registers r6 r7 
                                   1371 ;y                         Allocated with name '_main_y_1_28'
                                   1372 ;------------------------------------------------------------
                           000015  1373 	G$main$0$0 ==.
                           000015  1374 	C$simple.c$36$1$18 ==.
                                   1375 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:36: void main (void)
                                   1376 ;	-----------------------------------------
                                   1377 ;	 function main
                                   1378 ;	-----------------------------------------
      000015                       1379 _main:
                           000015  1380 	C$simple.c$41$1$28 ==.
                                   1381 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:41: SFRPAGE = CONFIG_PAGE;
      000015 75 84 0F         [24] 1382 	mov	_SFRPAGE,#0x0F
                           000018  1383 	C$simple.c$42$1$28 ==.
                                   1384 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:42: SYSCLK_INIT();
      000018 12r01r07         [24] 1385 	lcall	_SYSCLK_INIT
                           00001B  1386 	C$simple.c$43$1$28 ==.
                                   1387 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:43: Port_IO_Init();
      00001B 12r01r4A         [24] 1388 	lcall	_Port_IO_Init
                           00001E  1389 	C$simple.c$44$1$28 ==.
                                   1390 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:44: Timer_Init();
      00001E 12r01r26         [24] 1391 	lcall	_Timer_Init
                           000021  1392 	C$simple.c$45$1$28 ==.
                                   1393 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:45: UART_Init();
      000021 12r01r3C         [24] 1394 	lcall	_UART_Init
                           000024  1395 	C$simple.c$46$1$28 ==.
                                   1396 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:46: DAC_INIT();
      000024 12r01r62         [24] 1397 	lcall	_DAC_INIT
                           000027  1398 	C$simple.c$47$1$28 ==.
                                   1399 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:47: SFRPAGE = LEGACY_PAGE;//same as UART0_PAGE
      000027 75 84 00         [24] 1400 	mov	_SFRPAGE,#0x00
                           00002A  1401 	C$simple.c$48$1$28 ==.
                                   1402 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:48: printf("\033[2J");
      00002A 74r00            [12] 1403 	mov	a,#___str_0
      00002C C0 E0            [24] 1404 	push	acc
      00002E 74s00            [12] 1405 	mov	a,#(___str_0 >> 8)
      000030 C0 E0            [24] 1406 	push	acc
      000032 74 80            [12] 1407 	mov	a,#0x80
      000034 C0 E0            [24] 1408 	push	acc
      000036 12r00r00         [24] 1409 	lcall	_printf
      000039 15 81            [12] 1410 	dec	sp
      00003B 15 81            [12] 1411 	dec	sp
      00003D 15 81            [12] 1412 	dec	sp
                           00003F  1413 	C$simple.c$49$1$28 ==.
                                   1414 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:49: while(1)
      00003F                       1415 00102$:
                           00003F  1416 	C$simple.c$51$2$29 ==.
                                   1417 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:51: x = ADC_read();
      00003F 12r00rEE         [24] 1418 	lcall	_ADC_read
      000042 AE 82            [24] 1419 	mov	r6,dpl
      000044 AF 83            [24] 1420 	mov	r7,dph
                           000046  1421 	C$simple.c$53$2$29 ==.
                                   1422 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:53: wave = MAC_Convert(x<4);
      000046 C3               [12] 1423 	clr	c
      000047 EE               [12] 1424 	mov	a,r6
      000048 94 04            [12] 1425 	subb	a,#0x04
      00004A EF               [12] 1426 	mov	a,r7
      00004B 64 80            [12] 1427 	xrl	a,#0x80
      00004D 94 80            [12] 1428 	subb	a,#0x80
      00004F E4               [12] 1429 	clr	a
      000050 33               [12] 1430 	rlc	a
      000051 FD               [12] 1431 	mov	r5,a
      000052 33               [12] 1432 	rlc	a
      000053 95 E0            [12] 1433 	subb	a,acc
      000055 FC               [12] 1434 	mov	r4,a
      000056 8D 82            [24] 1435 	mov	dpl,r5
      000058 8C 83            [24] 1436 	mov	dph,r4
      00005A C0 07            [24] 1437 	push	ar7
      00005C C0 06            [24] 1438 	push	ar6
      00005E 12r00r81         [24] 1439 	lcall	_MAC_Convert
      000061 AC 82            [24] 1440 	mov	r4,dpl
      000063 AD 83            [24] 1441 	mov	r5,dph
      000065 D0 06            [24] 1442 	pop	ar6
      000067 D0 07            [24] 1443 	pop	ar7
                           000069  1444 	C$simple.c$55$2$29 ==.
                                   1445 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:55: SFRPAGE = DAC0_PAGE;
      000069 75 84 00         [24] 1446 	mov	_SFRPAGE,#0x00
                           00006C  1447 	C$simple.c$56$2$29 ==.
                                   1448 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:56: DAC0L = wave;
      00006C 8C D2            [24] 1449 	mov	_DAC0L,r4
                           00006E  1450 	C$simple.c$57$2$29 ==.
                                   1451 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:57: DAC0H = wave>>8;
      00006E 8D D3            [24] 1452 	mov	_DAC0H,r5
                           000070  1453 	C$simple.c$64$2$29 ==.
                                   1454 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:64: prev2 = prev; 
      000070 85*00*02         [24] 1455 	mov	_prev2,_prev
      000073 85*01*03         [24] 1456 	mov	(_prev2 + 1),(_prev + 1)
                           000076  1457 	C$simple.c$65$2$29 ==.
                                   1458 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:65: prev = x;
      000076 8E*00            [24] 1459 	mov	_prev,r6
      000078 8F*01            [24] 1460 	mov	(_prev + 1),r7
                           00007A  1461 	C$simple.c$66$2$29 ==.
                                   1462 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:66: prev_out = wave;
      00007A 8C*04            [24] 1463 	mov	_prev_out,r4
      00007C 8D*05            [24] 1464 	mov	(_prev_out + 1),r5
      00007E 80 BF            [24] 1465 	sjmp	00102$
                           000080  1466 	C$simple.c$68$1$28 ==.
                           000080  1467 	XG$main$0$0 ==.
      000080 22               [24] 1468 	ret
                                   1469 ;------------------------------------------------------------
                                   1470 ;Allocation info for local variables in function 'MAC_Convert'
                                   1471 ;------------------------------------------------------------
                                   1472 ;x                         Allocated to registers r6 r7 
                                   1473 ;i                         Allocated to registers r7 
                                   1474 ;out                       Allocated to registers 
                                   1475 ;------------------------------------------------------------
                           000081  1476 	G$MAC_Convert$0$0 ==.
                           000081  1477 	C$simple.c$70$1$28 ==.
                                   1478 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:70: signed int MAC_Convert(int x)
                                   1479 ;	-----------------------------------------
                                   1480 ;	 function MAC_Convert
                                   1481 ;	-----------------------------------------
      000081                       1482 _MAC_Convert:
      000081 AE 82            [24] 1483 	mov	r6,dpl
      000083 AF 83            [24] 1484 	mov	r7,dph
                           000085  1485 	C$simple.c$74$1$31 ==.
                                   1486 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:74: SFRPAGE = MAC0_PAGE;
      000085 75 84 03         [24] 1487 	mov	_SFRPAGE,#0x03
                           000088  1488 	C$simple.c$75$1$31 ==.
                                   1489 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:75: MAC0CF |= 0x08;//clear the accumulator MAC0CF.3
      000088 43 C3 08         [24] 1490 	orl	_MAC0CF,#0x08
                           00008B  1491 	C$simple.c$76$1$31 ==.
                                   1492 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:76: MAC0A = 0x2800;//hex equivelent to two's complement .3125
      00008B 75 C1 00         [24] 1493 	mov	((_MAC0A >> 0) & 0xFF),#0x00
      00008E 75 C2 28         [24] 1494 	mov	((_MAC0A >> 8) & 0xFF),#0x28
                           000091  1495 	C$simple.c$77$1$31 ==.
                                   1496 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:77: MAC0BH = x >> 8;
      000091 8F 92            [24] 1497 	mov	_MAC0BH,r7
                           000093  1498 	C$simple.c$78$1$31 ==.
                                   1499 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:78: MAC0BL = x;
      000093 8E 91            [24] 1500 	mov	_MAC0BL,r6
                           000095  1501 	C$simple.c$79$1$31 ==.
                                   1502 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:79: for(i=0;i<2;i++);
      000095 7F 02            [12] 1503 	mov	r7,#0x02
      000097 8F 06            [24] 1504 	mov	ar6,r7
      000099                       1505 00111$:
      000099 DE FE            [24] 1506 	djnz	r6,00111$
                           00009B  1507 	C$simple.c$81$1$31 ==.
                                   1508 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:81: MAC0BH = prev2 >>8;
      00009B 85*03 92         [24] 1509 	mov	_MAC0BH,(_prev2 + 1)
                           00009E  1510 	C$simple.c$82$1$31 ==.
                                   1511 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:82: MAC0BL = prev2;
      00009E 85*02 91         [24] 1512 	mov	_MAC0BL,_prev2
                           0000A1  1513 	C$simple.c$83$1$31 ==.
                                   1514 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:83: for(i=0;i<2;i++);	
      0000A1 7F 02            [12] 1515 	mov	r7,#0x02
      0000A3 8F 06            [24] 1516 	mov	ar6,r7
      0000A5                       1517 00114$:
      0000A5 DE FE            [24] 1518 	djnz	r6,00114$
                           0000A7  1519 	C$simple.c$84$1$31 ==.
                                   1520 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:84: MAC0A = 0x1EC4; //non exact two's complement conversion of .24038462
      0000A7 75 C1 C4         [24] 1521 	mov	((_MAC0A >> 0) & 0xFF),#0xC4
      0000AA 75 C2 1E         [24] 1522 	mov	((_MAC0A >> 8) & 0xFF),#0x1E
                           0000AD  1523 	C$simple.c$85$1$31 ==.
                                   1524 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:85: MAC0BH = prev >>8;
      0000AD 85*01 92         [24] 1525 	mov	_MAC0BH,(_prev + 1)
                           0000B0  1526 	C$simple.c$86$1$31 ==.
                                   1527 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:86: MAC0BL = prev;
      0000B0 85*00 91         [24] 1528 	mov	_MAC0BL,_prev
                           0000B3  1529 	C$simple.c$87$1$31 ==.
                                   1530 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:87: for(i=0;i<2;i++);
      0000B3 7F 02            [12] 1531 	mov	r7,#0x02
      0000B5 8F 06            [24] 1532 	mov	ar6,r7
      0000B7                       1533 00117$:
      0000B7 DE FE            [24] 1534 	djnz	r6,00117$
                           0000B9  1535 	C$simple.c$88$1$31 ==.
                                   1536 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:88: MAC0A = 0x2A00; //two's complement conversion of .296875
      0000B9 75 C1 00         [24] 1537 	mov	((_MAC0A >> 0) & 0xFF),#0x00
      0000BC 75 C2 2A         [24] 1538 	mov	((_MAC0A >> 8) & 0xFF),#0x2A
                           0000BF  1539 	C$simple.c$89$1$31 ==.
                                   1540 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:89: MAC0BH = prev_out >>8;
      0000BF 85*05 92         [24] 1541 	mov	_MAC0BH,(_prev_out + 1)
                           0000C2  1542 	C$simple.c$90$1$31 ==.
                                   1543 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:90: MAC0BL = prev_out;
      0000C2 85*04 91         [24] 1544 	mov	_MAC0BL,_prev_out
                           0000C5  1545 	C$simple.c$91$1$31 ==.
                                   1546 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:91: for(i=0;i<2;i++);
      0000C5 7F 02            [12] 1547 	mov	r7,#0x02
      0000C7                       1548 00120$:
      0000C7 DF FE            [24] 1549 	djnz	r7,00120$
                           0000C9  1550 	C$simple.c$93$1$31 ==.
                                   1551 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:93: for(i=0;i<0;i++){MAC0CF|=0x20;while (MAC0CF&0x20);}//shift right for normalization//if shift hasn't finished, wait
      0000C9 7F 00            [12] 1552 	mov	r7,#0x00
      0000CB                       1553 00122$:
      0000CB EF               [12] 1554 	mov	a,r7
      0000CC 30 E7 0B         [24] 1555 	jnb	acc.7,00108$
      0000CF 43 C3 20         [24] 1556 	orl	_MAC0CF,#0x20
      0000D2                       1557 00105$:
      0000D2 E5 C3            [12] 1558 	mov	a,_MAC0CF
      0000D4 20 E5 FB         [24] 1559 	jb	acc.5,00105$
      0000D7 0F               [12] 1560 	inc	r7
      0000D8 80 F1            [24] 1561 	sjmp	00122$
      0000DA                       1562 00108$:
                           0000DA  1563 	C$simple.c$94$1$31 ==.
                                   1564 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:94: SFRPAGE = MAC0_PAGE;
      0000DA 75 84 03         [24] 1565 	mov	_SFRPAGE,#0x03
                           0000DD  1566 	C$simple.c$95$1$31 ==.
                                   1567 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:95: out = MAC0ACC3<<8 | MAC0ACC2;
      0000DD AF 96            [24] 1568 	mov	r7,_MAC0ACC3
      0000DF 7E 00            [12] 1569 	mov	r6,#0x00
      0000E1 AC 95            [24] 1570 	mov	r4,_MAC0ACC2
      0000E3 7D 00            [12] 1571 	mov	r5,#0x00
      0000E5 EC               [12] 1572 	mov	a,r4
      0000E6 4E               [12] 1573 	orl	a,r6
      0000E7 F5 82            [12] 1574 	mov	dpl,a
      0000E9 ED               [12] 1575 	mov	a,r5
      0000EA 4F               [12] 1576 	orl	a,r7
      0000EB F5 83            [12] 1577 	mov	dph,a
                           0000ED  1578 	C$simple.c$98$1$31 ==.
                                   1579 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:98: return out;
                           0000ED  1580 	C$simple.c$99$1$31 ==.
                           0000ED  1581 	XG$MAC_Convert$0$0 ==.
      0000ED 22               [24] 1582 	ret
                                   1583 ;------------------------------------------------------------
                                   1584 ;Allocation info for local variables in function 'ADC_read'
                                   1585 ;------------------------------------------------------------
                           0000EE  1586 	G$ADC_read$0$0 ==.
                           0000EE  1587 	C$simple.c$100$1$31 ==.
                                   1588 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:100: unsigned int ADC_read()
                                   1589 ;	-----------------------------------------
                                   1590 ;	 function ADC_read
                                   1591 ;	-----------------------------------------
      0000EE                       1592 _ADC_read:
                           0000EE  1593 	C$simple.c$102$1$33 ==.
                                   1594 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:102: AMX0SL = 0;//select pin
      0000EE 75 BB 00         [24] 1595 	mov	_AMX0SL,#0x00
                           0000F1  1596 	C$simple.c$103$1$33 ==.
                                   1597 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:103: ADC0CN &= ~(0x20);// reset for reading
      0000F1 AF E8            [24] 1598 	mov	r7,_ADC0CN
      0000F3 74 DF            [12] 1599 	mov	a,#0xDF
      0000F5 5F               [12] 1600 	anl	a,r7
      0000F6 F5 E8            [12] 1601 	mov	_ADC0CN,a
                           0000F8  1602 	C$simple.c$104$1$33 ==.
                                   1603 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:104: ADC0CN |= 0x10;
      0000F8 43 E8 10         [24] 1604 	orl	_ADC0CN,#0x10
                           0000FB  1605 	C$simple.c$105$1$33 ==.
                                   1606 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:105: while((ADC0CN & 0x20)==0); // wait for conversion to finish
      0000FB                       1607 00101$:
      0000FB E5 E8            [12] 1608 	mov	a,_ADC0CN
      0000FD 30 E5 FB         [24] 1609 	jnb	acc.5,00101$
                           000100  1610 	C$simple.c$107$1$33 ==.
                                   1611 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:107: return ADC0;
      000100 85 BE 82         [24] 1612 	mov	dpl,((_ADC0 >> 0) & 0xFF)
      000103 85 BF 83         [24] 1613 	mov	dph,((_ADC0 >> 8) & 0xFF)
                           000106  1614 	C$simple.c$108$1$33 ==.
                           000106  1615 	XG$ADC_read$0$0 ==.
      000106 22               [24] 1616 	ret
                                   1617 ;------------------------------------------------------------
                                   1618 ;Allocation info for local variables in function 'SYSCLK_INIT'
                                   1619 ;------------------------------------------------------------
                                   1620 ;j                         Allocated to registers 
                                   1621 ;------------------------------------------------------------
                           000107  1622 	G$SYSCLK_INIT$0$0 ==.
                           000107  1623 	C$simple.c$111$1$33 ==.
                                   1624 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:111: void SYSCLK_INIT()
                                   1625 ;	-----------------------------------------
                                   1626 ;	 function SYSCLK_INIT
                                   1627 ;	-----------------------------------------
      000107                       1628 _SYSCLK_INIT:
                           000107  1629 	C$simple.c$114$1$34 ==.
                                   1630 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:114: SFRPAGE = CONFIG_PAGE;
      000107 75 84 0F         [24] 1631 	mov	_SFRPAGE,#0x0F
                           00010A  1632 	C$simple.c$115$1$34 ==.
                                   1633 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:115: OSCXCN  = 0x67;             // Start external oscillator
      00010A 75 8C 67         [24] 1634 	mov	_OSCXCN,#0x67
                           00010D  1635 	C$simple.c$116$1$34 ==.
                                   1636 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:116: for(j=0; j < 256; j++);     // Wait for the oscillator to start up.
      00010D 7E 00            [12] 1637 	mov	r6,#0x00
      00010F 7F 01            [12] 1638 	mov	r7,#0x01
      000111                       1639 00107$:
      000111 1E               [12] 1640 	dec	r6
      000112 BE FF 01         [24] 1641 	cjne	r6,#0xFF,00121$
      000115 1F               [12] 1642 	dec	r7
      000116                       1643 00121$:
      000116 EE               [12] 1644 	mov	a,r6
      000117 4F               [12] 1645 	orl	a,r7
      000118 70 F7            [24] 1646 	jnz	00107$
                           00011A  1647 	C$simple.c$117$1$34 ==.
                                   1648 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:117: while(!(OSCXCN & 0x80));    // Check to see if the Crystal Oscillator Valid Flag is set.
      00011A                       1649 00102$:
      00011A E5 8C            [12] 1650 	mov	a,_OSCXCN
      00011C 30 E7 FB         [24] 1651 	jnb	acc.7,00102$
                           00011F  1652 	C$simple.c$118$1$34 ==.
                                   1653 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:118: CLKSEL  = 0x01;             // SYSCLK derived from the External Oscillator circuit.
      00011F 75 97 01         [24] 1654 	mov	_CLKSEL,#0x01
                           000122  1655 	C$simple.c$119$1$34 ==.
                                   1656 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:119: OSCICN  = 0x00;             // Disable the internal oscillator.
      000122 75 8A 00         [24] 1657 	mov	_OSCICN,#0x00
                           000125  1658 	C$simple.c$120$1$34 ==.
                           000125  1659 	XG$SYSCLK_INIT$0$0 ==.
      000125 22               [24] 1660 	ret
                                   1661 ;------------------------------------------------------------
                                   1662 ;Allocation info for local variables in function 'Timer_Init'
                                   1663 ;------------------------------------------------------------
                           000126  1664 	G$Timer_Init$0$0 ==.
                           000126  1665 	C$simple.c$122$1$34 ==.
                                   1666 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:122: void Timer_Init()
                                   1667 ;	-----------------------------------------
                                   1668 ;	 function Timer_Init
                                   1669 ;	-----------------------------------------
      000126                       1670 _Timer_Init:
                           000126  1671 	C$simple.c$124$1$35 ==.
                                   1672 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:124: SFRPAGE   = TMR2_PAGE;
      000126 75 84 00         [24] 1673 	mov	_SFRPAGE,#0x00
                           000129  1674 	C$simple.c$125$1$35 ==.
                                   1675 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:125: TMR2CN    = 0x04;
      000129 75 C8 04         [24] 1676 	mov	_TMR2CN,#0x04
                           00012C  1677 	C$simple.c$126$1$35 ==.
                                   1678 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:126: TMR2CF    = 0x08;
      00012C 75 C9 08         [24] 1679 	mov	_TMR2CF,#0x08
                           00012F  1680 	C$simple.c$127$1$35 ==.
                                   1681 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:127: TMR2H	  = 0xFF;
      00012F 75 CD FF         [24] 1682 	mov	_TMR2H,#0xFF
                           000132  1683 	C$simple.c$128$1$35 ==.
                                   1684 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:128: TMR2L 	  = 0x70;
      000132 75 CC 70         [24] 1685 	mov	_TMR2L,#0x70
                           000135  1686 	C$simple.c$129$1$35 ==.
                                   1687 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:129: RCAP2L    = 0x70;
      000135 75 CA 70         [24] 1688 	mov	_RCAP2L,#0x70
                           000138  1689 	C$simple.c$130$1$35 ==.
                                   1690 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:130: RCAP2H    = 0xFF;
      000138 75 CB FF         [24] 1691 	mov	_RCAP2H,#0xFF
                           00013B  1692 	C$simple.c$131$1$35 ==.
                           00013B  1693 	XG$Timer_Init$0$0 ==.
      00013B 22               [24] 1694 	ret
                                   1695 ;------------------------------------------------------------
                                   1696 ;Allocation info for local variables in function 'UART_Init'
                                   1697 ;------------------------------------------------------------
                           00013C  1698 	G$UART_Init$0$0 ==.
                           00013C  1699 	C$simple.c$132$1$35 ==.
                                   1700 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:132: void UART_Init()
                                   1701 ;	-----------------------------------------
                                   1702 ;	 function UART_Init
                                   1703 ;	-----------------------------------------
      00013C                       1704 _UART_Init:
                           00013C  1705 	C$simple.c$134$1$36 ==.
                                   1706 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:134: SFRPAGE   = UART0_PAGE;//Same as Timer 2 and Timer 1 SFR PAGES
      00013C 75 84 00         [24] 1707 	mov	_SFRPAGE,#0x00
                           00013F  1708 	C$simple.c$135$1$36 ==.
                                   1709 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:135: TR2		  = 1;//Start Timer 2
      00013F D2 CA            [12] 1710 	setb	_TR2
                           000141  1711 	C$simple.c$136$1$36 ==.
                                   1712 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:136: SCON0     = 0x50;
      000141 75 98 50         [24] 1713 	mov	_SCON0,#0x50
                           000144  1714 	C$simple.c$137$1$36 ==.
                                   1715 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:137: SSTA0   = 0x15;
      000144 75 91 15         [24] 1716 	mov	_SSTA0,#0x15
                           000147  1717 	C$simple.c$138$1$36 ==.
                                   1718 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:138: TI0		  = 1; // Indicate TX0 is ready
      000147 D2 99            [12] 1719 	setb	_TI0
                           000149  1720 	C$simple.c$139$1$36 ==.
                           000149  1721 	XG$UART_Init$0$0 ==.
      000149 22               [24] 1722 	ret
                                   1723 ;------------------------------------------------------------
                                   1724 ;Allocation info for local variables in function 'Port_IO_Init'
                                   1725 ;------------------------------------------------------------
                           00014A  1726 	G$Port_IO_Init$0$0 ==.
                           00014A  1727 	C$simple.c$141$1$36 ==.
                                   1728 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:141: void Port_IO_Init()
                                   1729 ;	-----------------------------------------
                                   1730 ;	 function Port_IO_Init
                                   1731 ;	-----------------------------------------
      00014A                       1732 _Port_IO_Init:
                           00014A  1733 	C$simple.c$143$1$37 ==.
                                   1734 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:143: SFRPAGE   = CONFIG_PAGE;
      00014A 75 84 0F         [24] 1735 	mov	_SFRPAGE,#0x0F
                           00014D  1736 	C$simple.c$144$1$37 ==.
                                   1737 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:144: WDTCN   = 0xDE;             // Disable watchdog timer.
      00014D 75 FF DE         [24] 1738 	mov	_WDTCN,#0xDE
                           000150  1739 	C$simple.c$145$1$37 ==.
                                   1740 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:145: WDTCN   = 0xAD;
      000150 75 FF AD         [24] 1741 	mov	_WDTCN,#0xAD
                           000153  1742 	C$simple.c$146$1$37 ==.
                                   1743 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:146: XBR0 = 0x04; // enable UART0
      000153 75 E1 04         [24] 1744 	mov	_XBR0,#0x04
                           000156  1745 	C$simple.c$147$1$37 ==.
                                   1746 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:147: XBR2 = 0x40;//enable crossbar
      000156 75 E3 40         [24] 1747 	mov	_XBR2,#0x40
                           000159  1748 	C$simple.c$149$1$37 ==.
                                   1749 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:149: P0MDOUT = 0x01;
      000159 75 A4 01         [24] 1750 	mov	_P0MDOUT,#0x01
                           00015C  1751 	C$simple.c$151$1$37 ==.
                                   1752 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:151: P0 = 0x02;
      00015C 75 80 02         [24] 1753 	mov	_P0,#0x02
                           00015F  1754 	C$simple.c$154$1$37 ==.
                                   1755 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:154: EA = 1;
      00015F D2 AF            [12] 1756 	setb	_EA
                           000161  1757 	C$simple.c$155$1$37 ==.
                           000161  1758 	XG$Port_IO_Init$0$0 ==.
      000161 22               [24] 1759 	ret
                                   1760 ;------------------------------------------------------------
                                   1761 ;Allocation info for local variables in function 'DAC_INIT'
                                   1762 ;------------------------------------------------------------
                           000162  1763 	G$DAC_INIT$0$0 ==.
                           000162  1764 	C$simple.c$157$1$37 ==.
                                   1765 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:157: void DAC_INIT()
                                   1766 ;	-----------------------------------------
                                   1767 ;	 function DAC_INIT
                                   1768 ;	-----------------------------------------
      000162                       1769 _DAC_INIT:
                           000162  1770 	C$simple.c$159$1$38 ==.
                                   1771 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:159: SFRPAGE = DAC0_PAGE;
      000162 75 84 00         [24] 1772 	mov	_SFRPAGE,#0x00
                           000165  1773 	C$simple.c$160$1$38 ==.
                                   1774 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:160: REF0CN = 0x03;
      000165 75 D1 03         [24] 1775 	mov	_REF0CN,#0x03
                           000168  1776 	C$simple.c$161$1$38 ==.
                                   1777 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:161: DAC0CN = 0x80;
      000168 75 D4 80         [24] 1778 	mov	_DAC0CN,#0x80
                           00016B  1779 	C$simple.c$162$1$38 ==.
                                   1780 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:162: AMX0CF = 0x00;
      00016B 75 BA 00         [24] 1781 	mov	_AMX0CF,#0x00
                           00016E  1782 	C$simple.c$163$1$38 ==.
                                   1783 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:163: ADC0CF = 0x20;
      00016E 75 BC 20         [24] 1784 	mov	_ADC0CF,#0x20
                           000171  1785 	C$simple.c$164$1$38 ==.
                                   1786 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:164: ADC0CN = 0x80; // enable ADC conversion
      000171 75 E8 80         [24] 1787 	mov	_ADC0CN,#0x80
                           000174  1788 	C$simple.c$165$1$38 ==.
                                   1789 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:165: SFRPAGE = MAC0_PAGE;
      000174 75 84 03         [24] 1790 	mov	_SFRPAGE,#0x03
                           000177  1791 	C$simple.c$166$1$38 ==.
                                   1792 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:166: MAC0CF = 0x12;
      000177 75 C3 12         [24] 1793 	mov	_MAC0CF,#0x12
                           00017A  1794 	C$simple.c$167$1$38 ==.
                                   1795 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_04\Part IV - FIR\simple.c:167: SFRPAGE   = CONFIG_PAGE;
      00017A 75 84 0F         [24] 1796 	mov	_SFRPAGE,#0x0F
                           00017D  1797 	C$simple.c$168$1$38 ==.
                           00017D  1798 	XG$DAC_INIT$0$0 ==.
      00017D 22               [24] 1799 	ret
                                   1800 	.area CSEG    (CODE)
                                   1801 	.area CONST   (CODE)
                           000000  1802 Fsimple$__str_0$0$0 == .
      000000                       1803 ___str_0:
      000000 1B                    1804 	.db 0x1B
      000001 5B 32 4A              1805 	.ascii "[2J"
      000004 00                    1806 	.db 0x00
                                   1807 	.area XINIT   (CODE)
                                   1808 	.area CABS    (ABS,CODE)
