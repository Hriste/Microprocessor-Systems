                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Apr  5 2014) (MINGW32)
                                      4 ; This file was generated Thu Oct 13 17:18:08 2016
                                      5 ;--------------------------------------------------------
                                      6 	.module SPI0
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _printf
                                     13 	.globl _P7_7
                                     14 	.globl _P7_6
                                     15 	.globl _P7_5
                                     16 	.globl _P7_4
                                     17 	.globl _P7_3
                                     18 	.globl _P7_2
                                     19 	.globl _P7_1
                                     20 	.globl _P7_0
                                     21 	.globl _SPIF
                                     22 	.globl _WCOL
                                     23 	.globl _MODF
                                     24 	.globl _RXOVRN
                                     25 	.globl _NSSMD1
                                     26 	.globl _NSSMD0
                                     27 	.globl _TXBMT
                                     28 	.globl _SPIEN
                                     29 	.globl _P6_7
                                     30 	.globl _P6_6
                                     31 	.globl _P6_5
                                     32 	.globl _P6_4
                                     33 	.globl _P6_3
                                     34 	.globl _P6_2
                                     35 	.globl _P6_1
                                     36 	.globl _P6_0
                                     37 	.globl _AD2EN
                                     38 	.globl _AD2TM
                                     39 	.globl _AD2INT
                                     40 	.globl _AD2BUSY
                                     41 	.globl _AD2CM2
                                     42 	.globl _AD2CM1
                                     43 	.globl _AD2CM0
                                     44 	.globl _AD2WINT
                                     45 	.globl _AD0EN
                                     46 	.globl _AD0TM
                                     47 	.globl _AD0INT
                                     48 	.globl _AD0BUSY
                                     49 	.globl _AD0CM1
                                     50 	.globl _AD0CM0
                                     51 	.globl _AD0WINT
                                     52 	.globl _AD0LJST
                                     53 	.globl _P5_7
                                     54 	.globl _P5_6
                                     55 	.globl _P5_5
                                     56 	.globl _P5_4
                                     57 	.globl _P5_3
                                     58 	.globl _P5_2
                                     59 	.globl _P5_1
                                     60 	.globl _P5_0
                                     61 	.globl _CF
                                     62 	.globl _CR
                                     63 	.globl _CCF5
                                     64 	.globl _CCF4
                                     65 	.globl _CCF3
                                     66 	.globl _CCF2
                                     67 	.globl _CCF1
                                     68 	.globl _CCF0
                                     69 	.globl _CY
                                     70 	.globl _AC
                                     71 	.globl _F0
                                     72 	.globl _RS1
                                     73 	.globl _RS0
                                     74 	.globl _OV
                                     75 	.globl _F1
                                     76 	.globl _P
                                     77 	.globl _P4_7
                                     78 	.globl _P4_6
                                     79 	.globl _P4_5
                                     80 	.globl _P4_4
                                     81 	.globl _P4_3
                                     82 	.globl _P4_2
                                     83 	.globl _P4_1
                                     84 	.globl _P4_0
                                     85 	.globl _TF4
                                     86 	.globl _EXF4
                                     87 	.globl _EXEN4
                                     88 	.globl _TR4
                                     89 	.globl _CT4
                                     90 	.globl _CPRL4
                                     91 	.globl _TF3
                                     92 	.globl _EXF3
                                     93 	.globl _EXEN3
                                     94 	.globl _TR3
                                     95 	.globl _CT3
                                     96 	.globl _CPRL3
                                     97 	.globl _TF2
                                     98 	.globl _EXF2
                                     99 	.globl _EXEN2
                                    100 	.globl _TR2
                                    101 	.globl _CT2
                                    102 	.globl _CPRL2
                                    103 	.globl _MAC0HO
                                    104 	.globl _MAC0Z
                                    105 	.globl _MAC0SO
                                    106 	.globl _MAC0N
                                    107 	.globl _BUSY
                                    108 	.globl _ENSMB
                                    109 	.globl _STA
                                    110 	.globl _STO
                                    111 	.globl _SI
                                    112 	.globl _AA
                                    113 	.globl _SMBFTE
                                    114 	.globl _SMBTOE
                                    115 	.globl _PT2
                                    116 	.globl _PS
                                    117 	.globl _PS0
                                    118 	.globl _PT1
                                    119 	.globl _PX1
                                    120 	.globl _PT0
                                    121 	.globl _PX0
                                    122 	.globl _P3_7
                                    123 	.globl _P3_6
                                    124 	.globl _P3_5
                                    125 	.globl _P3_4
                                    126 	.globl _P3_3
                                    127 	.globl _P3_2
                                    128 	.globl _P3_1
                                    129 	.globl _P3_0
                                    130 	.globl _EA
                                    131 	.globl _ET2
                                    132 	.globl _ES
                                    133 	.globl _ES0
                                    134 	.globl _ET1
                                    135 	.globl _EX1
                                    136 	.globl _ET0
                                    137 	.globl _EX0
                                    138 	.globl _P2_7
                                    139 	.globl _P2_6
                                    140 	.globl _P2_5
                                    141 	.globl _P2_4
                                    142 	.globl _P2_3
                                    143 	.globl _P2_2
                                    144 	.globl _P2_1
                                    145 	.globl _P2_0
                                    146 	.globl _S1MODE
                                    147 	.globl _MCE1
                                    148 	.globl _REN1
                                    149 	.globl _TB81
                                    150 	.globl _RB81
                                    151 	.globl _TI1
                                    152 	.globl _RI1
                                    153 	.globl _SM00
                                    154 	.globl _SM10
                                    155 	.globl _SM20
                                    156 	.globl _REN
                                    157 	.globl _REN0
                                    158 	.globl _TB80
                                    159 	.globl _RB80
                                    160 	.globl _TI
                                    161 	.globl _TI0
                                    162 	.globl _RI
                                    163 	.globl _RI0
                                    164 	.globl _P1_7
                                    165 	.globl _P1_6
                                    166 	.globl _P1_5
                                    167 	.globl _P1_4
                                    168 	.globl _P1_3
                                    169 	.globl _P1_2
                                    170 	.globl _P1_1
                                    171 	.globl _P1_0
                                    172 	.globl _FLHBUSY
                                    173 	.globl _CP1EN
                                    174 	.globl _CP1OUT
                                    175 	.globl _CP1RIF
                                    176 	.globl _CP1FIF
                                    177 	.globl _CP1HYP1
                                    178 	.globl _CP1HYP0
                                    179 	.globl _CP1HYN1
                                    180 	.globl _CP1HYN0
                                    181 	.globl _CP0EN
                                    182 	.globl _CP0OUT
                                    183 	.globl _CP0RIF
                                    184 	.globl _CP0FIF
                                    185 	.globl _CP0HYP1
                                    186 	.globl _CP0HYP0
                                    187 	.globl _CP0HYN1
                                    188 	.globl _CP0HYN0
                                    189 	.globl _TF1
                                    190 	.globl _TR1
                                    191 	.globl _TF0
                                    192 	.globl _TR0
                                    193 	.globl _IE1
                                    194 	.globl _IT1
                                    195 	.globl _IE0
                                    196 	.globl _IT0
                                    197 	.globl _P0_7
                                    198 	.globl _P0_6
                                    199 	.globl _P0_5
                                    200 	.globl _P0_4
                                    201 	.globl _P0_3
                                    202 	.globl _P0_2
                                    203 	.globl _P0_1
                                    204 	.globl _P0_0
                                    205 	.globl _MAC0RND
                                    206 	.globl _MAC0ACC
                                    207 	.globl _MAC0A
                                    208 	.globl _RCAP4
                                    209 	.globl _TMR4
                                    210 	.globl _DAC1
                                    211 	.globl _RCAP3
                                    212 	.globl _TMR3
                                    213 	.globl _PCA0CP5
                                    214 	.globl _PCA0CP4
                                    215 	.globl _PCA0CP3
                                    216 	.globl _PCA0CP2
                                    217 	.globl _PCA0CP1
                                    218 	.globl _PCA0CP0
                                    219 	.globl _PCA0
                                    220 	.globl _DAC0
                                    221 	.globl _ADC0LT
                                    222 	.globl _ADC0GT
                                    223 	.globl _ADC0
                                    224 	.globl _RCAP2
                                    225 	.globl _TMR2
                                    226 	.globl _TMR1
                                    227 	.globl _TMR0
                                    228 	.globl _P7
                                    229 	.globl _P6
                                    230 	.globl _XBR2
                                    231 	.globl _XBR1
                                    232 	.globl _XBR0
                                    233 	.globl _P5
                                    234 	.globl _P4
                                    235 	.globl _FLACL
                                    236 	.globl _P1MDIN
                                    237 	.globl _P3MDOUT
                                    238 	.globl _P2MDOUT
                                    239 	.globl _P1MDOUT
                                    240 	.globl _P0MDOUT
                                    241 	.globl _CCH0LC
                                    242 	.globl _CCH0TN
                                    243 	.globl _CCH0CN
                                    244 	.globl _P7MDOUT
                                    245 	.globl _P6MDOUT
                                    246 	.globl _P5MDOUT
                                    247 	.globl _P4MDOUT
                                    248 	.globl _CCH0MA
                                    249 	.globl _CLKSEL
                                    250 	.globl _SFRPGCN
                                    251 	.globl _PLL0FLT
                                    252 	.globl _PLL0MUL
                                    253 	.globl _PLL0DIV
                                    254 	.globl _OSCXCN
                                    255 	.globl _OSCICL
                                    256 	.globl _OSCICN
                                    257 	.globl _PLL0CN
                                    258 	.globl _FLSTAT
                                    259 	.globl _MAC0RNDH
                                    260 	.globl _MAC0RNDL
                                    261 	.globl _MAC0CF
                                    262 	.globl _MAC0AH
                                    263 	.globl _MAC0AL
                                    264 	.globl _MAC0STA
                                    265 	.globl _MAC0OVR
                                    266 	.globl _MAC0ACC3
                                    267 	.globl _MAC0ACC2
                                    268 	.globl _MAC0ACC1
                                    269 	.globl _MAC0ACC0
                                    270 	.globl _MAC0BH
                                    271 	.globl _MAC0BL
                                    272 	.globl _ADC2CN
                                    273 	.globl _TMR4H
                                    274 	.globl _TMR4L
                                    275 	.globl _RCAP4H
                                    276 	.globl _RCAP4L
                                    277 	.globl _TMR4CF
                                    278 	.globl _TMR4CN
                                    279 	.globl _ADC2LT
                                    280 	.globl _ADC2GT
                                    281 	.globl _ADC2
                                    282 	.globl _ADC2CF
                                    283 	.globl _AMX2SL
                                    284 	.globl _AMX2CF
                                    285 	.globl _CPT1MD
                                    286 	.globl _CPT1CN
                                    287 	.globl _DAC1CN
                                    288 	.globl _DAC1H
                                    289 	.globl _DAC1L
                                    290 	.globl _TMR3H
                                    291 	.globl _TMR3L
                                    292 	.globl _RCAP3H
                                    293 	.globl _RCAP3L
                                    294 	.globl _TMR3CF
                                    295 	.globl _TMR3CN
                                    296 	.globl _SBUF1
                                    297 	.globl _SCON1
                                    298 	.globl _CPT0MD
                                    299 	.globl _CPT0CN
                                    300 	.globl _PCA0CPH1
                                    301 	.globl _PCA0CPL1
                                    302 	.globl _PCA0CPH0
                                    303 	.globl _PCA0CPL0
                                    304 	.globl _PCA0H
                                    305 	.globl _PCA0L
                                    306 	.globl _SPI0CN
                                    307 	.globl _RSTSRC
                                    308 	.globl _PCA0CPH4
                                    309 	.globl _PCA0CPL4
                                    310 	.globl _PCA0CPH3
                                    311 	.globl _PCA0CPL3
                                    312 	.globl _PCA0CPH2
                                    313 	.globl _PCA0CPL2
                                    314 	.globl _ADC0CN
                                    315 	.globl _PCA0CPH5
                                    316 	.globl _PCA0CPL5
                                    317 	.globl _PCA0CPM5
                                    318 	.globl _PCA0CPM4
                                    319 	.globl _PCA0CPM3
                                    320 	.globl _PCA0CPM2
                                    321 	.globl _PCA0CPM1
                                    322 	.globl _PCA0CPM0
                                    323 	.globl _PCA0MD
                                    324 	.globl _PCA0CN
                                    325 	.globl _DAC0CN
                                    326 	.globl _DAC0H
                                    327 	.globl _DAC0L
                                    328 	.globl _REF0CN
                                    329 	.globl _SMB0CR
                                    330 	.globl _TH2
                                    331 	.globl _TMR2H
                                    332 	.globl _TL2
                                    333 	.globl _TMR2L
                                    334 	.globl _RCAP2H
                                    335 	.globl _RCAP2L
                                    336 	.globl _TMR2CF
                                    337 	.globl _TMR2CN
                                    338 	.globl _ADC0LTH
                                    339 	.globl _ADC0LTL
                                    340 	.globl _ADC0GTH
                                    341 	.globl _ADC0GTL
                                    342 	.globl _SMB0ADR
                                    343 	.globl _SMB0DAT
                                    344 	.globl _SMB0STA
                                    345 	.globl _SMB0CN
                                    346 	.globl _ADC0H
                                    347 	.globl _ADC0L
                                    348 	.globl _ADC0CF
                                    349 	.globl _AMX0SL
                                    350 	.globl _AMX0CF
                                    351 	.globl _SADEN0
                                    352 	.globl _FLSCL
                                    353 	.globl _SADDR0
                                    354 	.globl _EMI0CF
                                    355 	.globl __XPAGE
                                    356 	.globl _EMI0CN
                                    357 	.globl _EMI0TC
                                    358 	.globl _SPI0CKR
                                    359 	.globl _SPI0DAT
                                    360 	.globl _SPI0CFG
                                    361 	.globl _SBUF
                                    362 	.globl _SBUF0
                                    363 	.globl _SCON
                                    364 	.globl _SCON0
                                    365 	.globl _SSTA0
                                    366 	.globl _PSCTL
                                    367 	.globl _CKCON
                                    368 	.globl _TH1
                                    369 	.globl _TH0
                                    370 	.globl _TL1
                                    371 	.globl _TL0
                                    372 	.globl _TMOD
                                    373 	.globl _TCON
                                    374 	.globl _WDTCN
                                    375 	.globl _EIP2
                                    376 	.globl _EIP1
                                    377 	.globl _B
                                    378 	.globl _EIE2
                                    379 	.globl _EIE1
                                    380 	.globl _ACC
                                    381 	.globl _PSW
                                    382 	.globl _IP
                                    383 	.globl _PSBANK
                                    384 	.globl _P3
                                    385 	.globl _IE
                                    386 	.globl _P2
                                    387 	.globl _P1
                                    388 	.globl _PCON
                                    389 	.globl _SFRLAST
                                    390 	.globl _SFRNEXT
                                    391 	.globl _SFRPAGE
                                    392 	.globl _DPH
                                    393 	.globl _DPL
                                    394 	.globl _SP
                                    395 	.globl _P0
                                    396 	.globl _counts
                                    397 	.globl _alien_ct
                                    398 	.globl _local_ct
                                    399 	.globl _putchar
                                    400 	.globl _getchar
                                    401 	.globl _main
                                    402 	.globl _local
                                    403 	.globl _foreign
                                    404 	.globl _read
                                    405 	.globl _dread
                                    406 	.globl _write
                                    407 	.globl _dummy
                                    408 	.globl _Timer1_ISR
                                    409 	.globl _SYSCLK_INIT
                                    410 	.globl _Timer_Init
                                    411 	.globl _UART_Init
                                    412 	.globl _Port_IO_Init
                                    413 	.globl _SPI0_INIT
                                    414 ;--------------------------------------------------------
                                    415 ; special function registers
                                    416 ;--------------------------------------------------------
                                    417 	.area RSEG    (ABS,DATA)
      000000                        418 	.org 0x0000
                           000080   419 G$P0$0$0 == 0x0080
                           000080   420 _P0	=	0x0080
                           000081   421 G$SP$0$0 == 0x0081
                           000081   422 _SP	=	0x0081
                           000082   423 G$DPL$0$0 == 0x0082
                           000082   424 _DPL	=	0x0082
                           000083   425 G$DPH$0$0 == 0x0083
                           000083   426 _DPH	=	0x0083
                           000084   427 G$SFRPAGE$0$0 == 0x0084
                           000084   428 _SFRPAGE	=	0x0084
                           000085   429 G$SFRNEXT$0$0 == 0x0085
                           000085   430 _SFRNEXT	=	0x0085
                           000086   431 G$SFRLAST$0$0 == 0x0086
                           000086   432 _SFRLAST	=	0x0086
                           000087   433 G$PCON$0$0 == 0x0087
                           000087   434 _PCON	=	0x0087
                           000090   435 G$P1$0$0 == 0x0090
                           000090   436 _P1	=	0x0090
                           0000A0   437 G$P2$0$0 == 0x00a0
                           0000A0   438 _P2	=	0x00a0
                           0000A8   439 G$IE$0$0 == 0x00a8
                           0000A8   440 _IE	=	0x00a8
                           0000B0   441 G$P3$0$0 == 0x00b0
                           0000B0   442 _P3	=	0x00b0
                           0000B1   443 G$PSBANK$0$0 == 0x00b1
                           0000B1   444 _PSBANK	=	0x00b1
                           0000B8   445 G$IP$0$0 == 0x00b8
                           0000B8   446 _IP	=	0x00b8
                           0000D0   447 G$PSW$0$0 == 0x00d0
                           0000D0   448 _PSW	=	0x00d0
                           0000E0   449 G$ACC$0$0 == 0x00e0
                           0000E0   450 _ACC	=	0x00e0
                           0000E6   451 G$EIE1$0$0 == 0x00e6
                           0000E6   452 _EIE1	=	0x00e6
                           0000E7   453 G$EIE2$0$0 == 0x00e7
                           0000E7   454 _EIE2	=	0x00e7
                           0000F0   455 G$B$0$0 == 0x00f0
                           0000F0   456 _B	=	0x00f0
                           0000F6   457 G$EIP1$0$0 == 0x00f6
                           0000F6   458 _EIP1	=	0x00f6
                           0000F7   459 G$EIP2$0$0 == 0x00f7
                           0000F7   460 _EIP2	=	0x00f7
                           0000FF   461 G$WDTCN$0$0 == 0x00ff
                           0000FF   462 _WDTCN	=	0x00ff
                           000088   463 G$TCON$0$0 == 0x0088
                           000088   464 _TCON	=	0x0088
                           000089   465 G$TMOD$0$0 == 0x0089
                           000089   466 _TMOD	=	0x0089
                           00008A   467 G$TL0$0$0 == 0x008a
                           00008A   468 _TL0	=	0x008a
                           00008B   469 G$TL1$0$0 == 0x008b
                           00008B   470 _TL1	=	0x008b
                           00008C   471 G$TH0$0$0 == 0x008c
                           00008C   472 _TH0	=	0x008c
                           00008D   473 G$TH1$0$0 == 0x008d
                           00008D   474 _TH1	=	0x008d
                           00008E   475 G$CKCON$0$0 == 0x008e
                           00008E   476 _CKCON	=	0x008e
                           00008F   477 G$PSCTL$0$0 == 0x008f
                           00008F   478 _PSCTL	=	0x008f
                           000091   479 G$SSTA0$0$0 == 0x0091
                           000091   480 _SSTA0	=	0x0091
                           000098   481 G$SCON0$0$0 == 0x0098
                           000098   482 _SCON0	=	0x0098
                           000098   483 G$SCON$0$0 == 0x0098
                           000098   484 _SCON	=	0x0098
                           000099   485 G$SBUF0$0$0 == 0x0099
                           000099   486 _SBUF0	=	0x0099
                           000099   487 G$SBUF$0$0 == 0x0099
                           000099   488 _SBUF	=	0x0099
                           00009A   489 G$SPI0CFG$0$0 == 0x009a
                           00009A   490 _SPI0CFG	=	0x009a
                           00009B   491 G$SPI0DAT$0$0 == 0x009b
                           00009B   492 _SPI0DAT	=	0x009b
                           00009D   493 G$SPI0CKR$0$0 == 0x009d
                           00009D   494 _SPI0CKR	=	0x009d
                           0000A1   495 G$EMI0TC$0$0 == 0x00a1
                           0000A1   496 _EMI0TC	=	0x00a1
                           0000A2   497 G$EMI0CN$0$0 == 0x00a2
                           0000A2   498 _EMI0CN	=	0x00a2
                           0000A2   499 G$_XPAGE$0$0 == 0x00a2
                           0000A2   500 __XPAGE	=	0x00a2
                           0000A3   501 G$EMI0CF$0$0 == 0x00a3
                           0000A3   502 _EMI0CF	=	0x00a3
                           0000A9   503 G$SADDR0$0$0 == 0x00a9
                           0000A9   504 _SADDR0	=	0x00a9
                           0000B7   505 G$FLSCL$0$0 == 0x00b7
                           0000B7   506 _FLSCL	=	0x00b7
                           0000B9   507 G$SADEN0$0$0 == 0x00b9
                           0000B9   508 _SADEN0	=	0x00b9
                           0000BA   509 G$AMX0CF$0$0 == 0x00ba
                           0000BA   510 _AMX0CF	=	0x00ba
                           0000BB   511 G$AMX0SL$0$0 == 0x00bb
                           0000BB   512 _AMX0SL	=	0x00bb
                           0000BC   513 G$ADC0CF$0$0 == 0x00bc
                           0000BC   514 _ADC0CF	=	0x00bc
                           0000BE   515 G$ADC0L$0$0 == 0x00be
                           0000BE   516 _ADC0L	=	0x00be
                           0000BF   517 G$ADC0H$0$0 == 0x00bf
                           0000BF   518 _ADC0H	=	0x00bf
                           0000C0   519 G$SMB0CN$0$0 == 0x00c0
                           0000C0   520 _SMB0CN	=	0x00c0
                           0000C1   521 G$SMB0STA$0$0 == 0x00c1
                           0000C1   522 _SMB0STA	=	0x00c1
                           0000C2   523 G$SMB0DAT$0$0 == 0x00c2
                           0000C2   524 _SMB0DAT	=	0x00c2
                           0000C3   525 G$SMB0ADR$0$0 == 0x00c3
                           0000C3   526 _SMB0ADR	=	0x00c3
                           0000C4   527 G$ADC0GTL$0$0 == 0x00c4
                           0000C4   528 _ADC0GTL	=	0x00c4
                           0000C5   529 G$ADC0GTH$0$0 == 0x00c5
                           0000C5   530 _ADC0GTH	=	0x00c5
                           0000C6   531 G$ADC0LTL$0$0 == 0x00c6
                           0000C6   532 _ADC0LTL	=	0x00c6
                           0000C7   533 G$ADC0LTH$0$0 == 0x00c7
                           0000C7   534 _ADC0LTH	=	0x00c7
                           0000C8   535 G$TMR2CN$0$0 == 0x00c8
                           0000C8   536 _TMR2CN	=	0x00c8
                           0000C9   537 G$TMR2CF$0$0 == 0x00c9
                           0000C9   538 _TMR2CF	=	0x00c9
                           0000CA   539 G$RCAP2L$0$0 == 0x00ca
                           0000CA   540 _RCAP2L	=	0x00ca
                           0000CB   541 G$RCAP2H$0$0 == 0x00cb
                           0000CB   542 _RCAP2H	=	0x00cb
                           0000CC   543 G$TMR2L$0$0 == 0x00cc
                           0000CC   544 _TMR2L	=	0x00cc
                           0000CC   545 G$TL2$0$0 == 0x00cc
                           0000CC   546 _TL2	=	0x00cc
                           0000CD   547 G$TMR2H$0$0 == 0x00cd
                           0000CD   548 _TMR2H	=	0x00cd
                           0000CD   549 G$TH2$0$0 == 0x00cd
                           0000CD   550 _TH2	=	0x00cd
                           0000CF   551 G$SMB0CR$0$0 == 0x00cf
                           0000CF   552 _SMB0CR	=	0x00cf
                           0000D1   553 G$REF0CN$0$0 == 0x00d1
                           0000D1   554 _REF0CN	=	0x00d1
                           0000D2   555 G$DAC0L$0$0 == 0x00d2
                           0000D2   556 _DAC0L	=	0x00d2
                           0000D3   557 G$DAC0H$0$0 == 0x00d3
                           0000D3   558 _DAC0H	=	0x00d3
                           0000D4   559 G$DAC0CN$0$0 == 0x00d4
                           0000D4   560 _DAC0CN	=	0x00d4
                           0000D8   561 G$PCA0CN$0$0 == 0x00d8
                           0000D8   562 _PCA0CN	=	0x00d8
                           0000D9   563 G$PCA0MD$0$0 == 0x00d9
                           0000D9   564 _PCA0MD	=	0x00d9
                           0000DA   565 G$PCA0CPM0$0$0 == 0x00da
                           0000DA   566 _PCA0CPM0	=	0x00da
                           0000DB   567 G$PCA0CPM1$0$0 == 0x00db
                           0000DB   568 _PCA0CPM1	=	0x00db
                           0000DC   569 G$PCA0CPM2$0$0 == 0x00dc
                           0000DC   570 _PCA0CPM2	=	0x00dc
                           0000DD   571 G$PCA0CPM3$0$0 == 0x00dd
                           0000DD   572 _PCA0CPM3	=	0x00dd
                           0000DE   573 G$PCA0CPM4$0$0 == 0x00de
                           0000DE   574 _PCA0CPM4	=	0x00de
                           0000DF   575 G$PCA0CPM5$0$0 == 0x00df
                           0000DF   576 _PCA0CPM5	=	0x00df
                           0000E1   577 G$PCA0CPL5$0$0 == 0x00e1
                           0000E1   578 _PCA0CPL5	=	0x00e1
                           0000E2   579 G$PCA0CPH5$0$0 == 0x00e2
                           0000E2   580 _PCA0CPH5	=	0x00e2
                           0000E8   581 G$ADC0CN$0$0 == 0x00e8
                           0000E8   582 _ADC0CN	=	0x00e8
                           0000E9   583 G$PCA0CPL2$0$0 == 0x00e9
                           0000E9   584 _PCA0CPL2	=	0x00e9
                           0000EA   585 G$PCA0CPH2$0$0 == 0x00ea
                           0000EA   586 _PCA0CPH2	=	0x00ea
                           0000EB   587 G$PCA0CPL3$0$0 == 0x00eb
                           0000EB   588 _PCA0CPL3	=	0x00eb
                           0000EC   589 G$PCA0CPH3$0$0 == 0x00ec
                           0000EC   590 _PCA0CPH3	=	0x00ec
                           0000ED   591 G$PCA0CPL4$0$0 == 0x00ed
                           0000ED   592 _PCA0CPL4	=	0x00ed
                           0000EE   593 G$PCA0CPH4$0$0 == 0x00ee
                           0000EE   594 _PCA0CPH4	=	0x00ee
                           0000EF   595 G$RSTSRC$0$0 == 0x00ef
                           0000EF   596 _RSTSRC	=	0x00ef
                           0000F8   597 G$SPI0CN$0$0 == 0x00f8
                           0000F8   598 _SPI0CN	=	0x00f8
                           0000F9   599 G$PCA0L$0$0 == 0x00f9
                           0000F9   600 _PCA0L	=	0x00f9
                           0000FA   601 G$PCA0H$0$0 == 0x00fa
                           0000FA   602 _PCA0H	=	0x00fa
                           0000FB   603 G$PCA0CPL0$0$0 == 0x00fb
                           0000FB   604 _PCA0CPL0	=	0x00fb
                           0000FC   605 G$PCA0CPH0$0$0 == 0x00fc
                           0000FC   606 _PCA0CPH0	=	0x00fc
                           0000FD   607 G$PCA0CPL1$0$0 == 0x00fd
                           0000FD   608 _PCA0CPL1	=	0x00fd
                           0000FE   609 G$PCA0CPH1$0$0 == 0x00fe
                           0000FE   610 _PCA0CPH1	=	0x00fe
                           000088   611 G$CPT0CN$0$0 == 0x0088
                           000088   612 _CPT0CN	=	0x0088
                           000089   613 G$CPT0MD$0$0 == 0x0089
                           000089   614 _CPT0MD	=	0x0089
                           000098   615 G$SCON1$0$0 == 0x0098
                           000098   616 _SCON1	=	0x0098
                           000099   617 G$SBUF1$0$0 == 0x0099
                           000099   618 _SBUF1	=	0x0099
                           0000C8   619 G$TMR3CN$0$0 == 0x00c8
                           0000C8   620 _TMR3CN	=	0x00c8
                           0000C9   621 G$TMR3CF$0$0 == 0x00c9
                           0000C9   622 _TMR3CF	=	0x00c9
                           0000CA   623 G$RCAP3L$0$0 == 0x00ca
                           0000CA   624 _RCAP3L	=	0x00ca
                           0000CB   625 G$RCAP3H$0$0 == 0x00cb
                           0000CB   626 _RCAP3H	=	0x00cb
                           0000CC   627 G$TMR3L$0$0 == 0x00cc
                           0000CC   628 _TMR3L	=	0x00cc
                           0000CD   629 G$TMR3H$0$0 == 0x00cd
                           0000CD   630 _TMR3H	=	0x00cd
                           0000D2   631 G$DAC1L$0$0 == 0x00d2
                           0000D2   632 _DAC1L	=	0x00d2
                           0000D3   633 G$DAC1H$0$0 == 0x00d3
                           0000D3   634 _DAC1H	=	0x00d3
                           0000D4   635 G$DAC1CN$0$0 == 0x00d4
                           0000D4   636 _DAC1CN	=	0x00d4
                           000088   637 G$CPT1CN$0$0 == 0x0088
                           000088   638 _CPT1CN	=	0x0088
                           000089   639 G$CPT1MD$0$0 == 0x0089
                           000089   640 _CPT1MD	=	0x0089
                           0000BA   641 G$AMX2CF$0$0 == 0x00ba
                           0000BA   642 _AMX2CF	=	0x00ba
                           0000BB   643 G$AMX2SL$0$0 == 0x00bb
                           0000BB   644 _AMX2SL	=	0x00bb
                           0000BC   645 G$ADC2CF$0$0 == 0x00bc
                           0000BC   646 _ADC2CF	=	0x00bc
                           0000BE   647 G$ADC2$0$0 == 0x00be
                           0000BE   648 _ADC2	=	0x00be
                           0000C4   649 G$ADC2GT$0$0 == 0x00c4
                           0000C4   650 _ADC2GT	=	0x00c4
                           0000C6   651 G$ADC2LT$0$0 == 0x00c6
                           0000C6   652 _ADC2LT	=	0x00c6
                           0000C8   653 G$TMR4CN$0$0 == 0x00c8
                           0000C8   654 _TMR4CN	=	0x00c8
                           0000C9   655 G$TMR4CF$0$0 == 0x00c9
                           0000C9   656 _TMR4CF	=	0x00c9
                           0000CA   657 G$RCAP4L$0$0 == 0x00ca
                           0000CA   658 _RCAP4L	=	0x00ca
                           0000CB   659 G$RCAP4H$0$0 == 0x00cb
                           0000CB   660 _RCAP4H	=	0x00cb
                           0000CC   661 G$TMR4L$0$0 == 0x00cc
                           0000CC   662 _TMR4L	=	0x00cc
                           0000CD   663 G$TMR4H$0$0 == 0x00cd
                           0000CD   664 _TMR4H	=	0x00cd
                           0000E8   665 G$ADC2CN$0$0 == 0x00e8
                           0000E8   666 _ADC2CN	=	0x00e8
                           000091   667 G$MAC0BL$0$0 == 0x0091
                           000091   668 _MAC0BL	=	0x0091
                           000092   669 G$MAC0BH$0$0 == 0x0092
                           000092   670 _MAC0BH	=	0x0092
                           000093   671 G$MAC0ACC0$0$0 == 0x0093
                           000093   672 _MAC0ACC0	=	0x0093
                           000094   673 G$MAC0ACC1$0$0 == 0x0094
                           000094   674 _MAC0ACC1	=	0x0094
                           000095   675 G$MAC0ACC2$0$0 == 0x0095
                           000095   676 _MAC0ACC2	=	0x0095
                           000096   677 G$MAC0ACC3$0$0 == 0x0096
                           000096   678 _MAC0ACC3	=	0x0096
                           000097   679 G$MAC0OVR$0$0 == 0x0097
                           000097   680 _MAC0OVR	=	0x0097
                           0000C0   681 G$MAC0STA$0$0 == 0x00c0
                           0000C0   682 _MAC0STA	=	0x00c0
                           0000C1   683 G$MAC0AL$0$0 == 0x00c1
                           0000C1   684 _MAC0AL	=	0x00c1
                           0000C2   685 G$MAC0AH$0$0 == 0x00c2
                           0000C2   686 _MAC0AH	=	0x00c2
                           0000C3   687 G$MAC0CF$0$0 == 0x00c3
                           0000C3   688 _MAC0CF	=	0x00c3
                           0000CE   689 G$MAC0RNDL$0$0 == 0x00ce
                           0000CE   690 _MAC0RNDL	=	0x00ce
                           0000CF   691 G$MAC0RNDH$0$0 == 0x00cf
                           0000CF   692 _MAC0RNDH	=	0x00cf
                           000088   693 G$FLSTAT$0$0 == 0x0088
                           000088   694 _FLSTAT	=	0x0088
                           000089   695 G$PLL0CN$0$0 == 0x0089
                           000089   696 _PLL0CN	=	0x0089
                           00008A   697 G$OSCICN$0$0 == 0x008a
                           00008A   698 _OSCICN	=	0x008a
                           00008B   699 G$OSCICL$0$0 == 0x008b
                           00008B   700 _OSCICL	=	0x008b
                           00008C   701 G$OSCXCN$0$0 == 0x008c
                           00008C   702 _OSCXCN	=	0x008c
                           00008D   703 G$PLL0DIV$0$0 == 0x008d
                           00008D   704 _PLL0DIV	=	0x008d
                           00008E   705 G$PLL0MUL$0$0 == 0x008e
                           00008E   706 _PLL0MUL	=	0x008e
                           00008F   707 G$PLL0FLT$0$0 == 0x008f
                           00008F   708 _PLL0FLT	=	0x008f
                           000096   709 G$SFRPGCN$0$0 == 0x0096
                           000096   710 _SFRPGCN	=	0x0096
                           000097   711 G$CLKSEL$0$0 == 0x0097
                           000097   712 _CLKSEL	=	0x0097
                           00009A   713 G$CCH0MA$0$0 == 0x009a
                           00009A   714 _CCH0MA	=	0x009a
                           00009C   715 G$P4MDOUT$0$0 == 0x009c
                           00009C   716 _P4MDOUT	=	0x009c
                           00009D   717 G$P5MDOUT$0$0 == 0x009d
                           00009D   718 _P5MDOUT	=	0x009d
                           00009E   719 G$P6MDOUT$0$0 == 0x009e
                           00009E   720 _P6MDOUT	=	0x009e
                           00009F   721 G$P7MDOUT$0$0 == 0x009f
                           00009F   722 _P7MDOUT	=	0x009f
                           0000A1   723 G$CCH0CN$0$0 == 0x00a1
                           0000A1   724 _CCH0CN	=	0x00a1
                           0000A2   725 G$CCH0TN$0$0 == 0x00a2
                           0000A2   726 _CCH0TN	=	0x00a2
                           0000A3   727 G$CCH0LC$0$0 == 0x00a3
                           0000A3   728 _CCH0LC	=	0x00a3
                           0000A4   729 G$P0MDOUT$0$0 == 0x00a4
                           0000A4   730 _P0MDOUT	=	0x00a4
                           0000A5   731 G$P1MDOUT$0$0 == 0x00a5
                           0000A5   732 _P1MDOUT	=	0x00a5
                           0000A6   733 G$P2MDOUT$0$0 == 0x00a6
                           0000A6   734 _P2MDOUT	=	0x00a6
                           0000A7   735 G$P3MDOUT$0$0 == 0x00a7
                           0000A7   736 _P3MDOUT	=	0x00a7
                           0000AD   737 G$P1MDIN$0$0 == 0x00ad
                           0000AD   738 _P1MDIN	=	0x00ad
                           0000B7   739 G$FLACL$0$0 == 0x00b7
                           0000B7   740 _FLACL	=	0x00b7
                           0000C8   741 G$P4$0$0 == 0x00c8
                           0000C8   742 _P4	=	0x00c8
                           0000D8   743 G$P5$0$0 == 0x00d8
                           0000D8   744 _P5	=	0x00d8
                           0000E1   745 G$XBR0$0$0 == 0x00e1
                           0000E1   746 _XBR0	=	0x00e1
                           0000E2   747 G$XBR1$0$0 == 0x00e2
                           0000E2   748 _XBR1	=	0x00e2
                           0000E3   749 G$XBR2$0$0 == 0x00e3
                           0000E3   750 _XBR2	=	0x00e3
                           0000E8   751 G$P6$0$0 == 0x00e8
                           0000E8   752 _P6	=	0x00e8
                           0000F8   753 G$P7$0$0 == 0x00f8
                           0000F8   754 _P7	=	0x00f8
                           008C8A   755 G$TMR0$0$0 == 0x8c8a
                           008C8A   756 _TMR0	=	0x8c8a
                           008D8B   757 G$TMR1$0$0 == 0x8d8b
                           008D8B   758 _TMR1	=	0x8d8b
                           00CDCC   759 G$TMR2$0$0 == 0xcdcc
                           00CDCC   760 _TMR2	=	0xcdcc
                           00CBCA   761 G$RCAP2$0$0 == 0xcbca
                           00CBCA   762 _RCAP2	=	0xcbca
                           00BFBE   763 G$ADC0$0$0 == 0xbfbe
                           00BFBE   764 _ADC0	=	0xbfbe
                           00C5C4   765 G$ADC0GT$0$0 == 0xc5c4
                           00C5C4   766 _ADC0GT	=	0xc5c4
                           00C7C6   767 G$ADC0LT$0$0 == 0xc7c6
                           00C7C6   768 _ADC0LT	=	0xc7c6
                           00D3D2   769 G$DAC0$0$0 == 0xd3d2
                           00D3D2   770 _DAC0	=	0xd3d2
                           00FAF9   771 G$PCA0$0$0 == 0xfaf9
                           00FAF9   772 _PCA0	=	0xfaf9
                           00FCFB   773 G$PCA0CP0$0$0 == 0xfcfb
                           00FCFB   774 _PCA0CP0	=	0xfcfb
                           00FEFD   775 G$PCA0CP1$0$0 == 0xfefd
                           00FEFD   776 _PCA0CP1	=	0xfefd
                           00EAE9   777 G$PCA0CP2$0$0 == 0xeae9
                           00EAE9   778 _PCA0CP2	=	0xeae9
                           00ECEB   779 G$PCA0CP3$0$0 == 0xeceb
                           00ECEB   780 _PCA0CP3	=	0xeceb
                           00EEED   781 G$PCA0CP4$0$0 == 0xeeed
                           00EEED   782 _PCA0CP4	=	0xeeed
                           00E2E1   783 G$PCA0CP5$0$0 == 0xe2e1
                           00E2E1   784 _PCA0CP5	=	0xe2e1
                           00CDCC   785 G$TMR3$0$0 == 0xcdcc
                           00CDCC   786 _TMR3	=	0xcdcc
                           00CBCA   787 G$RCAP3$0$0 == 0xcbca
                           00CBCA   788 _RCAP3	=	0xcbca
                           00D3D2   789 G$DAC1$0$0 == 0xd3d2
                           00D3D2   790 _DAC1	=	0xd3d2
                           00CDCC   791 G$TMR4$0$0 == 0xcdcc
                           00CDCC   792 _TMR4	=	0xcdcc
                           00CBCA   793 G$RCAP4$0$0 == 0xcbca
                           00CBCA   794 _RCAP4	=	0xcbca
                           00C2C1   795 G$MAC0A$0$0 == 0xc2c1
                           00C2C1   796 _MAC0A	=	0xc2c1
                           96959493   797 G$MAC0ACC$0$0 == 0x96959493
                           96959493   798 _MAC0ACC	=	0x96959493
                           00CFCE   799 G$MAC0RND$0$0 == 0xcfce
                           00CFCE   800 _MAC0RND	=	0xcfce
                                    801 ;--------------------------------------------------------
                                    802 ; special function bits
                                    803 ;--------------------------------------------------------
                                    804 	.area RSEG    (ABS,DATA)
      000000                        805 	.org 0x0000
                           000080   806 G$P0_0$0$0 == 0x0080
                           000080   807 _P0_0	=	0x0080
                           000081   808 G$P0_1$0$0 == 0x0081
                           000081   809 _P0_1	=	0x0081
                           000082   810 G$P0_2$0$0 == 0x0082
                           000082   811 _P0_2	=	0x0082
                           000083   812 G$P0_3$0$0 == 0x0083
                           000083   813 _P0_3	=	0x0083
                           000084   814 G$P0_4$0$0 == 0x0084
                           000084   815 _P0_4	=	0x0084
                           000085   816 G$P0_5$0$0 == 0x0085
                           000085   817 _P0_5	=	0x0085
                           000086   818 G$P0_6$0$0 == 0x0086
                           000086   819 _P0_6	=	0x0086
                           000087   820 G$P0_7$0$0 == 0x0087
                           000087   821 _P0_7	=	0x0087
                           000088   822 G$IT0$0$0 == 0x0088
                           000088   823 _IT0	=	0x0088
                           000089   824 G$IE0$0$0 == 0x0089
                           000089   825 _IE0	=	0x0089
                           00008A   826 G$IT1$0$0 == 0x008a
                           00008A   827 _IT1	=	0x008a
                           00008B   828 G$IE1$0$0 == 0x008b
                           00008B   829 _IE1	=	0x008b
                           00008C   830 G$TR0$0$0 == 0x008c
                           00008C   831 _TR0	=	0x008c
                           00008D   832 G$TF0$0$0 == 0x008d
                           00008D   833 _TF0	=	0x008d
                           00008E   834 G$TR1$0$0 == 0x008e
                           00008E   835 _TR1	=	0x008e
                           00008F   836 G$TF1$0$0 == 0x008f
                           00008F   837 _TF1	=	0x008f
                           000088   838 G$CP0HYN0$0$0 == 0x0088
                           000088   839 _CP0HYN0	=	0x0088
                           000089   840 G$CP0HYN1$0$0 == 0x0089
                           000089   841 _CP0HYN1	=	0x0089
                           00008A   842 G$CP0HYP0$0$0 == 0x008a
                           00008A   843 _CP0HYP0	=	0x008a
                           00008B   844 G$CP0HYP1$0$0 == 0x008b
                           00008B   845 _CP0HYP1	=	0x008b
                           00008C   846 G$CP0FIF$0$0 == 0x008c
                           00008C   847 _CP0FIF	=	0x008c
                           00008D   848 G$CP0RIF$0$0 == 0x008d
                           00008D   849 _CP0RIF	=	0x008d
                           00008E   850 G$CP0OUT$0$0 == 0x008e
                           00008E   851 _CP0OUT	=	0x008e
                           00008F   852 G$CP0EN$0$0 == 0x008f
                           00008F   853 _CP0EN	=	0x008f
                           000088   854 G$CP1HYN0$0$0 == 0x0088
                           000088   855 _CP1HYN0	=	0x0088
                           000089   856 G$CP1HYN1$0$0 == 0x0089
                           000089   857 _CP1HYN1	=	0x0089
                           00008A   858 G$CP1HYP0$0$0 == 0x008a
                           00008A   859 _CP1HYP0	=	0x008a
                           00008B   860 G$CP1HYP1$0$0 == 0x008b
                           00008B   861 _CP1HYP1	=	0x008b
                           00008C   862 G$CP1FIF$0$0 == 0x008c
                           00008C   863 _CP1FIF	=	0x008c
                           00008D   864 G$CP1RIF$0$0 == 0x008d
                           00008D   865 _CP1RIF	=	0x008d
                           00008E   866 G$CP1OUT$0$0 == 0x008e
                           00008E   867 _CP1OUT	=	0x008e
                           00008F   868 G$CP1EN$0$0 == 0x008f
                           00008F   869 _CP1EN	=	0x008f
                           000088   870 G$FLHBUSY$0$0 == 0x0088
                           000088   871 _FLHBUSY	=	0x0088
                           000090   872 G$P1_0$0$0 == 0x0090
                           000090   873 _P1_0	=	0x0090
                           000091   874 G$P1_1$0$0 == 0x0091
                           000091   875 _P1_1	=	0x0091
                           000092   876 G$P1_2$0$0 == 0x0092
                           000092   877 _P1_2	=	0x0092
                           000093   878 G$P1_3$0$0 == 0x0093
                           000093   879 _P1_3	=	0x0093
                           000094   880 G$P1_4$0$0 == 0x0094
                           000094   881 _P1_4	=	0x0094
                           000095   882 G$P1_5$0$0 == 0x0095
                           000095   883 _P1_5	=	0x0095
                           000096   884 G$P1_6$0$0 == 0x0096
                           000096   885 _P1_6	=	0x0096
                           000097   886 G$P1_7$0$0 == 0x0097
                           000097   887 _P1_7	=	0x0097
                           000098   888 G$RI0$0$0 == 0x0098
                           000098   889 _RI0	=	0x0098
                           000098   890 G$RI$0$0 == 0x0098
                           000098   891 _RI	=	0x0098
                           000099   892 G$TI0$0$0 == 0x0099
                           000099   893 _TI0	=	0x0099
                           000099   894 G$TI$0$0 == 0x0099
                           000099   895 _TI	=	0x0099
                           00009A   896 G$RB80$0$0 == 0x009a
                           00009A   897 _RB80	=	0x009a
                           00009B   898 G$TB80$0$0 == 0x009b
                           00009B   899 _TB80	=	0x009b
                           00009C   900 G$REN0$0$0 == 0x009c
                           00009C   901 _REN0	=	0x009c
                           00009C   902 G$REN$0$0 == 0x009c
                           00009C   903 _REN	=	0x009c
                           00009D   904 G$SM20$0$0 == 0x009d
                           00009D   905 _SM20	=	0x009d
                           00009E   906 G$SM10$0$0 == 0x009e
                           00009E   907 _SM10	=	0x009e
                           00009F   908 G$SM00$0$0 == 0x009f
                           00009F   909 _SM00	=	0x009f
                           000098   910 G$RI1$0$0 == 0x0098
                           000098   911 _RI1	=	0x0098
                           000099   912 G$TI1$0$0 == 0x0099
                           000099   913 _TI1	=	0x0099
                           00009A   914 G$RB81$0$0 == 0x009a
                           00009A   915 _RB81	=	0x009a
                           00009B   916 G$TB81$0$0 == 0x009b
                           00009B   917 _TB81	=	0x009b
                           00009C   918 G$REN1$0$0 == 0x009c
                           00009C   919 _REN1	=	0x009c
                           00009D   920 G$MCE1$0$0 == 0x009d
                           00009D   921 _MCE1	=	0x009d
                           00009F   922 G$S1MODE$0$0 == 0x009f
                           00009F   923 _S1MODE	=	0x009f
                           0000A0   924 G$P2_0$0$0 == 0x00a0
                           0000A0   925 _P2_0	=	0x00a0
                           0000A1   926 G$P2_1$0$0 == 0x00a1
                           0000A1   927 _P2_1	=	0x00a1
                           0000A2   928 G$P2_2$0$0 == 0x00a2
                           0000A2   929 _P2_2	=	0x00a2
                           0000A3   930 G$P2_3$0$0 == 0x00a3
                           0000A3   931 _P2_3	=	0x00a3
                           0000A4   932 G$P2_4$0$0 == 0x00a4
                           0000A4   933 _P2_4	=	0x00a4
                           0000A5   934 G$P2_5$0$0 == 0x00a5
                           0000A5   935 _P2_5	=	0x00a5
                           0000A6   936 G$P2_6$0$0 == 0x00a6
                           0000A6   937 _P2_6	=	0x00a6
                           0000A7   938 G$P2_7$0$0 == 0x00a7
                           0000A7   939 _P2_7	=	0x00a7
                           0000A8   940 G$EX0$0$0 == 0x00a8
                           0000A8   941 _EX0	=	0x00a8
                           0000A9   942 G$ET0$0$0 == 0x00a9
                           0000A9   943 _ET0	=	0x00a9
                           0000AA   944 G$EX1$0$0 == 0x00aa
                           0000AA   945 _EX1	=	0x00aa
                           0000AB   946 G$ET1$0$0 == 0x00ab
                           0000AB   947 _ET1	=	0x00ab
                           0000AC   948 G$ES0$0$0 == 0x00ac
                           0000AC   949 _ES0	=	0x00ac
                           0000AC   950 G$ES$0$0 == 0x00ac
                           0000AC   951 _ES	=	0x00ac
                           0000AD   952 G$ET2$0$0 == 0x00ad
                           0000AD   953 _ET2	=	0x00ad
                           0000AF   954 G$EA$0$0 == 0x00af
                           0000AF   955 _EA	=	0x00af
                           0000B0   956 G$P3_0$0$0 == 0x00b0
                           0000B0   957 _P3_0	=	0x00b0
                           0000B1   958 G$P3_1$0$0 == 0x00b1
                           0000B1   959 _P3_1	=	0x00b1
                           0000B2   960 G$P3_2$0$0 == 0x00b2
                           0000B2   961 _P3_2	=	0x00b2
                           0000B3   962 G$P3_3$0$0 == 0x00b3
                           0000B3   963 _P3_3	=	0x00b3
                           0000B4   964 G$P3_4$0$0 == 0x00b4
                           0000B4   965 _P3_4	=	0x00b4
                           0000B5   966 G$P3_5$0$0 == 0x00b5
                           0000B5   967 _P3_5	=	0x00b5
                           0000B6   968 G$P3_6$0$0 == 0x00b6
                           0000B6   969 _P3_6	=	0x00b6
                           0000B7   970 G$P3_7$0$0 == 0x00b7
                           0000B7   971 _P3_7	=	0x00b7
                           0000B8   972 G$PX0$0$0 == 0x00b8
                           0000B8   973 _PX0	=	0x00b8
                           0000B9   974 G$PT0$0$0 == 0x00b9
                           0000B9   975 _PT0	=	0x00b9
                           0000BA   976 G$PX1$0$0 == 0x00ba
                           0000BA   977 _PX1	=	0x00ba
                           0000BB   978 G$PT1$0$0 == 0x00bb
                           0000BB   979 _PT1	=	0x00bb
                           0000BC   980 G$PS0$0$0 == 0x00bc
                           0000BC   981 _PS0	=	0x00bc
                           0000BC   982 G$PS$0$0 == 0x00bc
                           0000BC   983 _PS	=	0x00bc
                           0000BD   984 G$PT2$0$0 == 0x00bd
                           0000BD   985 _PT2	=	0x00bd
                           0000C0   986 G$SMBTOE$0$0 == 0x00c0
                           0000C0   987 _SMBTOE	=	0x00c0
                           0000C1   988 G$SMBFTE$0$0 == 0x00c1
                           0000C1   989 _SMBFTE	=	0x00c1
                           0000C2   990 G$AA$0$0 == 0x00c2
                           0000C2   991 _AA	=	0x00c2
                           0000C3   992 G$SI$0$0 == 0x00c3
                           0000C3   993 _SI	=	0x00c3
                           0000C4   994 G$STO$0$0 == 0x00c4
                           0000C4   995 _STO	=	0x00c4
                           0000C5   996 G$STA$0$0 == 0x00c5
                           0000C5   997 _STA	=	0x00c5
                           0000C6   998 G$ENSMB$0$0 == 0x00c6
                           0000C6   999 _ENSMB	=	0x00c6
                           0000C7  1000 G$BUSY$0$0 == 0x00c7
                           0000C7  1001 _BUSY	=	0x00c7
                           0000C0  1002 G$MAC0N$0$0 == 0x00c0
                           0000C0  1003 _MAC0N	=	0x00c0
                           0000C1  1004 G$MAC0SO$0$0 == 0x00c1
                           0000C1  1005 _MAC0SO	=	0x00c1
                           0000C2  1006 G$MAC0Z$0$0 == 0x00c2
                           0000C2  1007 _MAC0Z	=	0x00c2
                           0000C3  1008 G$MAC0HO$0$0 == 0x00c3
                           0000C3  1009 _MAC0HO	=	0x00c3
                           0000C8  1010 G$CPRL2$0$0 == 0x00c8
                           0000C8  1011 _CPRL2	=	0x00c8
                           0000C9  1012 G$CT2$0$0 == 0x00c9
                           0000C9  1013 _CT2	=	0x00c9
                           0000CA  1014 G$TR2$0$0 == 0x00ca
                           0000CA  1015 _TR2	=	0x00ca
                           0000CB  1016 G$EXEN2$0$0 == 0x00cb
                           0000CB  1017 _EXEN2	=	0x00cb
                           0000CE  1018 G$EXF2$0$0 == 0x00ce
                           0000CE  1019 _EXF2	=	0x00ce
                           0000CF  1020 G$TF2$0$0 == 0x00cf
                           0000CF  1021 _TF2	=	0x00cf
                           0000C8  1022 G$CPRL3$0$0 == 0x00c8
                           0000C8  1023 _CPRL3	=	0x00c8
                           0000C9  1024 G$CT3$0$0 == 0x00c9
                           0000C9  1025 _CT3	=	0x00c9
                           0000CA  1026 G$TR3$0$0 == 0x00ca
                           0000CA  1027 _TR3	=	0x00ca
                           0000CB  1028 G$EXEN3$0$0 == 0x00cb
                           0000CB  1029 _EXEN3	=	0x00cb
                           0000CE  1030 G$EXF3$0$0 == 0x00ce
                           0000CE  1031 _EXF3	=	0x00ce
                           0000CF  1032 G$TF3$0$0 == 0x00cf
                           0000CF  1033 _TF3	=	0x00cf
                           0000C8  1034 G$CPRL4$0$0 == 0x00c8
                           0000C8  1035 _CPRL4	=	0x00c8
                           0000C9  1036 G$CT4$0$0 == 0x00c9
                           0000C9  1037 _CT4	=	0x00c9
                           0000CA  1038 G$TR4$0$0 == 0x00ca
                           0000CA  1039 _TR4	=	0x00ca
                           0000CB  1040 G$EXEN4$0$0 == 0x00cb
                           0000CB  1041 _EXEN4	=	0x00cb
                           0000CE  1042 G$EXF4$0$0 == 0x00ce
                           0000CE  1043 _EXF4	=	0x00ce
                           0000CF  1044 G$TF4$0$0 == 0x00cf
                           0000CF  1045 _TF4	=	0x00cf
                           0000C8  1046 G$P4_0$0$0 == 0x00c8
                           0000C8  1047 _P4_0	=	0x00c8
                           0000C9  1048 G$P4_1$0$0 == 0x00c9
                           0000C9  1049 _P4_1	=	0x00c9
                           0000CA  1050 G$P4_2$0$0 == 0x00ca
                           0000CA  1051 _P4_2	=	0x00ca
                           0000CB  1052 G$P4_3$0$0 == 0x00cb
                           0000CB  1053 _P4_3	=	0x00cb
                           0000CC  1054 G$P4_4$0$0 == 0x00cc
                           0000CC  1055 _P4_4	=	0x00cc
                           0000CD  1056 G$P4_5$0$0 == 0x00cd
                           0000CD  1057 _P4_5	=	0x00cd
                           0000CE  1058 G$P4_6$0$0 == 0x00ce
                           0000CE  1059 _P4_6	=	0x00ce
                           0000CF  1060 G$P4_7$0$0 == 0x00cf
                           0000CF  1061 _P4_7	=	0x00cf
                           0000D0  1062 G$P$0$0 == 0x00d0
                           0000D0  1063 _P	=	0x00d0
                           0000D1  1064 G$F1$0$0 == 0x00d1
                           0000D1  1065 _F1	=	0x00d1
                           0000D2  1066 G$OV$0$0 == 0x00d2
                           0000D2  1067 _OV	=	0x00d2
                           0000D3  1068 G$RS0$0$0 == 0x00d3
                           0000D3  1069 _RS0	=	0x00d3
                           0000D4  1070 G$RS1$0$0 == 0x00d4
                           0000D4  1071 _RS1	=	0x00d4
                           0000D5  1072 G$F0$0$0 == 0x00d5
                           0000D5  1073 _F0	=	0x00d5
                           0000D6  1074 G$AC$0$0 == 0x00d6
                           0000D6  1075 _AC	=	0x00d6
                           0000D7  1076 G$CY$0$0 == 0x00d7
                           0000D7  1077 _CY	=	0x00d7
                           0000D8  1078 G$CCF0$0$0 == 0x00d8
                           0000D8  1079 _CCF0	=	0x00d8
                           0000D9  1080 G$CCF1$0$0 == 0x00d9
                           0000D9  1081 _CCF1	=	0x00d9
                           0000DA  1082 G$CCF2$0$0 == 0x00da
                           0000DA  1083 _CCF2	=	0x00da
                           0000DB  1084 G$CCF3$0$0 == 0x00db
                           0000DB  1085 _CCF3	=	0x00db
                           0000DC  1086 G$CCF4$0$0 == 0x00dc
                           0000DC  1087 _CCF4	=	0x00dc
                           0000DD  1088 G$CCF5$0$0 == 0x00dd
                           0000DD  1089 _CCF5	=	0x00dd
                           0000DE  1090 G$CR$0$0 == 0x00de
                           0000DE  1091 _CR	=	0x00de
                           0000DF  1092 G$CF$0$0 == 0x00df
                           0000DF  1093 _CF	=	0x00df
                           0000D8  1094 G$P5_0$0$0 == 0x00d8
                           0000D8  1095 _P5_0	=	0x00d8
                           0000D9  1096 G$P5_1$0$0 == 0x00d9
                           0000D9  1097 _P5_1	=	0x00d9
                           0000DA  1098 G$P5_2$0$0 == 0x00da
                           0000DA  1099 _P5_2	=	0x00da
                           0000DB  1100 G$P5_3$0$0 == 0x00db
                           0000DB  1101 _P5_3	=	0x00db
                           0000DC  1102 G$P5_4$0$0 == 0x00dc
                           0000DC  1103 _P5_4	=	0x00dc
                           0000DD  1104 G$P5_5$0$0 == 0x00dd
                           0000DD  1105 _P5_5	=	0x00dd
                           0000DE  1106 G$P5_6$0$0 == 0x00de
                           0000DE  1107 _P5_6	=	0x00de
                           0000DF  1108 G$P5_7$0$0 == 0x00df
                           0000DF  1109 _P5_7	=	0x00df
                           0000E8  1110 G$AD0LJST$0$0 == 0x00e8
                           0000E8  1111 _AD0LJST	=	0x00e8
                           0000E9  1112 G$AD0WINT$0$0 == 0x00e9
                           0000E9  1113 _AD0WINT	=	0x00e9
                           0000EA  1114 G$AD0CM0$0$0 == 0x00ea
                           0000EA  1115 _AD0CM0	=	0x00ea
                           0000EB  1116 G$AD0CM1$0$0 == 0x00eb
                           0000EB  1117 _AD0CM1	=	0x00eb
                           0000EC  1118 G$AD0BUSY$0$0 == 0x00ec
                           0000EC  1119 _AD0BUSY	=	0x00ec
                           0000ED  1120 G$AD0INT$0$0 == 0x00ed
                           0000ED  1121 _AD0INT	=	0x00ed
                           0000EE  1122 G$AD0TM$0$0 == 0x00ee
                           0000EE  1123 _AD0TM	=	0x00ee
                           0000EF  1124 G$AD0EN$0$0 == 0x00ef
                           0000EF  1125 _AD0EN	=	0x00ef
                           0000E8  1126 G$AD2WINT$0$0 == 0x00e8
                           0000E8  1127 _AD2WINT	=	0x00e8
                           0000E9  1128 G$AD2CM0$0$0 == 0x00e9
                           0000E9  1129 _AD2CM0	=	0x00e9
                           0000EA  1130 G$AD2CM1$0$0 == 0x00ea
                           0000EA  1131 _AD2CM1	=	0x00ea
                           0000EB  1132 G$AD2CM2$0$0 == 0x00eb
                           0000EB  1133 _AD2CM2	=	0x00eb
                           0000EC  1134 G$AD2BUSY$0$0 == 0x00ec
                           0000EC  1135 _AD2BUSY	=	0x00ec
                           0000ED  1136 G$AD2INT$0$0 == 0x00ed
                           0000ED  1137 _AD2INT	=	0x00ed
                           0000EE  1138 G$AD2TM$0$0 == 0x00ee
                           0000EE  1139 _AD2TM	=	0x00ee
                           0000EF  1140 G$AD2EN$0$0 == 0x00ef
                           0000EF  1141 _AD2EN	=	0x00ef
                           0000E8  1142 G$P6_0$0$0 == 0x00e8
                           0000E8  1143 _P6_0	=	0x00e8
                           0000E9  1144 G$P6_1$0$0 == 0x00e9
                           0000E9  1145 _P6_1	=	0x00e9
                           0000EA  1146 G$P6_2$0$0 == 0x00ea
                           0000EA  1147 _P6_2	=	0x00ea
                           0000EB  1148 G$P6_3$0$0 == 0x00eb
                           0000EB  1149 _P6_3	=	0x00eb
                           0000EC  1150 G$P6_4$0$0 == 0x00ec
                           0000EC  1151 _P6_4	=	0x00ec
                           0000ED  1152 G$P6_5$0$0 == 0x00ed
                           0000ED  1153 _P6_5	=	0x00ed
                           0000EE  1154 G$P6_6$0$0 == 0x00ee
                           0000EE  1155 _P6_6	=	0x00ee
                           0000EF  1156 G$P6_7$0$0 == 0x00ef
                           0000EF  1157 _P6_7	=	0x00ef
                           0000F8  1158 G$SPIEN$0$0 == 0x00f8
                           0000F8  1159 _SPIEN	=	0x00f8
                           0000F9  1160 G$TXBMT$0$0 == 0x00f9
                           0000F9  1161 _TXBMT	=	0x00f9
                           0000FA  1162 G$NSSMD0$0$0 == 0x00fa
                           0000FA  1163 _NSSMD0	=	0x00fa
                           0000FB  1164 G$NSSMD1$0$0 == 0x00fb
                           0000FB  1165 _NSSMD1	=	0x00fb
                           0000FC  1166 G$RXOVRN$0$0 == 0x00fc
                           0000FC  1167 _RXOVRN	=	0x00fc
                           0000FD  1168 G$MODF$0$0 == 0x00fd
                           0000FD  1169 _MODF	=	0x00fd
                           0000FE  1170 G$WCOL$0$0 == 0x00fe
                           0000FE  1171 _WCOL	=	0x00fe
                           0000FF  1172 G$SPIF$0$0 == 0x00ff
                           0000FF  1173 _SPIF	=	0x00ff
                           0000F8  1174 G$P7_0$0$0 == 0x00f8
                           0000F8  1175 _P7_0	=	0x00f8
                           0000F9  1176 G$P7_1$0$0 == 0x00f9
                           0000F9  1177 _P7_1	=	0x00f9
                           0000FA  1178 G$P7_2$0$0 == 0x00fa
                           0000FA  1179 _P7_2	=	0x00fa
                           0000FB  1180 G$P7_3$0$0 == 0x00fb
                           0000FB  1181 _P7_3	=	0x00fb
                           0000FC  1182 G$P7_4$0$0 == 0x00fc
                           0000FC  1183 _P7_4	=	0x00fc
                           0000FD  1184 G$P7_5$0$0 == 0x00fd
                           0000FD  1185 _P7_5	=	0x00fd
                           0000FE  1186 G$P7_6$0$0 == 0x00fe
                           0000FE  1187 _P7_6	=	0x00fe
                           0000FF  1188 G$P7_7$0$0 == 0x00ff
                           0000FF  1189 _P7_7	=	0x00ff
                                   1190 ;--------------------------------------------------------
                                   1191 ; overlayable register banks
                                   1192 ;--------------------------------------------------------
                                   1193 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                       1194 	.ds 8
                                   1195 ;--------------------------------------------------------
                                   1196 ; internal ram data
                                   1197 ;--------------------------------------------------------
                                   1198 	.area DSEG    (DATA)
                           000000  1199 G$local_ct$0$0==.
      000000                       1200 _local_ct::
      000000                       1201 	.ds 2
                           000002  1202 G$alien_ct$0$0==.
      000002                       1203 _alien_ct::
      000002                       1204 	.ds 2
                           000004  1205 G$counts$0$0==.
      000004                       1206 _counts::
      000004                       1207 	.ds 2
                                   1208 ;--------------------------------------------------------
                                   1209 ; overlayable items in internal ram 
                                   1210 ;--------------------------------------------------------
                                   1211 	.area	OSEG    (OVR,DATA)
                                   1212 	.area	OSEG    (OVR,DATA)
                                   1213 	.area	OSEG    (OVR,DATA)
                                   1214 	.area	OSEG    (OVR,DATA)
                                   1215 	.area	OSEG    (OVR,DATA)
                                   1216 	.area	OSEG    (OVR,DATA)
                                   1217 ;--------------------------------------------------------
                                   1218 ; Stack segment in internal ram 
                                   1219 ;--------------------------------------------------------
                                   1220 	.area	SSEG
      000000                       1221 __start__stack:
      000000                       1222 	.ds	1
                                   1223 
                                   1224 ;--------------------------------------------------------
                                   1225 ; indirectly addressable internal ram data
                                   1226 ;--------------------------------------------------------
                                   1227 	.area ISEG    (DATA)
                                   1228 ;--------------------------------------------------------
                                   1229 ; absolute internal ram data
                                   1230 ;--------------------------------------------------------
                                   1231 	.area IABS    (ABS,DATA)
                                   1232 	.area IABS    (ABS,DATA)
                                   1233 ;--------------------------------------------------------
                                   1234 ; bit data
                                   1235 ;--------------------------------------------------------
                                   1236 	.area BSEG    (BIT)
                                   1237 ;--------------------------------------------------------
                                   1238 ; paged external ram data
                                   1239 ;--------------------------------------------------------
                                   1240 	.area PSEG    (PAG,XDATA)
                                   1241 ;--------------------------------------------------------
                                   1242 ; external ram data
                                   1243 ;--------------------------------------------------------
                                   1244 	.area XSEG    (XDATA)
                                   1245 ;--------------------------------------------------------
                                   1246 ; absolute external ram data
                                   1247 ;--------------------------------------------------------
                                   1248 	.area XABS    (ABS,XDATA)
                                   1249 ;--------------------------------------------------------
                                   1250 ; external initialized ram data
                                   1251 ;--------------------------------------------------------
                                   1252 	.area XISEG   (XDATA)
                                   1253 	.area HOME    (CODE)
                                   1254 	.area GSINIT0 (CODE)
                                   1255 	.area GSINIT1 (CODE)
                                   1256 	.area GSINIT2 (CODE)
                                   1257 	.area GSINIT3 (CODE)
                                   1258 	.area GSINIT4 (CODE)
                                   1259 	.area GSINIT5 (CODE)
                                   1260 	.area GSINIT  (CODE)
                                   1261 	.area GSFINAL (CODE)
                                   1262 	.area CSEG    (CODE)
                                   1263 ;--------------------------------------------------------
                                   1264 ; interrupt vector 
                                   1265 ;--------------------------------------------------------
                                   1266 	.area HOME    (CODE)
      000000                       1267 __interrupt_vect:
      000000 02r00r00         [24] 1268 	ljmp	__sdcc_gsinit_startup
      000003 32               [24] 1269 	reti
      000004                       1270 	.ds	7
      00000B 32               [24] 1271 	reti
      00000C                       1272 	.ds	7
      000013 32               [24] 1273 	reti
      000014                       1274 	.ds	7
      00001B 02r02r70         [24] 1275 	ljmp	_Timer1_ISR
                                   1276 ;--------------------------------------------------------
                                   1277 ; global & static initialisations
                                   1278 ;--------------------------------------------------------
                                   1279 	.area HOME    (CODE)
                                   1280 	.area GSINIT  (CODE)
                                   1281 	.area GSFINAL (CODE)
                                   1282 	.area GSINIT  (CODE)
                                   1283 	.globl __sdcc_gsinit_startup
                                   1284 	.globl __sdcc_program_startup
                                   1285 	.globl __start__stack
                                   1286 	.globl __mcs51_genXINIT
                                   1287 	.globl __mcs51_genXRAMCLEAR
                                   1288 	.globl __mcs51_genRAMCLEAR
                           000000  1289 	C$SPI0.c$39$1$59 ==.
                                   1290 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:39: int local_ct = 1;
      000000 75*00 01         [24] 1291 	mov	_local_ct,#0x01
      000003 75*01 00         [24] 1292 	mov	(_local_ct + 1),#0x00
                           000006  1293 	C$SPI0.c$40$1$59 ==.
                                   1294 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:40: int alien_ct = 14;
      000006 75*02 0E         [24] 1295 	mov	_alien_ct,#0x0E
      000009 75*03 00         [24] 1296 	mov	(_alien_ct + 1),#0x00
                           00000C  1297 	C$SPI0.c$41$1$59 ==.
                                   1298 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:41: unsigned int counts =0;
      00000C E4               [12] 1299 	clr	a
      00000D F5*04            [12] 1300 	mov	_counts,a
      00000F F5*05            [12] 1301 	mov	(_counts + 1),a
                                   1302 	.area GSFINAL (CODE)
      000000 02r00r1E         [24] 1303 	ljmp	__sdcc_program_startup
                                   1304 ;--------------------------------------------------------
                                   1305 ; Home
                                   1306 ;--------------------------------------------------------
                                   1307 	.area HOME    (CODE)
                                   1308 	.area HOME    (CODE)
      00001E                       1309 __sdcc_program_startup:
      00001E 02r00r15         [24] 1310 	ljmp	_main
                                   1311 ;	return from main will return to caller
                                   1312 ;--------------------------------------------------------
                                   1313 ; code
                                   1314 ;--------------------------------------------------------
                                   1315 	.area CSEG    (CODE)
                                   1316 ;------------------------------------------------------------
                                   1317 ;Allocation info for local variables in function 'putchar'
                                   1318 ;------------------------------------------------------------
                                   1319 ;c                         Allocated to registers r7 
                                   1320 ;------------------------------------------------------------
                           000000  1321 	G$putchar$0$0 ==.
                           000000  1322 	C$putget.h$18$0$0 ==.
                                   1323 ;	C:/Users/Christina/Documents/MPS/Versions/Lab_03/3.3 - SPI0_loop/putget.h:18: void putchar(char c)
                                   1324 ;	-----------------------------------------
                                   1325 ;	 function putchar
                                   1326 ;	-----------------------------------------
      000000                       1327 _putchar:
                           000007  1328 	ar7 = 0x07
                           000006  1329 	ar6 = 0x06
                           000005  1330 	ar5 = 0x05
                           000004  1331 	ar4 = 0x04
                           000003  1332 	ar3 = 0x03
                           000002  1333 	ar2 = 0x02
                           000001  1334 	ar1 = 0x01
                           000000  1335 	ar0 = 0x00
      000000 AF 82            [24] 1336 	mov	r7,dpl
                           000002  1337 	C$putget.h$20$1$16 ==.
                                   1338 ;	C:/Users/Christina/Documents/MPS/Versions/Lab_03/3.3 - SPI0_loop/putget.h:20: while(!TI0); 
      000002                       1339 00101$:
                           000002  1340 	C$putget.h$21$1$16 ==.
                                   1341 ;	C:/Users/Christina/Documents/MPS/Versions/Lab_03/3.3 - SPI0_loop/putget.h:21: TI0=0;
      000002 10 99 02         [24] 1342 	jbc	_TI0,00112$
      000005 80 FB            [24] 1343 	sjmp	00101$
      000007                       1344 00112$:
                           000007  1345 	C$putget.h$22$1$16 ==.
                                   1346 ;	C:/Users/Christina/Documents/MPS/Versions/Lab_03/3.3 - SPI0_loop/putget.h:22: SBUF0 = c;
      000007 8F 99            [24] 1347 	mov	_SBUF0,r7
                           000009  1348 	C$putget.h$23$1$16 ==.
                           000009  1349 	XG$putchar$0$0 ==.
      000009 22               [24] 1350 	ret
                                   1351 ;------------------------------------------------------------
                                   1352 ;Allocation info for local variables in function 'getchar'
                                   1353 ;------------------------------------------------------------
                                   1354 ;c                         Allocated to registers 
                                   1355 ;------------------------------------------------------------
                           00000A  1356 	G$getchar$0$0 ==.
                           00000A  1357 	C$putget.h$28$1$16 ==.
                                   1358 ;	C:/Users/Christina/Documents/MPS/Versions/Lab_03/3.3 - SPI0_loop/putget.h:28: char getchar(void)
                                   1359 ;	-----------------------------------------
                                   1360 ;	 function getchar
                                   1361 ;	-----------------------------------------
      00000A                       1362 _getchar:
                           00000A  1363 	C$putget.h$31$1$18 ==.
                                   1364 ;	C:/Users/Christina/Documents/MPS/Versions/Lab_03/3.3 - SPI0_loop/putget.h:31: while(!RI0);
      00000A                       1365 00101$:
                           00000A  1366 	C$putget.h$32$1$18 ==.
                                   1367 ;	C:/Users/Christina/Documents/MPS/Versions/Lab_03/3.3 - SPI0_loop/putget.h:32: RI0 =0;
      00000A 10 98 02         [24] 1368 	jbc	_RI0,00112$
      00000D 80 FB            [24] 1369 	sjmp	00101$
      00000F                       1370 00112$:
                           00000F  1371 	C$putget.h$33$1$18 ==.
                                   1372 ;	C:/Users/Christina/Documents/MPS/Versions/Lab_03/3.3 - SPI0_loop/putget.h:33: c = SBUF0;
      00000F E5 99            [12] 1373 	mov	a,_SBUF0
                           000011  1374 	C$putget.h$36$1$18 ==.
                                   1375 ;	C:/Users/Christina/Documents/MPS/Versions/Lab_03/3.3 - SPI0_loop/putget.h:36: return SBUF0;
      000011 85 99 82         [24] 1376 	mov	dpl,_SBUF0
                           000014  1377 	C$putget.h$37$1$18 ==.
                           000014  1378 	XG$getchar$0$0 ==.
      000014 22               [24] 1379 	ret
                                   1380 ;------------------------------------------------------------
                                   1381 ;Allocation info for local variables in function 'main'
                                   1382 ;------------------------------------------------------------
                                   1383 ;c                         Allocated to registers r7 
                                   1384 ;i                         Allocated to registers 
                                   1385 ;d                         Allocated to registers r7 
                                   1386 ;------------------------------------------------------------
                           000015  1387 	G$main$0$0 ==.
                           000015  1388 	C$SPI0.c$43$1$18 ==.
                                   1389 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:43: void main (void)
                                   1390 ;	-----------------------------------------
                                   1391 ;	 function main
                                   1392 ;	-----------------------------------------
      000015                       1393 _main:
                           000015  1394 	C$SPI0.c$49$1$33 ==.
                                   1395 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:49: SFRPAGE = CONFIG_PAGE;
      000015 75 84 0F         [24] 1396 	mov	_SFRPAGE,#0x0F
                           000018  1397 	C$SPI0.c$50$1$33 ==.
                                   1398 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:50: IE |=0x88;
      000018 43 A8 88         [24] 1399 	orl	_IE,#0x88
                           00001B  1400 	C$SPI0.c$51$1$33 ==.
                                   1401 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:51: PT1 = 1;
      00001B D2 BB            [12] 1402 	setb	_PT1
                           00001D  1403 	C$SPI0.c$52$1$33 ==.
                                   1404 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:52: SYSCLK_INIT();
      00001D 12r02r8C         [24] 1405 	lcall	_SYSCLK_INIT
                           000020  1406 	C$SPI0.c$53$1$33 ==.
                                   1407 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:53: Port_IO_Init();
      000020 12r02rEB         [24] 1408 	lcall	_Port_IO_Init
                           000023  1409 	C$SPI0.c$54$1$33 ==.
                                   1410 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:54: Timer_Init();
      000023 12r02rAB         [24] 1411 	lcall	_Timer_Init
                           000026  1412 	C$SPI0.c$55$1$33 ==.
                                   1413 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:55: UART_Init();
      000026 12r02rD3         [24] 1414 	lcall	_UART_Init
                           000029  1415 	C$SPI0.c$56$1$33 ==.
                                   1416 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:56: SPI0_INIT();
      000029 12r03r03         [24] 1417 	lcall	_SPI0_INIT
                           00002C  1418 	C$SPI0.c$57$1$33 ==.
                                   1419 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:57: SFRPAGE = LEGACY_PAGE;//same as UART0_PAGE
      00002C 75 84 00         [24] 1420 	mov	_SFRPAGE,#0x00
                           00002F  1421 	C$SPI0.c$58$1$33 ==.
                                   1422 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:58: printf("\033[2J");
      00002F 74r00            [12] 1423 	mov	a,#___str_0
      000031 C0 E0            [24] 1424 	push	acc
      000033 74s00            [12] 1425 	mov	a,#(___str_0 >> 8)
      000035 C0 E0            [24] 1426 	push	acc
      000037 74 80            [12] 1427 	mov	a,#0x80
      000039 C0 E0            [24] 1428 	push	acc
      00003B 12r00r00         [24] 1429 	lcall	_printf
      00003E 15 81            [12] 1430 	dec	sp
      000040 15 81            [12] 1431 	dec	sp
      000042 15 81            [12] 1432 	dec	sp
                           000044  1433 	C$SPI0.c$59$1$33 ==.
                                   1434 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:59: printf("UART is working");
      000044 74r05            [12] 1435 	mov	a,#___str_1
      000046 C0 E0            [24] 1436 	push	acc
      000048 74s00            [12] 1437 	mov	a,#(___str_1 >> 8)
      00004A C0 E0            [24] 1438 	push	acc
      00004C 74 80            [12] 1439 	mov	a,#0x80
      00004E C0 E0            [24] 1440 	push	acc
      000050 12r00r00         [24] 1441 	lcall	_printf
      000053 15 81            [12] 1442 	dec	sp
      000055 15 81            [12] 1443 	dec	sp
      000057 15 81            [12] 1444 	dec	sp
                           000059  1445 	C$SPI0.c$60$1$33 ==.
                                   1446 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:60: while(1)
      000059                       1447 00107$:
                           000059  1448 	C$SPI0.c$63$2$34 ==.
                                   1449 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:63: if(RI0)
                           000059  1450 	C$SPI0.c$65$3$35 ==.
                                   1451 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:65: RI0 = 0;
      000059 10 98 02         [24] 1452 	jbc	_RI0,00130$
      00005C 80 FB            [24] 1453 	sjmp	00107$
      00005E                       1454 00130$:
                           00005E  1455 	C$SPI0.c$66$3$35 ==.
                                   1456 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:66: c = SBUF0;
      00005E AF 99            [24] 1457 	mov	r7,_SBUF0
                           000060  1458 	C$SPI0.c$67$3$35 ==.
                                   1459 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:67: local(c);
      000060 8F 82            [24] 1460 	mov	dpl,r7
      000062 C0 07            [24] 1461 	push	ar7
      000064 12r00r9A         [24] 1462 	lcall	_local
      000067 D0 07            [24] 1463 	pop	ar7
                           000069  1464 	C$SPI0.c$68$3$35 ==.
                                   1465 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:68: write(c);
      000069 8F 82            [24] 1466 	mov	dpl,r7
      00006B 12r01rEF         [24] 1467 	lcall	_write
                           00006E  1468 	C$SPI0.c$69$3$35 ==.
                                   1469 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:69: SFRPAGE = UART0_PAGE;
      00006E 75 84 00         [24] 1470 	mov	_SFRPAGE,#0x00
                           000071  1471 	C$SPI0.c$70$3$35 ==.
                                   1472 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:70: for (i=0;i<101;i++);
      000071 7E 65            [12] 1473 	mov	r6,#0x65
      000073 7F 00            [12] 1474 	mov	r7,#0x00
      000075                       1475 00111$:
      000075 1E               [12] 1476 	dec	r6
      000076 BE FF 01         [24] 1477 	cjne	r6,#0xFF,00131$
      000079 1F               [12] 1478 	dec	r7
      00007A                       1479 00131$:
      00007A EE               [12] 1480 	mov	a,r6
      00007B 4F               [12] 1481 	orl	a,r7
      00007C 70 F7            [24] 1482 	jnz	00111$
                           00007E  1483 	C$SPI0.c$71$3$35 ==.
                                   1484 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:71: d = read();
      00007E 12r01r93         [24] 1485 	lcall	_read
      000081 AF 82            [24] 1486 	mov	r7,dpl
                           000083  1487 	C$SPI0.c$72$3$35 ==.
                                   1488 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:72: SPIF =0;
      000083 C2 FF            [12] 1489 	clr	_SPIF
                           000085  1490 	C$SPI0.c$73$3$35 ==.
                                   1491 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:73: SFRPAGE = UART0_PAGE;
      000085 75 84 00         [24] 1492 	mov	_SFRPAGE,#0x00
                           000088  1493 	C$SPI0.c$74$3$35 ==.
                                   1494 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:74: foreign(d);
      000088 8F 82            [24] 1495 	mov	dpl,r7
      00008A C0 07            [24] 1496 	push	ar7
      00008C 12r01r0C         [24] 1497 	lcall	_foreign
      00008F D0 07            [24] 1498 	pop	ar7
                           000091  1499 	C$SPI0.c$75$3$35 ==.
                                   1500 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:75: if(d == 0x7F){dummy();}
      000091 BF 7F C5         [24] 1501 	cjne	r7,#0x7F,00107$
      000094 12r02r12         [24] 1502 	lcall	_dummy
      000097 80 C0            [24] 1503 	sjmp	00107$
                           000099  1504 	C$SPI0.c$79$1$33 ==.
                           000099  1505 	XG$main$0$0 ==.
      000099 22               [24] 1506 	ret
                                   1507 ;------------------------------------------------------------
                                   1508 ;Allocation info for local variables in function 'local'
                                   1509 ;------------------------------------------------------------
                                   1510 ;c                         Allocated to registers r7 
                                   1511 ;------------------------------------------------------------
                           00009A  1512 	G$local$0$0 ==.
                           00009A  1513 	C$SPI0.c$80$1$33 ==.
                                   1514 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:80: void local(char c)
                                   1515 ;	-----------------------------------------
                                   1516 ;	 function local
                                   1517 ;	-----------------------------------------
      00009A                       1518 _local:
      00009A AF 82            [24] 1519 	mov	r7,dpl
                           00009C  1520 	C$SPI0.c$82$1$38 ==.
                                   1521 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:82: printf("\033[%d;1H",local_ct);
      00009C C0 07            [24] 1522 	push	ar7
      00009E C0*00            [24] 1523 	push	_local_ct
      0000A0 C0*01            [24] 1524 	push	(_local_ct + 1)
      0000A2 74r15            [12] 1525 	mov	a,#___str_2
      0000A4 C0 E0            [24] 1526 	push	acc
      0000A6 74s00            [12] 1527 	mov	a,#(___str_2 >> 8)
      0000A8 C0 E0            [24] 1528 	push	acc
      0000AA 74 80            [12] 1529 	mov	a,#0x80
      0000AC C0 E0            [24] 1530 	push	acc
      0000AE 12r00r00         [24] 1531 	lcall	_printf
      0000B1 E5 81            [12] 1532 	mov	a,sp
      0000B3 24 FB            [12] 1533 	add	a,#0xfb
      0000B5 F5 81            [12] 1534 	mov	sp,a
      0000B7 D0 07            [24] 1535 	pop	ar7
                           0000B9  1536 	C$SPI0.c$83$1$38 ==.
                                   1537 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:83: if(local_ct < 13){local_ct++;}
      0000B9 C3               [12] 1538 	clr	c
      0000BA E5*00            [12] 1539 	mov	a,_local_ct
      0000BC 94 0D            [12] 1540 	subb	a,#0x0D
      0000BE E5*01            [12] 1541 	mov	a,(_local_ct + 1)
      0000C0 64 80            [12] 1542 	xrl	a,#0x80
      0000C2 94 80            [12] 1543 	subb	a,#0x80
      0000C4 50 0A            [24] 1544 	jnc	00102$
      0000C6 05*00            [12] 1545 	inc	_local_ct
      0000C8 E4               [12] 1546 	clr	a
      0000C9 B5*00 38         [24] 1547 	cjne	a,_local_ct,00104$
      0000CC 05*01            [12] 1548 	inc	(_local_ct + 1)
      0000CE 80 34            [24] 1549 	sjmp	00104$
      0000D0                       1550 00102$:
                           0000D0  1551 	C$SPI0.c$84$2$40 ==.
                                   1552 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:84: else{printf("\033[1J");local_ct=2;printf("\033[1;1H");}
      0000D0 C0 07            [24] 1553 	push	ar7
      0000D2 74r1D            [12] 1554 	mov	a,#___str_3
      0000D4 C0 E0            [24] 1555 	push	acc
      0000D6 74s00            [12] 1556 	mov	a,#(___str_3 >> 8)
      0000D8 C0 E0            [24] 1557 	push	acc
      0000DA 74 80            [12] 1558 	mov	a,#0x80
      0000DC C0 E0            [24] 1559 	push	acc
      0000DE 12r00r00         [24] 1560 	lcall	_printf
      0000E1 15 81            [12] 1561 	dec	sp
      0000E3 15 81            [12] 1562 	dec	sp
      0000E5 15 81            [12] 1563 	dec	sp
      0000E7 75*00 02         [24] 1564 	mov	_local_ct,#0x02
      0000EA 75*01 00         [24] 1565 	mov	(_local_ct + 1),#0x00
      0000ED 74r22            [12] 1566 	mov	a,#___str_4
      0000EF C0 E0            [24] 1567 	push	acc
      0000F1 74s00            [12] 1568 	mov	a,#(___str_4 >> 8)
      0000F3 C0 E0            [24] 1569 	push	acc
      0000F5 74 80            [12] 1570 	mov	a,#0x80
      0000F7 C0 E0            [24] 1571 	push	acc
      0000F9 12r00r00         [24] 1572 	lcall	_printf
      0000FC 15 81            [12] 1573 	dec	sp
      0000FE 15 81            [12] 1574 	dec	sp
      000100 15 81            [12] 1575 	dec	sp
      000102 D0 07            [24] 1576 	pop	ar7
                           000104  1577 	C$SPI0.c$85$1$38 ==.
                                   1578 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:85: while(!TI0);
      000104                       1579 00104$:
                           000104  1580 	C$SPI0.c$86$1$38 ==.
                                   1581 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:86: TI0 = 0;
      000104 10 99 02         [24] 1582 	jbc	_TI0,00120$
      000107 80 FB            [24] 1583 	sjmp	00104$
      000109                       1584 00120$:
                           000109  1585 	C$SPI0.c$87$1$38 ==.
                                   1586 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:87: SBUF0 = c;
      000109 8F 99            [24] 1587 	mov	_SBUF0,r7
                           00010B  1588 	C$SPI0.c$88$1$38 ==.
                           00010B  1589 	XG$local$0$0 ==.
      00010B 22               [24] 1590 	ret
                                   1591 ;------------------------------------------------------------
                                   1592 ;Allocation info for local variables in function 'foreign'
                                   1593 ;------------------------------------------------------------
                                   1594 ;c                         Allocated to registers r7 
                                   1595 ;------------------------------------------------------------
                           00010C  1596 	G$foreign$0$0 ==.
                           00010C  1597 	C$SPI0.c$90$1$38 ==.
                                   1598 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:90: void foreign(char c)
                                   1599 ;	-----------------------------------------
                                   1600 ;	 function foreign
                                   1601 ;	-----------------------------------------
      00010C                       1602 _foreign:
      00010C AF 82            [24] 1603 	mov	r7,dpl
                           00010E  1604 	C$SPI0.c$92$1$42 ==.
                                   1605 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:92: printf("\033[%d;1H",alien_ct);
      00010E C0 07            [24] 1606 	push	ar7
      000110 C0*02            [24] 1607 	push	_alien_ct
      000112 C0*03            [24] 1608 	push	(_alien_ct + 1)
      000114 74r15            [12] 1609 	mov	a,#___str_2
      000116 C0 E0            [24] 1610 	push	acc
      000118 74s00            [12] 1611 	mov	a,#(___str_2 >> 8)
      00011A C0 E0            [24] 1612 	push	acc
      00011C 74 80            [12] 1613 	mov	a,#0x80
      00011E C0 E0            [24] 1614 	push	acc
      000120 12r00r00         [24] 1615 	lcall	_printf
      000123 E5 81            [12] 1616 	mov	a,sp
      000125 24 FB            [12] 1617 	add	a,#0xfb
      000127 F5 81            [12] 1618 	mov	sp,a
      000129 D0 07            [24] 1619 	pop	ar7
                           00012B  1620 	C$SPI0.c$93$1$42 ==.
                                   1621 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:93: if(alien_ct < 25){alien_ct++;}
      00012B C3               [12] 1622 	clr	c
      00012C E5*02            [12] 1623 	mov	a,_alien_ct
      00012E 94 19            [12] 1624 	subb	a,#0x19
      000130 E5*03            [12] 1625 	mov	a,(_alien_ct + 1)
      000132 64 80            [12] 1626 	xrl	a,#0x80
      000134 94 80            [12] 1627 	subb	a,#0x80
      000136 50 0A            [24] 1628 	jnc	00102$
      000138 05*02            [12] 1629 	inc	_alien_ct
      00013A E4               [12] 1630 	clr	a
      00013B B5*02 4D         [24] 1631 	cjne	a,_alien_ct,00104$
      00013E 05*03            [12] 1632 	inc	(_alien_ct + 1)
      000140 80 49            [24] 1633 	sjmp	00104$
      000142                       1634 00102$:
                           000142  1635 	C$SPI0.c$94$2$44 ==.
                                   1636 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:94: else{printf("\033[12;1H");printf("\033[J");alien_ct = 12;printf("\033[12;1H");}
      000142 C0 07            [24] 1637 	push	ar7
      000144 74r29            [12] 1638 	mov	a,#___str_5
      000146 C0 E0            [24] 1639 	push	acc
      000148 74s00            [12] 1640 	mov	a,#(___str_5 >> 8)
      00014A C0 E0            [24] 1641 	push	acc
      00014C 74 80            [12] 1642 	mov	a,#0x80
      00014E C0 E0            [24] 1643 	push	acc
      000150 12r00r00         [24] 1644 	lcall	_printf
      000153 15 81            [12] 1645 	dec	sp
      000155 15 81            [12] 1646 	dec	sp
      000157 15 81            [12] 1647 	dec	sp
      000159 74r31            [12] 1648 	mov	a,#___str_6
      00015B C0 E0            [24] 1649 	push	acc
      00015D 74s00            [12] 1650 	mov	a,#(___str_6 >> 8)
      00015F C0 E0            [24] 1651 	push	acc
      000161 74 80            [12] 1652 	mov	a,#0x80
      000163 C0 E0            [24] 1653 	push	acc
      000165 12r00r00         [24] 1654 	lcall	_printf
      000168 15 81            [12] 1655 	dec	sp
      00016A 15 81            [12] 1656 	dec	sp
      00016C 15 81            [12] 1657 	dec	sp
      00016E 75*02 0C         [24] 1658 	mov	_alien_ct,#0x0C
      000171 75*03 00         [24] 1659 	mov	(_alien_ct + 1),#0x00
      000174 74r29            [12] 1660 	mov	a,#___str_5
      000176 C0 E0            [24] 1661 	push	acc
      000178 74s00            [12] 1662 	mov	a,#(___str_5 >> 8)
      00017A C0 E0            [24] 1663 	push	acc
      00017C 74 80            [12] 1664 	mov	a,#0x80
      00017E C0 E0            [24] 1665 	push	acc
      000180 12r00r00         [24] 1666 	lcall	_printf
      000183 15 81            [12] 1667 	dec	sp
      000185 15 81            [12] 1668 	dec	sp
      000187 15 81            [12] 1669 	dec	sp
      000189 D0 07            [24] 1670 	pop	ar7
                           00018B  1671 	C$SPI0.c$95$1$42 ==.
                                   1672 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:95: while(!TI0);
      00018B                       1673 00104$:
                           00018B  1674 	C$SPI0.c$96$1$42 ==.
                                   1675 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:96: TI0 = 0;
      00018B 10 99 02         [24] 1676 	jbc	_TI0,00120$
      00018E 80 FB            [24] 1677 	sjmp	00104$
      000190                       1678 00120$:
                           000190  1679 	C$SPI0.c$97$1$42 ==.
                                   1680 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:97: SBUF0 = c;
      000190 8F 99            [24] 1681 	mov	_SBUF0,r7
                           000192  1682 	C$SPI0.c$98$1$42 ==.
                           000192  1683 	XG$foreign$0$0 ==.
      000192 22               [24] 1684 	ret
                                   1685 ;------------------------------------------------------------
                                   1686 ;Allocation info for local variables in function 'read'
                                   1687 ;------------------------------------------------------------
                                   1688 ;i                         Allocated to registers 
                                   1689 ;------------------------------------------------------------
                           000193  1690 	G$read$0$0 ==.
                           000193  1691 	C$SPI0.c$99$1$42 ==.
                                   1692 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:99: char read ()
                                   1693 ;	-----------------------------------------
                                   1694 ;	 function read
                                   1695 ;	-----------------------------------------
      000193                       1696 _read:
                           000193  1697 	C$SPI0.c$102$1$45 ==.
                                   1698 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:102: SFRPAGE = SPI0_PAGE;
      000193 75 84 00         [24] 1699 	mov	_SFRPAGE,#0x00
                           000196  1700 	C$SPI0.c$103$1$45 ==.
                                   1701 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:103: NSSMD0 = 0;
      000196 C2 FA            [12] 1702 	clr	_NSSMD0
                           000198  1703 	C$SPI0.c$104$1$45 ==.
                                   1704 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:104: for (i=0;i<101;i++);
      000198 7E 65            [12] 1705 	mov	r6,#0x65
      00019A 7F 00            [12] 1706 	mov	r7,#0x00
      00019C                       1707 00107$:
      00019C 1E               [12] 1708 	dec	r6
      00019D BE FF 01         [24] 1709 	cjne	r6,#0xFF,00121$
      0001A0 1F               [12] 1710 	dec	r7
      0001A1                       1711 00121$:
      0001A1 EE               [12] 1712 	mov	a,r6
      0001A2 4F               [12] 1713 	orl	a,r7
      0001A3 70 F7            [24] 1714 	jnz	00107$
                           0001A5  1715 	C$SPI0.c$106$1$45 ==.
                                   1716 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:106: while(!SPIF);
      0001A5                       1717 00102$:
      0001A5 30 FF FD         [24] 1718 	jnb	_SPIF,00102$
                           0001A8  1719 	C$SPI0.c$107$1$45 ==.
                                   1720 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:107: return SPI0DAT;
      0001A8 85 9B 82         [24] 1721 	mov	dpl,_SPI0DAT
                           0001AB  1722 	C$SPI0.c$108$1$45 ==.
                           0001AB  1723 	XG$read$0$0 ==.
      0001AB 22               [24] 1724 	ret
                                   1725 ;------------------------------------------------------------
                                   1726 ;Allocation info for local variables in function 'dread'
                                   1727 ;------------------------------------------------------------
                                   1728 ;i                         Allocated to registers r5 r6 
                                   1729 ;dumb                      Allocated to registers r7 
                                   1730 ;------------------------------------------------------------
                           0001AC  1731 	G$dread$0$0 ==.
                           0001AC  1732 	C$SPI0.c$110$1$45 ==.
                                   1733 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:110: unsigned char dread()
                                   1734 ;	-----------------------------------------
                                   1735 ;	 function dread
                                   1736 ;	-----------------------------------------
      0001AC                       1737 _dread:
                           0001AC  1738 	C$SPI0.c$113$1$45 ==.
                                   1739 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:113: char dumb = 0x65;
      0001AC 7F 65            [12] 1740 	mov	r7,#0x65
                           0001AE  1741 	C$SPI0.c$114$1$46 ==.
                                   1742 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:114: SFRPAGE = SPI0_PAGE;
      0001AE 75 84 00         [24] 1743 	mov	_SFRPAGE,#0x00
                           0001B1  1744 	C$SPI0.c$115$1$46 ==.
                                   1745 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:115: NSSMD0 = 0;
      0001B1 C2 FA            [12] 1746 	clr	_NSSMD0
                           0001B3  1747 	C$SPI0.c$116$1$46 ==.
                                   1748 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:116: for (i=0;i<101;i++);
      0001B3 7D 65            [12] 1749 	mov	r5,#0x65
      0001B5 7E 00            [12] 1750 	mov	r6,#0x00
      0001B7                       1751 00114$:
      0001B7 1D               [12] 1752 	dec	r5
      0001B8 BD FF 01         [24] 1753 	cjne	r5,#0xFF,00150$
      0001BB 1E               [12] 1754 	dec	r6
      0001BC                       1755 00150$:
      0001BC ED               [12] 1756 	mov	a,r5
      0001BD 4E               [12] 1757 	orl	a,r6
      0001BE 70 F7            [24] 1758 	jnz	00114$
                           0001C0  1759 	C$SPI0.c$117$1$46 ==.
                                   1760 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:117: while(SPIF){SPIF=0;}//make sure SPIF is not busy
      0001C0                       1761 00102$:
      0001C0 10 FF 02         [24] 1762 	jbc	_SPIF,00152$
      0001C3 80 02            [24] 1763 	sjmp	00104$
      0001C5                       1764 00152$:
      0001C5 80 F9            [24] 1765 	sjmp	00102$
      0001C7                       1766 00104$:
                           0001C7  1767 	C$SPI0.c$118$1$46 ==.
                                   1768 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:118: SPI0DAT = dumb;
      0001C7 8F 9B            [24] 1769 	mov	_SPI0DAT,r7
                           0001C9  1770 	C$SPI0.c$119$1$46 ==.
                                   1771 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:119: while(!SPIF);
      0001C9                       1772 00105$:
      0001C9 30 FF FD         [24] 1773 	jnb	_SPIF,00105$
                           0001CC  1774 	C$SPI0.c$120$1$46 ==.
                                   1775 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:120: NSSMD0 = 1;
      0001CC D2 FA            [12] 1776 	setb	_NSSMD0
                           0001CE  1777 	C$SPI0.c$121$1$46 ==.
                                   1778 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:121: for (i=0;i<101;i++);
      0001CE 7E 65            [12] 1779 	mov	r6,#0x65
      0001D0 7F 00            [12] 1780 	mov	r7,#0x00
      0001D2                       1781 00117$:
      0001D2 1E               [12] 1782 	dec	r6
      0001D3 BE FF 01         [24] 1783 	cjne	r6,#0xFF,00154$
      0001D6 1F               [12] 1784 	dec	r7
      0001D7                       1785 00154$:
      0001D7 EE               [12] 1786 	mov	a,r6
      0001D8 4F               [12] 1787 	orl	a,r7
                           0001D9  1788 	C$SPI0.c$122$1$46 ==.
                                   1789 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:122: counts =1 ;
      0001D9 70 F7            [24] 1790 	jnz	00117$
      0001DB 75*04 01         [24] 1791 	mov	_counts,#0x01
      0001DE F5*05            [12] 1792 	mov	(_counts + 1),a
                           0001E0  1793 	C$SPI0.c$123$1$46 ==.
                                   1794 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:123: while(counts < 2000);
      0001E0                       1795 00109$:
      0001E0 C3               [12] 1796 	clr	c
      0001E1 E5*04            [12] 1797 	mov	a,_counts
      0001E3 94 D0            [12] 1798 	subb	a,#0xD0
      0001E5 E5*05            [12] 1799 	mov	a,(_counts + 1)
      0001E7 94 07            [12] 1800 	subb	a,#0x07
      0001E9 40 F5            [24] 1801 	jc	00109$
                           0001EB  1802 	C$SPI0.c$124$1$46 ==.
                                   1803 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:124: return SPI0DAT;
      0001EB 85 9B 82         [24] 1804 	mov	dpl,_SPI0DAT
                           0001EE  1805 	C$SPI0.c$125$1$46 ==.
                           0001EE  1806 	XG$dread$0$0 ==.
      0001EE 22               [24] 1807 	ret
                                   1808 ;------------------------------------------------------------
                                   1809 ;Allocation info for local variables in function 'write'
                                   1810 ;------------------------------------------------------------
                                   1811 ;c                         Allocated to registers r7 
                                   1812 ;i                         Allocated to registers 
                                   1813 ;------------------------------------------------------------
                           0001EF  1814 	G$write$0$0 ==.
                           0001EF  1815 	C$SPI0.c$127$1$46 ==.
                                   1816 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:127: void write(char c)
                                   1817 ;	-----------------------------------------
                                   1818 ;	 function write
                                   1819 ;	-----------------------------------------
      0001EF                       1820 _write:
      0001EF AF 82            [24] 1821 	mov	r7,dpl
                           0001F1  1822 	C$SPI0.c$130$1$49 ==.
                                   1823 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:130: SFRPAGE = SPI0_PAGE;
      0001F1 75 84 00         [24] 1824 	mov	_SFRPAGE,#0x00
                           0001F4  1825 	C$SPI0.c$131$1$49 ==.
                                   1826 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:131: SPIF = 0;
      0001F4 C2 FF            [12] 1827 	clr	_SPIF
                           0001F6  1828 	C$SPI0.c$132$1$49 ==.
                                   1829 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:132: NSSMD0 = 0;
      0001F6 C2 FA            [12] 1830 	clr	_NSSMD0
                           0001F8  1831 	C$SPI0.c$133$1$49 ==.
                                   1832 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:133: while(SPIF){SPIF=0;}//make sure SPIF is not busy
      0001F8                       1833 00101$:
      0001F8 10 FF 02         [24] 1834 	jbc	_SPIF,00130$
      0001FB 80 02            [24] 1835 	sjmp	00103$
      0001FD                       1836 00130$:
      0001FD 80 F9            [24] 1837 	sjmp	00101$
      0001FF                       1838 00103$:
                           0001FF  1839 	C$SPI0.c$134$1$49 ==.
                                   1840 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:134: SPI0DAT = c;
      0001FF 8F 9B            [24] 1841 	mov	_SPI0DAT,r7
                           000201  1842 	C$SPI0.c$135$1$49 ==.
                                   1843 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:135: while(!SPIF);
      000201                       1844 00104$:
      000201 30 FF FD         [24] 1845 	jnb	_SPIF,00104$
                           000204  1846 	C$SPI0.c$136$1$49 ==.
                                   1847 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:136: for (i=0;i<101;i++);
      000204 7E 65            [12] 1848 	mov	r6,#0x65
      000206 7F 00            [12] 1849 	mov	r7,#0x00
      000208                       1850 00110$:
      000208 1E               [12] 1851 	dec	r6
      000209 BE FF 01         [24] 1852 	cjne	r6,#0xFF,00132$
      00020C 1F               [12] 1853 	dec	r7
      00020D                       1854 00132$:
      00020D EE               [12] 1855 	mov	a,r6
      00020E 4F               [12] 1856 	orl	a,r7
      00020F 70 F7            [24] 1857 	jnz	00110$
                           000211  1858 	C$SPI0.c$137$1$49 ==.
                           000211  1859 	XG$write$0$0 ==.
      000211 22               [24] 1860 	ret
                                   1861 ;------------------------------------------------------------
                                   1862 ;Allocation info for local variables in function 'dummy'
                                   1863 ;------------------------------------------------------------
                                   1864 ;r                         Allocated to registers r7 
                                   1865 ;i                         Allocated to registers 
                                   1866 ;------------------------------------------------------------
                           000212  1867 	G$dummy$0$0 ==.
                           000212  1868 	C$SPI0.c$138$1$49 ==.
                                   1869 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:138: void dummy ()
                                   1870 ;	-----------------------------------------
                                   1871 ;	 function dummy
                                   1872 ;	-----------------------------------------
      000212                       1873 _dummy:
                           000212  1874 	C$SPI0.c$142$1$51 ==.
                                   1875 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:142: r = 0x00;
      000212 7F 00            [12] 1876 	mov	r7,#0x00
                           000214  1877 	C$SPI0.c$145$1$51 ==.
                                   1878 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:145: printf("   you pressed <DEL>");
      000214 C0 07            [24] 1879 	push	ar7
      000216 74r35            [12] 1880 	mov	a,#___str_7
      000218 C0 E0            [24] 1881 	push	acc
      00021A 74s00            [12] 1882 	mov	a,#(___str_7 >> 8)
      00021C C0 E0            [24] 1883 	push	acc
      00021E 74 80            [12] 1884 	mov	a,#0x80
      000220 C0 E0            [24] 1885 	push	acc
      000222 12r00r00         [24] 1886 	lcall	_printf
      000225 15 81            [12] 1887 	dec	sp
      000227 15 81            [12] 1888 	dec	sp
      000229 15 81            [12] 1889 	dec	sp
      00022B D0 07            [24] 1890 	pop	ar7
                           00022D  1891 	C$SPI0.c$146$1$51 ==.
                                   1892 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:146: while(r!=0xFF)
      00022D                       1893 00105$:
      00022D BF FF 02         [24] 1894 	cjne	r7,#0xFF,00132$
      000230 80 3D            [24] 1895 	sjmp	00111$
      000232                       1896 00132$:
                           000232  1897 	C$SPI0.c$148$2$52 ==.
                                   1898 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:148: counts =0 ;
      000232 E4               [12] 1899 	clr	a
      000233 F5*04            [12] 1900 	mov	_counts,a
      000235 F5*05            [12] 1901 	mov	(_counts + 1),a
                           000237  1902 	C$SPI0.c$149$2$52 ==.
                                   1903 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:149: while(counts < 49999);
      000237                       1904 00101$:
      000237 AB*04            [24] 1905 	mov	r3,_counts
      000239 AC*05            [24] 1906 	mov	r4,(_counts + 1)
      00023B 7D 00            [12] 1907 	mov	r5,#0x00
      00023D 7E 00            [12] 1908 	mov	r6,#0x00
      00023F C3               [12] 1909 	clr	c
      000240 EB               [12] 1910 	mov	a,r3
      000241 94 4F            [12] 1911 	subb	a,#0x4F
      000243 EC               [12] 1912 	mov	a,r4
      000244 94 C3            [12] 1913 	subb	a,#0xC3
      000246 ED               [12] 1914 	mov	a,r5
      000247 94 00            [12] 1915 	subb	a,#0x00
      000249 EE               [12] 1916 	mov	a,r6
      00024A 64 80            [12] 1917 	xrl	a,#0x80
      00024C 94 80            [12] 1918 	subb	a,#0x80
      00024E 40 E7            [24] 1919 	jc	00101$
                           000250  1920 	C$SPI0.c$150$2$52 ==.
                                   1921 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:150: r = dread();
      000250 12r01rAC         [24] 1922 	lcall	_dread
      000253 AF 82            [24] 1923 	mov	r7,dpl
                           000255  1924 	C$SPI0.c$151$2$52 ==.
                                   1925 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:151: NSSMD0 = 0;
      000255 C2 FA            [12] 1926 	clr	_NSSMD0
                           000257  1927 	C$SPI0.c$152$2$52 ==.
                                   1928 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:152: foreign(r);
      000257 8F 82            [24] 1929 	mov	dpl,r7
      000259 C0 07            [24] 1930 	push	ar7
      00025B 12r01r0C         [24] 1931 	lcall	_foreign
      00025E D0 07            [24] 1932 	pop	ar7
                           000260  1933 	C$SPI0.c$153$2$52 ==.
                                   1934 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:153: for (i=0;i<101;i++);
      000260 7D 65            [12] 1935 	mov	r5,#0x65
      000262 7E 00            [12] 1936 	mov	r6,#0x00
      000264                       1937 00110$:
      000264 1D               [12] 1938 	dec	r5
      000265 BD FF 01         [24] 1939 	cjne	r5,#0xFF,00134$
      000268 1E               [12] 1940 	dec	r6
      000269                       1941 00134$:
      000269 ED               [12] 1942 	mov	a,r5
      00026A 4E               [12] 1943 	orl	a,r6
      00026B 70 F7            [24] 1944 	jnz	00110$
      00026D 80 BE            [24] 1945 	sjmp	00105$
      00026F                       1946 00111$:
                           00026F  1947 	C$SPI0.c$155$1$51 ==.
                           00026F  1948 	XG$dummy$0$0 ==.
      00026F 22               [24] 1949 	ret
                                   1950 ;------------------------------------------------------------
                                   1951 ;Allocation info for local variables in function 'Timer1_ISR'
                                   1952 ;------------------------------------------------------------
                           000270  1953 	G$Timer1_ISR$0$0 ==.
                           000270  1954 	C$SPI0.c$157$1$51 ==.
                                   1955 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:157: void Timer1_ISR(void) __interrupt 3
                                   1956 ;	-----------------------------------------
                                   1957 ;	 function Timer1_ISR
                                   1958 ;	-----------------------------------------
      000270                       1959 _Timer1_ISR:
      000270 C0 E0            [24] 1960 	push	acc
      000272 C0 D0            [24] 1961 	push	psw
                           000274  1962 	C$SPI0.c$159$1$54 ==.
                                   1963 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:159: SFRPAGE = TIMER01_PAGE;
      000274 75 84 00         [24] 1964 	mov	_SFRPAGE,#0x00
                           000277  1965 	C$SPI0.c$160$1$54 ==.
                                   1966 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:160: TF1 = 0;
      000277 C2 8F            [12] 1967 	clr	_TF1
                           000279  1968 	C$SPI0.c$161$1$54 ==.
                                   1969 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:161: counts ++;
      000279 05*04            [12] 1970 	inc	_counts
      00027B E4               [12] 1971 	clr	a
      00027C B5*04 02         [24] 1972 	cjne	a,_counts,00103$
      00027F 05*05            [12] 1973 	inc	(_counts + 1)
      000281                       1974 00103$:
                           000281  1975 	C$SPI0.c$163$1$54 ==.
                                   1976 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:163: TL1 = 0;
      000281 75 8B 00         [24] 1977 	mov	_TL1,#0x00
                           000284  1978 	C$SPI0.c$164$1$54 ==.
                                   1979 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:164: TH1 = 0;	
      000284 75 8D 00         [24] 1980 	mov	_TH1,#0x00
      000287 D0 D0            [24] 1981 	pop	psw
      000289 D0 E0            [24] 1982 	pop	acc
                           00028B  1983 	C$SPI0.c$165$1$54 ==.
                           00028B  1984 	XG$Timer1_ISR$0$0 ==.
      00028B 32               [24] 1985 	reti
                                   1986 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   1987 ;	eliminated unneeded push/pop dpl
                                   1988 ;	eliminated unneeded push/pop dph
                                   1989 ;	eliminated unneeded push/pop b
                                   1990 ;------------------------------------------------------------
                                   1991 ;Allocation info for local variables in function 'SYSCLK_INIT'
                                   1992 ;------------------------------------------------------------
                                   1993 ;j                         Allocated to registers 
                                   1994 ;------------------------------------------------------------
                           00028C  1995 	G$SYSCLK_INIT$0$0 ==.
                           00028C  1996 	C$SPI0.c$167$1$54 ==.
                                   1997 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:167: void SYSCLK_INIT()
                                   1998 ;	-----------------------------------------
                                   1999 ;	 function SYSCLK_INIT
                                   2000 ;	-----------------------------------------
      00028C                       2001 _SYSCLK_INIT:
                           00028C  2002 	C$SPI0.c$171$1$55 ==.
                                   2003 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:171: SFRPAGE = CONFIG_PAGE;
      00028C 75 84 0F         [24] 2004 	mov	_SFRPAGE,#0x0F
                           00028F  2005 	C$SPI0.c$172$1$55 ==.
                                   2006 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:172: OSCXCN  = 0x67;             // Start external oscillator
      00028F 75 8C 67         [24] 2007 	mov	_OSCXCN,#0x67
                           000292  2008 	C$SPI0.c$173$1$55 ==.
                                   2009 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:173: for(j=0; j < 256; j++);     // Wait for the oscillator to start up.
      000292 7E 00            [12] 2010 	mov	r6,#0x00
      000294 7F 01            [12] 2011 	mov	r7,#0x01
      000296                       2012 00107$:
      000296 1E               [12] 2013 	dec	r6
      000297 BE FF 01         [24] 2014 	cjne	r6,#0xFF,00121$
      00029A 1F               [12] 2015 	dec	r7
      00029B                       2016 00121$:
      00029B EE               [12] 2017 	mov	a,r6
      00029C 4F               [12] 2018 	orl	a,r7
      00029D 70 F7            [24] 2019 	jnz	00107$
                           00029F  2020 	C$SPI0.c$174$1$55 ==.
                                   2021 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:174: while(!(OSCXCN & 0x80));    // Check to see if the Crystal Oscillator Valid Flag is set.
      00029F                       2022 00102$:
      00029F E5 8C            [12] 2023 	mov	a,_OSCXCN
      0002A1 30 E7 FB         [24] 2024 	jnb	acc.7,00102$
                           0002A4  2025 	C$SPI0.c$175$1$55 ==.
                                   2026 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:175: CLKSEL  = 0x01;             // SYSCLK derived from the External Oscillator circuit.
      0002A4 75 97 01         [24] 2027 	mov	_CLKSEL,#0x01
                           0002A7  2028 	C$SPI0.c$176$1$55 ==.
                                   2029 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:176: OSCICN  = 0x00;             // Disable the internal oscillator.
      0002A7 75 8A 00         [24] 2030 	mov	_OSCICN,#0x00
                           0002AA  2031 	C$SPI0.c$177$1$55 ==.
                           0002AA  2032 	XG$SYSCLK_INIT$0$0 ==.
      0002AA 22               [24] 2033 	ret
                                   2034 ;------------------------------------------------------------
                                   2035 ;Allocation info for local variables in function 'Timer_Init'
                                   2036 ;------------------------------------------------------------
                           0002AB  2037 	G$Timer_Init$0$0 ==.
                           0002AB  2038 	C$SPI0.c$179$1$55 ==.
                                   2039 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:179: void Timer_Init()
                                   2040 ;	-----------------------------------------
                                   2041 ;	 function Timer_Init
                                   2042 ;	-----------------------------------------
      0002AB                       2043 _Timer_Init:
                           0002AB  2044 	C$SPI0.c$181$1$56 ==.
                                   2045 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:181: SFRPAGE   = TIMER01_PAGE;
      0002AB 75 84 00         [24] 2046 	mov	_SFRPAGE,#0x00
                           0002AE  2047 	C$SPI0.c$182$1$56 ==.
                                   2048 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:182: TCON      = 0x40;
      0002AE 75 88 40         [24] 2049 	mov	_TCON,#0x40
                           0002B1  2050 	C$SPI0.c$183$1$56 ==.
                                   2051 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:183: TMOD      = 0x20;
      0002B1 75 89 20         [24] 2052 	mov	_TMOD,#0x20
                           0002B4  2053 	C$SPI0.c$184$1$56 ==.
                                   2054 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:184: CKCON     = 0x10;
      0002B4 75 8E 10         [24] 2055 	mov	_CKCON,#0x10
                           0002B7  2056 	C$SPI0.c$185$1$56 ==.
                                   2057 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:185: TH1       = 0xA0;
      0002B7 75 8D A0         [24] 2058 	mov	_TH1,#0xA0
                           0002BA  2059 	C$SPI0.c$186$1$56 ==.
                                   2060 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:186: TL1 = TH1;
      0002BA 85 8D 8B         [24] 2061 	mov	_TL1,_TH1
                           0002BD  2062 	C$SPI0.c$187$1$56 ==.
                                   2063 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:187: SFRPAGE   = TMR2_PAGE;
      0002BD 75 84 00         [24] 2064 	mov	_SFRPAGE,#0x00
                           0002C0  2065 	C$SPI0.c$188$1$56 ==.
                                   2066 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:188: TMR2CN    = 0x04;
      0002C0 75 C8 04         [24] 2067 	mov	_TMR2CN,#0x04
                           0002C3  2068 	C$SPI0.c$189$1$56 ==.
                                   2069 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:189: TMR2CF    = 0x08;
      0002C3 75 C9 08         [24] 2070 	mov	_TMR2CF,#0x08
                           0002C6  2071 	C$SPI0.c$190$1$56 ==.
                                   2072 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:190: TMR2H	  = 0xFF;
      0002C6 75 CD FF         [24] 2073 	mov	_TMR2H,#0xFF
                           0002C9  2074 	C$SPI0.c$191$1$56 ==.
                                   2075 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:191: TMR2L 	  = 0x70;
      0002C9 75 CC 70         [24] 2076 	mov	_TMR2L,#0x70
                           0002CC  2077 	C$SPI0.c$192$1$56 ==.
                                   2078 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:192: RCAP2L    = 0x70;
      0002CC 75 CA 70         [24] 2079 	mov	_RCAP2L,#0x70
                           0002CF  2080 	C$SPI0.c$193$1$56 ==.
                                   2081 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:193: RCAP2H    = 0xFF;
      0002CF 75 CB FF         [24] 2082 	mov	_RCAP2H,#0xFF
                           0002D2  2083 	C$SPI0.c$194$1$56 ==.
                           0002D2  2084 	XG$Timer_Init$0$0 ==.
      0002D2 22               [24] 2085 	ret
                                   2086 ;------------------------------------------------------------
                                   2087 ;Allocation info for local variables in function 'UART_Init'
                                   2088 ;------------------------------------------------------------
                           0002D3  2089 	G$UART_Init$0$0 ==.
                           0002D3  2090 	C$SPI0.c$195$1$56 ==.
                                   2091 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:195: void UART_Init()
                                   2092 ;	-----------------------------------------
                                   2093 ;	 function UART_Init
                                   2094 ;	-----------------------------------------
      0002D3                       2095 _UART_Init:
                           0002D3  2096 	C$SPI0.c$197$1$57 ==.
                                   2097 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:197: SFRPAGE   = UART0_PAGE;//Same as Timer 2 and Timer 1 SFR PAGES
      0002D3 75 84 00         [24] 2098 	mov	_SFRPAGE,#0x00
                           0002D6  2099 	C$SPI0.c$198$1$57 ==.
                                   2100 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:198: TR2		  = 1;//Start Timer 2
      0002D6 D2 CA            [12] 2101 	setb	_TR2
                           0002D8  2102 	C$SPI0.c$199$1$57 ==.
                                   2103 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:199: SCON0     = 0x50;
      0002D8 75 98 50         [24] 2104 	mov	_SCON0,#0x50
                           0002DB  2105 	C$SPI0.c$200$1$57 ==.
                                   2106 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:200: SSTA0   = 0x15;
      0002DB 75 91 15         [24] 2107 	mov	_SSTA0,#0x15
                           0002DE  2108 	C$SPI0.c$201$1$57 ==.
                                   2109 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:201: TI0		  = 1; // Indicate TX0 is ready
      0002DE D2 99            [12] 2110 	setb	_TI0
                           0002E0  2111 	C$SPI0.c$202$1$57 ==.
                                   2112 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:202: TR1		  = 1; //Start Timer 1
      0002E0 D2 8E            [12] 2113 	setb	_TR1
                           0002E2  2114 	C$SPI0.c$203$1$57 ==.
                                   2115 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:203: SFRPAGE   = UART1_PAGE;
      0002E2 75 84 01         [24] 2116 	mov	_SFRPAGE,#0x01
                           0002E5  2117 	C$SPI0.c$204$1$57 ==.
                                   2118 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:204: SCON1     = 0x50;
      0002E5 75 98 50         [24] 2119 	mov	_SCON1,#0x50
                           0002E8  2120 	C$SPI0.c$205$1$57 ==.
                                   2121 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:205: TI1		  = 1; //Indicatie TX1 is ready
      0002E8 D2 99            [12] 2122 	setb	_TI1
                           0002EA  2123 	C$SPI0.c$206$1$57 ==.
                           0002EA  2124 	XG$UART_Init$0$0 ==.
      0002EA 22               [24] 2125 	ret
                                   2126 ;------------------------------------------------------------
                                   2127 ;Allocation info for local variables in function 'Port_IO_Init'
                                   2128 ;------------------------------------------------------------
                           0002EB  2129 	G$Port_IO_Init$0$0 ==.
                           0002EB  2130 	C$SPI0.c$207$1$57 ==.
                                   2131 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:207: void Port_IO_Init()
                                   2132 ;	-----------------------------------------
                                   2133 ;	 function Port_IO_Init
                                   2134 ;	-----------------------------------------
      0002EB                       2135 _Port_IO_Init:
                           0002EB  2136 	C$SPI0.c$209$1$58 ==.
                                   2137 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:209: SFRPAGE   = CONFIG_PAGE;
      0002EB 75 84 0F         [24] 2138 	mov	_SFRPAGE,#0x0F
                           0002EE  2139 	C$SPI0.c$216$1$58 ==.
                                   2140 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:216: P0MDOUT = 0x75;
      0002EE 75 A4 75         [24] 2141 	mov	_P0MDOUT,#0x75
                           0002F1  2142 	C$SPI0.c$217$1$58 ==.
                                   2143 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:217: P0 = 0xAA;
      0002F1 75 80 AA         [24] 2144 	mov	_P0,#0xAA
                           0002F4  2145 	C$SPI0.c$221$1$58 ==.
                                   2146 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:221: WDTCN   = 0xDE;             // Disable watchdog timer.
      0002F4 75 FF DE         [24] 2147 	mov	_WDTCN,#0xDE
                           0002F7  2148 	C$SPI0.c$222$1$58 ==.
                                   2149 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:222: WDTCN   = 0xAD;
      0002F7 75 FF AD         [24] 2150 	mov	_WDTCN,#0xAD
                           0002FA  2151 	C$SPI0.c$223$1$58 ==.
                                   2152 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:223: EA 		  = 1; // enable global interrupts
      0002FA D2 AF            [12] 2153 	setb	_EA
                           0002FC  2154 	C$SPI0.c$224$1$58 ==.
                                   2155 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:224: XBR0      = 0x06;
      0002FC 75 E1 06         [24] 2156 	mov	_XBR0,#0x06
                           0002FF  2157 	C$SPI0.c$225$1$58 ==.
                                   2158 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:225: XBR2      = 0x44;
      0002FF 75 E3 44         [24] 2159 	mov	_XBR2,#0x44
                           000302  2160 	C$SPI0.c$226$1$58 ==.
                           000302  2161 	XG$Port_IO_Init$0$0 ==.
      000302 22               [24] 2162 	ret
                                   2163 ;------------------------------------------------------------
                                   2164 ;Allocation info for local variables in function 'SPI0_INIT'
                                   2165 ;------------------------------------------------------------
                           000303  2166 	G$SPI0_INIT$0$0 ==.
                           000303  2167 	C$SPI0.c$227$1$58 ==.
                                   2168 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:227: void SPI0_INIT()
                                   2169 ;	-----------------------------------------
                                   2170 ;	 function SPI0_INIT
                                   2171 ;	-----------------------------------------
      000303                       2172 _SPI0_INIT:
                           000303  2173 	C$SPI0.c$229$1$59 ==.
                                   2174 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:229: SFRPAGE = SPI0_PAGE;
      000303 75 84 00         [24] 2175 	mov	_SFRPAGE,#0x00
                           000306  2176 	C$SPI0.c$230$1$59 ==.
                                   2177 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:230: SPI0CFG = 0x40;
      000306 75 9A 40         [24] 2178 	mov	_SPI0CFG,#0x40
                           000309  2179 	C$SPI0.c$232$1$59 ==.
                                   2180 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:232: SPI0CN = 0x0D;
      000309 75 F8 0D         [24] 2181 	mov	_SPI0CN,#0x0D
                           00030C  2182 	C$SPI0.c$233$1$59 ==.
                                   2183 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:233: SPI0CKR =  0x26;
      00030C 75 9D 26         [24] 2184 	mov	_SPI0CKR,#0x26
                           00030F  2185 	C$SPI0.c$234$1$59 ==.
                                   2186 ;	C:\Users\Christina\Documents\MPS\Versions\Lab_03\3.3 - SPI0_loop\SPI0.c:234: SPIF = 1;
      00030F D2 FF            [12] 2187 	setb	_SPIF
                           000311  2188 	C$SPI0.c$235$1$59 ==.
                           000311  2189 	XG$SPI0_INIT$0$0 ==.
      000311 22               [24] 2190 	ret
                                   2191 	.area CSEG    (CODE)
                                   2192 	.area CONST   (CODE)
                           000000  2193 FSPI0$__str_0$0$0 == .
      000000                       2194 ___str_0:
      000000 1B                    2195 	.db 0x1B
      000001 5B 32 4A              2196 	.ascii "[2J"
      000004 00                    2197 	.db 0x00
                           000005  2198 FSPI0$__str_1$0$0 == .
      000005                       2199 ___str_1:
      000005 55 41 52 54 20 69 73  2200 	.ascii "UART is working"
             20 77 6F 72 6B 69 6E
             67
      000014 00                    2201 	.db 0x00
                           000015  2202 FSPI0$__str_2$0$0 == .
      000015                       2203 ___str_2:
      000015 1B                    2204 	.db 0x1B
      000016 5B 25 64 3B 31 48     2205 	.ascii "[%d;1H"
      00001C 00                    2206 	.db 0x00
                           00001D  2207 FSPI0$__str_3$0$0 == .
      00001D                       2208 ___str_3:
      00001D 1B                    2209 	.db 0x1B
      00001E 5B 31 4A              2210 	.ascii "[1J"
      000021 00                    2211 	.db 0x00
                           000022  2212 FSPI0$__str_4$0$0 == .
      000022                       2213 ___str_4:
      000022 1B                    2214 	.db 0x1B
      000023 5B 31 3B 31 48        2215 	.ascii "[1;1H"
      000028 00                    2216 	.db 0x00
                           000029  2217 FSPI0$__str_5$0$0 == .
      000029                       2218 ___str_5:
      000029 1B                    2219 	.db 0x1B
      00002A 5B 31 32 3B 31 48     2220 	.ascii "[12;1H"
      000030 00                    2221 	.db 0x00
                           000031  2222 FSPI0$__str_6$0$0 == .
      000031                       2223 ___str_6:
      000031 1B                    2224 	.db 0x1B
      000032 5B 4A                 2225 	.ascii "[J"
      000034 00                    2226 	.db 0x00
                           000035  2227 FSPI0$__str_7$0$0 == .
      000035                       2228 ___str_7:
      000035 20 20 20 79 6F 75 20  2229 	.ascii "   you pressed <DEL>"
             70 72 65 73 73 65 64
             20 3C 44 45 4C 3E
      000049 00                    2230 	.db 0x00
                                   2231 	.area XINIT   (CODE)
                                   2232 	.area CABS    (ABS,CODE)
